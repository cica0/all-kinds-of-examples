!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADD	gen-cpp/tutorial_types.h	/^    ADD = 1,$/;"	e	enum:tutorial::Operation::type
ALLOW	thrift/include/thrift/transport/TSSLSocket.h	/^    ALLOW = 1  \/\/ allow access$/;"	e	enum:apache::thrift::transport::AccessManager::Decision
AM_CPPFLAGS	Makefile	/^AM_CPPFLAGS = $(BOOST_CPPFLAGS) $(LIBEVENT_CPPFLAGS) -I$(top_srcdir)\/lib\/cpp\/src -Igen-cpp$/;"	m
AM_CXXFLAGS	Makefile	/^AM_CXXFLAGS = -Wall -Wextra -pedantic$/;"	m
AM_LDFLAGS	Makefile	/^AM_LDFLAGS = $(BOOST_LDFLAGS) $(LIBEVENT_LDFLAGS)$/;"	m
ARCHITECTURE_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	276;"	d	file:
ARCHITECTURE_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
ARCHITECTURE_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
ARCHITECTURE_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	285;"	d	file:
ARCHITECTURE_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
ARCHITECTURE_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	292;"	d	file:
ARCHITECTURE_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	264;"	d	file:
ARCHITECTURE_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
ARCHITECTURE_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	270;"	d	file:
ARCHITECTURE_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
ARCHITECTURE_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	276;"	d	file:
ARCHITECTURE_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
ARITHMETIC_RIGHT_SHIFT	thrift/include/thrift/config.h	13;"	d
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = subdir-objects serial-tests$/;"	m
AUTOMAKE_VERSION	thrift/include/thrift/config.h	16;"	d
AccessManager	thrift/include/thrift/transport/TSSLSocket.h	/^class AccessManager {$/;"	c	namespace:apache::thrift::transport
BAD_ARGS	thrift/include/thrift/transport/TTransportException.h	/^    BAD_ARGS = 5,$/;"	e	enum:apache::thrift::transport::TTransportException::TTransportExceptionType
BAD_SEQUENCE_ID	thrift/include/thrift/TApplicationException.h	/^    BAD_SEQUENCE_ID = 4,$/;"	e	enum:apache::thrift::TApplicationException::TApplicationExceptionType
BAD_VERSION	thrift/include/thrift/protocol/TProtocolException.h	/^    BAD_VERSION = 4,$/;"	e	enum:apache::thrift::protocol::TProtocolException::TProtocolExceptionType
BISON_USE_PARSER_H_EXTENSION	thrift/include/thrift/config.h	19;"	d
BISON_VERSION	thrift/include/thrift/config.h	22;"	d
BUILT_SOURCES	Makefile	/^BUILT_SOURCES = gen-cpp\/shared_types.cpp \\$/;"	m
BoolFunc	thrift/include/thrift/concurrency/FunctionRunner.h	/^  typedef apache::thrift::stdcxx::function<bool()> BoolFunc;$/;"	t	class:apache::thrift::concurrency::FunctionRunner
BoostThreadFactory	thrift/include/thrift/concurrency/BoostThreadFactory.h	/^class BoostThreadFactory : public ThreadFactory {$/;"	c	namespace:apache::thrift::concurrency
CLOSE_ON_DESTROY	thrift/include/thrift/transport/TFDTransport.h	/^  enum ClosePolicy { NO_CLOSE_ON_DESTROY = 0, CLOSE_ON_DESTROY = 1 };$/;"	e	enum:apache::thrift::transport::TFDTransport::ClosePolicy
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	169;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	175;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	30;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	48;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	69;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	87;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	95;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	100;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	106;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	109;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	163;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	26;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	32;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	75;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	15;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	160;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	31;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	148;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	17;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	121;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	26;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	45;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	82;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	28;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	34;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	41;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	47;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	54;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	91;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	91;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	150;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	35;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	60;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	68;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
CONFIG_H	thrift/include/thrift/config.h	6;"	d
CONNECTION_STACK_LIMIT	thrift/include/thrift/server/TNonblockingServer.h	/^  static const size_t CONNECTION_STACK_LIMIT = 1024;$/;"	m	class:apache::thrift::server::TNonblockingServer
COPY	thrift/include/thrift/transport/TBufferTransports.h	/^  enum MemoryPolicy { OBSERVE = 1, COPY = 2, TAKE_OWNERSHIP = 3 };$/;"	e	enum:apache::thrift::transport::TMemoryBuffer::MemoryPolicy
CORRUPTED_DATA	thrift/include/thrift/transport/TTransportException.h	/^    CORRUPTED_DATA = 6,$/;"	e	enum:apache::thrift::transport::TTransportException::TTransportExceptionType
CRLF	thrift/include/thrift/transport/THttpTransport.h	/^  static const char* CRLF;$/;"	m	class:apache::thrift::transport::THttpTransport
CRLF_LEN	thrift/include/thrift/transport/THttpTransport.h	/^  static const int CRLF_LEN;$/;"	m	class:apache::thrift::transport::THttpTransport
CalculatorClient	gen-cpp/Calculator.h	/^  CalculatorClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) :     ::shared::SharedServiceClient(iprot, oprot) {}$/;"	f	class:tutorial::CalculatorClient
CalculatorClient	gen-cpp/Calculator.h	/^  CalculatorClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) :$/;"	f	class:tutorial::CalculatorClient
CalculatorClient	gen-cpp/Calculator.h	/^class CalculatorClient : virtual public CalculatorIf, public  ::shared::SharedServiceClient {$/;"	c	namespace:tutorial
CalculatorCloneFactory	CppServer.cpp	/^class CalculatorCloneFactory : virtual public CalculatorIfFactory {$/;"	c	file:
CalculatorConcurrentClient	gen-cpp/Calculator.h	/^  CalculatorConcurrentClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) :     ::shared::SharedServiceConcurrentClient(iprot, oprot) {}$/;"	f	class:tutorial::CalculatorConcurrentClient
CalculatorConcurrentClient	gen-cpp/Calculator.h	/^  CalculatorConcurrentClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) :$/;"	f	class:tutorial::CalculatorConcurrentClient
CalculatorConcurrentClient	gen-cpp/Calculator.h	/^class CalculatorConcurrentClient : virtual public CalculatorIf, public  ::shared::SharedServiceConcurrentClient {$/;"	c	namespace:tutorial
CalculatorHandler	CppServer.cpp	/^  CalculatorHandler() {}$/;"	f	class:CalculatorHandler
CalculatorHandler	CppServer.cpp	/^class CalculatorHandler : public CalculatorIf {$/;"	c	file:
CalculatorHandler	gen-cpp/Calculator_server.skeleton.cpp	/^  CalculatorHandler() {$/;"	f	class:CalculatorHandler
CalculatorHandler	gen-cpp/Calculator_server.skeleton.cpp	/^class CalculatorHandler : virtual public CalculatorIf {$/;"	c	file:
CalculatorIf	gen-cpp/Calculator.h	/^class CalculatorIf : virtual public  ::shared::SharedServiceIf {$/;"	c	namespace:tutorial
CalculatorIfFactory	gen-cpp/Calculator.h	/^class CalculatorIfFactory : virtual public  ::shared::SharedServiceIfFactory {$/;"	c	namespace:tutorial
CalculatorIfSingletonFactory	gen-cpp/Calculator.h	/^  CalculatorIfSingletonFactory(const boost::shared_ptr<CalculatorIf>& iface) : iface_(iface) {}$/;"	f	class:tutorial::CalculatorIfSingletonFactory
CalculatorIfSingletonFactory	gen-cpp/Calculator.h	/^class CalculatorIfSingletonFactory : virtual public CalculatorIfFactory {$/;"	c	namespace:tutorial
CalculatorMultiface	gen-cpp/Calculator.h	/^  CalculatorMultiface() {}$/;"	f	class:tutorial::CalculatorMultiface
CalculatorMultiface	gen-cpp/Calculator.h	/^  CalculatorMultiface(std::vector<boost::shared_ptr<CalculatorIf> >& ifaces) : ifaces_(ifaces) {$/;"	f	class:tutorial::CalculatorMultiface
CalculatorMultiface	gen-cpp/Calculator.h	/^class CalculatorMultiface : virtual public CalculatorIf, public  ::shared::SharedServiceMultiface {$/;"	c	namespace:tutorial
CalculatorNull	gen-cpp/Calculator.h	/^class CalculatorNull : virtual public CalculatorIf , virtual public  ::shared::SharedServiceNull {$/;"	c	namespace:tutorial
CalculatorProcessor	gen-cpp/Calculator.h	/^  CalculatorProcessor(boost::shared_ptr<CalculatorIf> iface) :$/;"	f	class:tutorial::CalculatorProcessor
CalculatorProcessor	gen-cpp/Calculator.h	/^class CalculatorProcessor : public  ::shared::SharedServiceProcessor {$/;"	c	namespace:tutorial
CalculatorProcessorFactory	gen-cpp/Calculator.h	/^  CalculatorProcessorFactory(const ::boost::shared_ptr< CalculatorIfFactory >& handlerFactory) :$/;"	f	class:tutorial::CalculatorProcessorFactory
CalculatorProcessorFactory	gen-cpp/Calculator.h	/^class CalculatorProcessorFactory : public ::apache::thrift::TProcessorFactory {$/;"	c	namespace:tutorial
Calculator_H	gen-cpp/Calculator.h	8;"	d
Calculator_add_args	gen-cpp/Calculator.h	/^  Calculator_add_args() : num1(0), num2(0) {$/;"	f	class:tutorial::Calculator_add_args
Calculator_add_args	gen-cpp/Calculator.h	/^class Calculator_add_args {$/;"	c	namespace:tutorial
Calculator_add_pargs	gen-cpp/Calculator.h	/^class Calculator_add_pargs {$/;"	c	namespace:tutorial
Calculator_add_presult	gen-cpp/Calculator.h	/^class Calculator_add_presult {$/;"	c	namespace:tutorial
Calculator_add_result	gen-cpp/Calculator.h	/^  Calculator_add_result() : success(0) {$/;"	f	class:tutorial::Calculator_add_result
Calculator_add_result	gen-cpp/Calculator.h	/^class Calculator_add_result {$/;"	c	namespace:tutorial
Calculator_calculate_args	gen-cpp/Calculator.h	/^  Calculator_calculate_args() : logid(0) {$/;"	f	class:tutorial::Calculator_calculate_args
Calculator_calculate_args	gen-cpp/Calculator.h	/^class Calculator_calculate_args {$/;"	c	namespace:tutorial
Calculator_calculate_pargs	gen-cpp/Calculator.h	/^class Calculator_calculate_pargs {$/;"	c	namespace:tutorial
Calculator_calculate_presult	gen-cpp/Calculator.h	/^class Calculator_calculate_presult {$/;"	c	namespace:tutorial
Calculator_calculate_result	gen-cpp/Calculator.h	/^  Calculator_calculate_result() : success(0) {$/;"	f	class:tutorial::Calculator_calculate_result
Calculator_calculate_result	gen-cpp/Calculator.h	/^class Calculator_calculate_result {$/;"	c	namespace:tutorial
Calculator_ping_args	gen-cpp/Calculator.h	/^  Calculator_ping_args() {$/;"	f	class:tutorial::Calculator_ping_args
Calculator_ping_args	gen-cpp/Calculator.h	/^class Calculator_ping_args {$/;"	c	namespace:tutorial
Calculator_ping_pargs	gen-cpp/Calculator.h	/^class Calculator_ping_pargs {$/;"	c	namespace:tutorial
Calculator_ping_presult	gen-cpp/Calculator.h	/^class Calculator_ping_presult {$/;"	c	namespace:tutorial
Calculator_ping_result	gen-cpp/Calculator.h	/^  Calculator_ping_result() {$/;"	f	class:tutorial::Calculator_ping_result
Calculator_ping_result	gen-cpp/Calculator.h	/^class Calculator_ping_result {$/;"	c	namespace:tutorial
Calculator_zip_args	gen-cpp/Calculator.h	/^  Calculator_zip_args() {$/;"	f	class:tutorial::Calculator_zip_args
Calculator_zip_args	gen-cpp/Calculator.h	/^class Calculator_zip_args {$/;"	c	namespace:tutorial
Calculator_zip_pargs	gen-cpp/Calculator.h	/^class Calculator_zip_pargs {$/;"	c	namespace:tutorial
ClosePolicy	thrift/include/thrift/transport/TFDTransport.h	/^  enum ClosePolicy { NO_CLOSE_ON_DESTROY = 0, CLOSE_ON_DESTROY = 1 };$/;"	g	class:apache::thrift::transport::TFDTransport
DEC	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
DEC	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	284;"	d	file:
DECREMENT	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^    DECREMENT = 8$/;"	e	enum:apache::thrift::concurrency::PosixThreadFactory::PRIORITY
DEFAULT_BACKLOG	thrift/include/thrift/transport/TServerSocket.h	/^  const static int DEFAULT_BACKLOG = 1024;$/;"	m	class:apache::thrift::transport::TServerSocket
DEFAULT_BUFFER_SIZE	thrift/include/thrift/transport/TBufferTransports.h	/^  static const int DEFAULT_BUFFER_SIZE = 512;$/;"	m	class:apache::thrift::transport::TBufferedTransport
DEFAULT_BUFFER_SIZE	thrift/include/thrift/transport/TBufferTransports.h	/^  static const int DEFAULT_BUFFER_SIZE = 512;$/;"	m	class:apache::thrift::transport::TFramedTransport
DEFAULT_CHUNK_SIZE	thrift/include/thrift/transport/TFileTransport.h	/^  static const uint32_t DEFAULT_CHUNK_SIZE = 16 * 1024 * 1024;$/;"	m	class:apache::thrift::transport::TFileTransport
DEFAULT_CORRUPTED_SLEEP_TIME_US	thrift/include/thrift/transport/TFileTransport.h	/^  static const uint32_t DEFAULT_CORRUPTED_SLEEP_TIME_US = 1 * 1000 * 1000;$/;"	m	class:apache::thrift::transport::TFileTransport
DEFAULT_CRBUF_SIZE	thrift/include/thrift/transport/TZlibTransport.h	/^  static const int DEFAULT_CRBUF_SIZE = 1024;$/;"	m	class:apache::thrift::transport::TZlibTransport
DEFAULT_CWBUF_SIZE	thrift/include/thrift/transport/TZlibTransport.h	/^  static const int DEFAULT_CWBUF_SIZE = 1024;$/;"	m	class:apache::thrift::transport::TZlibTransport
DEFAULT_EOF_SLEEP_TIME_US	thrift/include/thrift/transport/TFileTransport.h	/^  static const uint32_t DEFAULT_EOF_SLEEP_TIME_US = 500 * 1000;$/;"	m	class:apache::thrift::transport::TFileTransport
DEFAULT_EVENT_BUFFER_SIZE	thrift/include/thrift/transport/TFileTransport.h	/^  static const uint32_t DEFAULT_EVENT_BUFFER_SIZE = 10000;$/;"	m	class:apache::thrift::transport::TFileTransport
DEFAULT_FLUSH_MAX_BYTES	thrift/include/thrift/transport/TFileTransport.h	/^  static const uint32_t DEFAULT_FLUSH_MAX_BYTES = 1000 * 1024;$/;"	m	class:apache::thrift::transport::TFileTransport
DEFAULT_FLUSH_MAX_US	thrift/include/thrift/transport/TFileTransport.h	/^  static const uint32_t DEFAULT_FLUSH_MAX_US = 3000000;$/;"	m	class:apache::thrift::transport::TFileTransport
DEFAULT_INITIALIZER	thrift/include/thrift/concurrency/StdMutex.cpp	/^void Mutex::DEFAULT_INITIALIZER(void* arg) {$/;"	f	class:apache::thrift::concurrency::Mutex
DEFAULT_IO_THREADS	thrift/include/thrift/server/TNonblockingServer.h	/^  static const int DEFAULT_IO_THREADS = 1;$/;"	m	class:apache::thrift::server::TNonblockingServer
DEFAULT_MAX_CORRUPTED_EVENTS	thrift/include/thrift/transport/TFileTransport.h	/^  static const uint32_t DEFAULT_MAX_CORRUPTED_EVENTS = 0;$/;"	m	class:apache::thrift::transport::TFileTransport
DEFAULT_MAX_EVENT_SIZE	thrift/include/thrift/transport/TFileTransport.h	/^  static const uint32_t DEFAULT_MAX_EVENT_SIZE = 0;$/;"	m	class:apache::thrift::transport::TFileTransport
DEFAULT_MAX_FRAME_SIZE	thrift/include/thrift/transport/TBufferTransports.h	/^  static const int DEFAULT_MAX_FRAME_SIZE = 256 * 1024 * 1024;$/;"	m	class:apache::thrift::transport::TFramedTransport
DEFAULT_READ_BUFF_SIZE	thrift/include/thrift/transport/TFileTransport.h	/^  static const uint32_t DEFAULT_READ_BUFF_SIZE = 1 * 1024 * 1024;$/;"	m	class:apache::thrift::transport::TFileTransport
DEFAULT_READ_TIMEOUT_MS	thrift/include/thrift/transport/TFileTransport.h	/^  static const int32_t DEFAULT_READ_TIMEOUT_MS = 200;$/;"	m	class:apache::thrift::transport::TFileTransport
DEFAULT_RECURSION_LIMIT	thrift/include/thrift/protocol/TProtocol.h	/^static const uint32_t DEFAULT_RECURSION_LIMIT = 64;$/;"	m	namespace:apache::thrift::protocol
DEFAULT_STRING_LIMIT	thrift/include/thrift/protocol/TDebugProtocol.h	/^  static const int32_t DEFAULT_STRING_LIMIT = 256;$/;"	m	class:apache::thrift::protocol::TDebugProtocol
DEFAULT_STRING_PREFIX_SIZE	thrift/include/thrift/protocol/TDebugProtocol.h	/^  static const int32_t DEFAULT_STRING_PREFIX_SIZE = 16;$/;"	m	class:apache::thrift::protocol::TDebugProtocol
DEFAULT_URBUF_SIZE	thrift/include/thrift/transport/TZlibTransport.h	/^  static const int DEFAULT_URBUF_SIZE = 128;$/;"	m	class:apache::thrift::transport::TZlibTransport
DEFAULT_UWBUF_SIZE	thrift/include/thrift/transport/TZlibTransport.h	/^  static const int DEFAULT_UWBUF_SIZE = 128;$/;"	m	class:apache::thrift::transport::TZlibTransport
DEFAULT_WRITER_THREAD_SLEEP_TIME_US	thrift/include/thrift/transport/TFileTransport.h	/^  static const uint32_t DEFAULT_WRITER_THREAD_SLEEP_TIME_US = 60 * 1000 * 1000;$/;"	m	class:apache::thrift::transport::TFileTransport
DENY	thrift/include/thrift/transport/TSSLSocket.h	/^    DENY = -1, \/\/ deny access$/;"	e	enum:apache::thrift::transport::AccessManager::Decision
DEPTH_LIMIT	thrift/include/thrift/protocol/TProtocolException.h	/^    DEPTH_LIMIT = 6$/;"	e	enum:apache::thrift::protocol::TProtocolException::TProtocolExceptionType
DIVIDE	gen-cpp/tutorial_types.h	/^    DIVIDE = 4$/;"	e	enum:tutorial::Operation::type
Decision	thrift/include/thrift/transport/TSSLSocket.h	/^  enum Decision {$/;"	g	class:apache::thrift::transport::AccessManager
Decision	thrift/include/thrift/transport/TSSLSocket.h	/^typedef AccessManager::Decision Decision;$/;"	t	namespace:apache::thrift::transport
DefaultClientAccessManager	thrift/include/thrift/transport/TSSLSocket.h	/^class DefaultClientAccessManager : public AccessManager {$/;"	c	namespace:apache::thrift::transport
END_OF_FILE	thrift/include/thrift/transport/TTransportException.h	/^    END_OF_FILE = 3,$/;"	e	enum:apache::thrift::transport::TTransportException::TTransportExceptionType
EXTRA_DIST	Makefile	/^EXTRA_DIST = \\$/;"	m
ExpireCallback	thrift/include/thrift/concurrency/ThreadManager.h	/^  typedef apache::thrift::stdcxx::function<void(boost::shared_ptr<Runnable>)> ExpireCallback;$/;"	t	class:apache::thrift::concurrency::ThreadManager
FIFO	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^  enum POLICY { OTHER, FIFO, ROUND_ROBIN };$/;"	e	enum:apache::thrift::concurrency::PosixThreadFactory::POLICY
FunctionRunner	thrift/include/thrift/concurrency/FunctionRunner.h	/^  FunctionRunner(PthreadFuncPtr func, void* arg)$/;"	f	class:apache::thrift::concurrency::FunctionRunner
FunctionRunner	thrift/include/thrift/concurrency/FunctionRunner.h	/^  FunctionRunner(const BoolFunc& cob, int intervalMs) : repFunc_(cob), intervalMs_(intervalMs) {}$/;"	f	class:apache::thrift::concurrency::FunctionRunner
FunctionRunner	thrift/include/thrift/concurrency/FunctionRunner.h	/^  FunctionRunner(const VoidFunc& cob) : func_(cob) {}$/;"	f	class:apache::thrift::concurrency::FunctionRunner
FunctionRunner	thrift/include/thrift/concurrency/FunctionRunner.h	/^class FunctionRunner : public Runnable {$/;"	c	namespace:apache::thrift::concurrency
Guard	thrift/include/thrift/concurrency/Mutex.h	/^  Guard(const Mutex& value, int64_t timeout = 0) : mutex_(&value) {$/;"	f	class:apache::thrift::concurrency::Guard
Guard	thrift/include/thrift/concurrency/Mutex.h	/^class Guard : boost::noncopyable {$/;"	c	namespace:apache::thrift::concurrency
HAVE_ALARM	thrift/include/thrift/config.h	33;"	d
HAVE_ALLOCA	thrift/include/thrift/config.h	36;"	d
HAVE_ALLOCA_H	thrift/include/thrift/config.h	40;"	d
HAVE_ARPA_INET_H	thrift/include/thrift/config.h	43;"	d
HAVE_BOOST	thrift/include/thrift/config.h	46;"	d
HAVE_BZERO	thrift/include/thrift/config.h	49;"	d
HAVE_CLOCK_GETTIME	thrift/include/thrift/config.h	52;"	d
HAVE_CXX11	thrift/include/thrift/config.h	55;"	d
HAVE_DECL_STRERROR_R	thrift/include/thrift/config.h	59;"	d
HAVE_DLFCN_H	thrift/include/thrift/config.h	62;"	d
HAVE_FCNTL_H	thrift/include/thrift/config.h	68;"	d
HAVE_FORK	thrift/include/thrift/config.h	71;"	d
HAVE_FTRUNCATE	thrift/include/thrift/config.h	74;"	d
HAVE_GETHOSTBYNAME	thrift/include/thrift/config.h	77;"	d
HAVE_GETHOSTBYNAME_R	thrift/include/thrift/config.h	80;"	d
HAVE_GETTIMEOFDAY	thrift/include/thrift/config.h	83;"	d
HAVE_INET_NTOA	thrift/include/thrift/config.h	86;"	d
HAVE_INTTYPES_H	thrift/include/thrift/config.h	89;"	d
HAVE_LIBEVENT	thrift/include/thrift/config.h	95;"	d
HAVE_LIBINTL_H	thrift/include/thrift/config.h	98;"	d
HAVE_LIBPTHREAD	thrift/include/thrift/config.h	101;"	d
HAVE_LIBRT	thrift/include/thrift/config.h	104;"	d
HAVE_LIMITS_H	thrift/include/thrift/config.h	110;"	d
HAVE_MALLOC	thrift/include/thrift/config.h	123;"	d
HAVE_MALLOC_H	thrift/include/thrift/config.h	126;"	d
HAVE_MEMMOVE	thrift/include/thrift/config.h	129;"	d
HAVE_MEMORY_H	thrift/include/thrift/config.h	132;"	d
HAVE_MEMSET	thrift/include/thrift/config.h	135;"	d
HAVE_MKDIR	thrift/include/thrift/config.h	138;"	d
HAVE_NETDB_H	thrift/include/thrift/config.h	141;"	d
HAVE_NETINET_IN_H	thrift/include/thrift/config.h	144;"	d
HAVE_OPENSSL_RAND_H	thrift/include/thrift/config.h	147;"	d
HAVE_OPENSSL_SSL_H	thrift/include/thrift/config.h	150;"	d
HAVE_OPENSSL_X509V3_H	thrift/include/thrift/config.h	153;"	d
HAVE_POW	thrift/include/thrift/config.h	156;"	d
HAVE_PTHREAD_H	thrift/include/thrift/config.h	159;"	d
HAVE_PTRDIFF_T	thrift/include/thrift/config.h	162;"	d
HAVE_REALLOC	thrift/include/thrift/config.h	166;"	d
HAVE_REALPATH	thrift/include/thrift/config.h	169;"	d
HAVE_SCHED_GET_PRIORITY_MAX	thrift/include/thrift/config.h	172;"	d
HAVE_SCHED_GET_PRIORITY_MIN	thrift/include/thrift/config.h	175;"	d
HAVE_SCHED_H	thrift/include/thrift/config.h	178;"	d
HAVE_SELECT	thrift/include/thrift/config.h	181;"	d
HAVE_SETLOCALE	thrift/include/thrift/config.h	184;"	d
HAVE_SOCKET	thrift/include/thrift/config.h	187;"	d
HAVE_SQRT	thrift/include/thrift/config.h	190;"	d
HAVE_STDBOOL_H	thrift/include/thrift/config.h	197;"	d
HAVE_STDDEF_H	thrift/include/thrift/config.h	200;"	d
HAVE_STDINT_H	thrift/include/thrift/config.h	203;"	d
HAVE_STDLIB_H	thrift/include/thrift/config.h	206;"	d
HAVE_STRCHR	thrift/include/thrift/config.h	209;"	d
HAVE_STRDUP	thrift/include/thrift/config.h	212;"	d
HAVE_STRERROR	thrift/include/thrift/config.h	215;"	d
HAVE_STRERROR_R	thrift/include/thrift/config.h	218;"	d
HAVE_STRFTIME	thrift/include/thrift/config.h	221;"	d
HAVE_STRINGS_H	thrift/include/thrift/config.h	224;"	d
HAVE_STRING_H	thrift/include/thrift/config.h	227;"	d
HAVE_STRSTR	thrift/include/thrift/config.h	230;"	d
HAVE_STRTOL	thrift/include/thrift/config.h	233;"	d
HAVE_STRTOUL	thrift/include/thrift/config.h	236;"	d
HAVE_SYS_PARAM_H	thrift/include/thrift/config.h	239;"	d
HAVE_SYS_POLL_H	thrift/include/thrift/config.h	242;"	d
HAVE_SYS_RESOURCE_H	thrift/include/thrift/config.h	245;"	d
HAVE_SYS_SELECT_H	thrift/include/thrift/config.h	248;"	d
HAVE_SYS_SOCKET_H	thrift/include/thrift/config.h	251;"	d
HAVE_SYS_STAT_H	thrift/include/thrift/config.h	254;"	d
HAVE_SYS_TIME_H	thrift/include/thrift/config.h	257;"	d
HAVE_SYS_TYPES_H	thrift/include/thrift/config.h	260;"	d
HAVE_SYS_UN_H	thrift/include/thrift/config.h	263;"	d
HAVE_SYS_WAIT_H	thrift/include/thrift/config.h	266;"	d
HAVE_UNISTD_H	thrift/include/thrift/config.h	269;"	d
HAVE_VFORK	thrift/include/thrift/config.h	272;"	d
HAVE_VPRINTF	thrift/include/thrift/config.h	278;"	d
HAVE_WCHAR_H	thrift/include/thrift/config.h	281;"	d
HAVE_WORKING_FORK	thrift/include/thrift/config.h	284;"	d
HAVE_WORKING_VFORK	thrift/include/thrift/config.h	287;"	d
HAVE_ZLIB	thrift/include/thrift/config.h	290;"	d
HEX	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
HEX	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	295;"	d	file:
HIGH	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^    HIGH = 4,$/;"	e	enum:apache::thrift::concurrency::PosixThreadFactory::PRIORITY
HIGHER	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^    HIGHER = 5,$/;"	e	enum:apache::thrift::concurrency::PosixThreadFactory::PRIORITY
HIGHEST	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^    HIGHEST = 6,$/;"	e	enum:apache::thrift::concurrency::PosixThreadFactory::PRIORITY
Handler	gen-cpp/Calculator.h	/^  typedef CalculatorIf Handler;$/;"	t	class:tutorial::CalculatorIfFactory
Handler	gen-cpp/SharedService.h	/^  typedef SharedServiceIf Handler;$/;"	t	class:shared::SharedServiceIfFactory
IDLE_READ_BUFFER_LIMIT	thrift/include/thrift/server/TNonblockingServer.h	/^  static const int IDLE_READ_BUFFER_LIMIT = 1024;$/;"	m	class:apache::thrift::server::TNonblockingServer
IDLE_WRITE_BUFFER_LIMIT	thrift/include/thrift/server/TNonblockingServer.h	/^  static const int IDLE_WRITE_BUFFER_LIMIT = 1024;$/;"	m	class:apache::thrift::server::TNonblockingServer
ID_VOID_MAIN	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	9;"	d	file:
INCREMENT	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^    INCREMENT = 7,$/;"	e	enum:apache::thrift::concurrency::PosixThreadFactory::PRIORITY
INT32CONSTANT	gen-cpp/tutorial_constants.h	/^  int32_t INT32CONSTANT;$/;"	m	class:tutorial::tutorialConstants
INTERNAL_ERROR	thrift/include/thrift/TApplicationException.h	/^    INTERNAL_ERROR = 6,$/;"	e	enum:apache::thrift::TApplicationException::TApplicationExceptionType
INTERNAL_ERROR	thrift/include/thrift/transport/TTransportException.h	/^    INTERNAL_ERROR = 7$/;"	e	enum:apache::thrift::transport::TTransportException::TTransportExceptionType
INTERRUPTED	thrift/include/thrift/transport/TTransportException.h	/^    INTERRUPTED = 4,$/;"	e	enum:apache::thrift::transport::TTransportException::TTransportExceptionType
INVALID_DATA	thrift/include/thrift/protocol/TProtocolException.h	/^    INVALID_DATA = 1,$/;"	e	enum:apache::thrift::protocol::TProtocolException::TProtocolExceptionType
INVALID_MESSAGE_TYPE	thrift/include/thrift/TApplicationException.h	/^    INVALID_MESSAGE_TYPE = 2,$/;"	e	enum:apache::thrift::TApplicationException::TApplicationExceptionType
INVALID_PROTOCOL	thrift/include/thrift/TApplicationException.h	/^    INVALID_PROTOCOL = 9,$/;"	e	enum:apache::thrift::TApplicationException::TApplicationExceptionType
INVALID_TRANSFORM	thrift/include/thrift/TApplicationException.h	/^    INVALID_TRANSFORM = 8,$/;"	e	enum:apache::thrift::TApplicationException::TApplicationExceptionType
IllegalStateException	thrift/include/thrift/concurrency/Exception.h	/^  IllegalStateException() {}$/;"	f	class:apache::thrift::concurrency::IllegalStateException
IllegalStateException	thrift/include/thrift/concurrency/Exception.h	/^  IllegalStateException(const std::string& message) : TException(message) {}$/;"	f	class:apache::thrift::concurrency::IllegalStateException
IllegalStateException	thrift/include/thrift/concurrency/Exception.h	/^class IllegalStateException : public apache::thrift::TException {$/;"	c	namespace:apache::thrift::concurrency
Impl	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  Impl() : ownedMutex_(new Mutex()), conditionVariable_(), mutex_(NULL) { init(ownedMutex_.get()); }$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
Impl	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  Impl(Monitor* monitor) : ownedMutex_(), conditionVariable_(), mutex_(NULL) {$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
Impl	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  Impl(Mutex* mutex) : ownedMutex_(), conditionVariable_(), mutex_(NULL) { init(mutex); }$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
Impl	thrift/include/thrift/concurrency/StdMonitor.cpp	/^class Monitor::Impl {$/;"	c	class:apache::thrift::concurrency::Monitor	file:
Impl	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  Impl(bool detached) : detached_(detached) {}$/;"	f	class:apache::thrift::concurrency::StdThreadFactory::Impl
Impl	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^class StdThreadFactory::Impl {$/;"	c	class:apache::thrift::concurrency::StdThreadFactory	file:
Initializer	thrift/include/thrift/concurrency/Mutex.h	/^  typedef void (*Initializer)(void*);$/;"	t	class:apache::thrift::concurrency::Mutex
InvalidArgumentException	thrift/include/thrift/concurrency/Exception.h	/^class InvalidArgumentException : public apache::thrift::TException {};$/;"	c	namespace:apache::thrift::concurrency
InvalidOperation	gen-cpp/tutorial_types.cpp	/^InvalidOperation::InvalidOperation(const InvalidOperation& other3) : TException() {$/;"	f	class:tutorial::InvalidOperation
InvalidOperation	gen-cpp/tutorial_types.h	/^  InvalidOperation() : whatOp(0), why() {$/;"	f	class:tutorial::InvalidOperation
InvalidOperation	gen-cpp/tutorial_types.h	/^class InvalidOperation : public ::apache::thrift::TException {$/;"	c	namespace:tutorial
JOINING	thrift/include/thrift/concurrency/ThreadManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, JOINING, STOPPING, STOPPED };$/;"	e	enum:apache::thrift::concurrency::ThreadManager::STATE
LATEST	thrift/include/thrift/transport/TSSLSocket.h	/^  LATEST  = TLSv1_2$/;"	e	enum:apache::thrift::transport::SSLProtocol
LIBEVENT_VERSION_MAJOR	thrift/include/thrift/server/TNonblockingServer.h	60;"	d
LIBEVENT_VERSION_MINOR	thrift/include/thrift/server/TNonblockingServer.h	61;"	d
LIBEVENT_VERSION_REL	thrift/include/thrift/server/TNonblockingServer.h	62;"	d
LIST	thrift/include/thrift/protocol/TDebugProtocol.h	/^  enum write_state_t { UNINIT, STRUCT, LIST, SET, MAP_KEY, MAP_VALUE };$/;"	e	enum:apache::thrift::protocol::TDebugProtocol::write_state_t
LISTEN_BACKLOG	thrift/include/thrift/server/TNonblockingServer.h	/^  static const int LISTEN_BACKLOG = 1024;$/;"	m	class:apache::thrift::server::TNonblockingServer
LOGICAL_RIGHT_SHIFT	thrift/include/thrift/config.h	296;"	d
LOW	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^    LOW = 2,$/;"	e	enum:apache::thrift::concurrency::PosixThreadFactory::PRIORITY
LOWER	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^    LOWER = 1,$/;"	e	enum:apache::thrift::concurrency::PosixThreadFactory::PRIORITY
LOWEST	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^    LOWEST = 0,$/;"	e	enum:apache::thrift::concurrency::PosixThreadFactory::PRIORITY
LSTAT_FOLLOWS_SLASHED_SYMLINK	thrift/include/thrift/config.h	300;"	d
LT_OBJDIR	thrift/include/thrift/config.h	304;"	d
LookaheadReader	thrift/include/thrift/protocol/TJSONProtocol.h	/^    LookaheadReader(TTransport& trans) : trans_(&trans), hasData_(false) {}$/;"	f	class:apache::thrift::protocol::TJSONProtocol::LookaheadReader
LookaheadReader	thrift/include/thrift/protocol/TJSONProtocol.h	/^  class LookaheadReader {$/;"	c	class:apache::thrift::protocol::TJSONProtocol
MAPCONSTANT	gen-cpp/tutorial_constants.h	/^  std::map<std::string, std::string>  MAPCONSTANT;$/;"	m	class:tutorial::tutorialConstants
MAP_KEY	thrift/include/thrift/protocol/TDebugProtocol.h	/^  enum write_state_t { UNINIT, STRUCT, LIST, SET, MAP_KEY, MAP_VALUE };$/;"	e	enum:apache::thrift::protocol::TDebugProtocol::write_state_t
MAP_VALUE	thrift/include/thrift/protocol/TDebugProtocol.h	/^  enum write_state_t { UNINIT, STRUCT, LIST, SET, MAP_KEY, MAP_VALUE };$/;"	e	enum:apache::thrift::protocol::TDebugProtocol::write_state_t
MAX_ACTIVE_PROCESSORS	thrift/include/thrift/server/TNonblockingServer.h	/^  static const int MAX_ACTIVE_PROCESSORS = INT_MAX;$/;"	m	class:apache::thrift::server::TNonblockingServer
MAX_CONNECTIONS	thrift/include/thrift/server/TNonblockingServer.h	/^  static const int MAX_CONNECTIONS = INT_MAX;$/;"	m	class:apache::thrift::server::TNonblockingServer
MAX_FRAME_SIZE	thrift/include/thrift/server/TNonblockingServer.h	/^  static const int MAX_FRAME_SIZE = 256 * 1024 * 1024;$/;"	m	class:apache::thrift::server::TNonblockingServer
MIN_DIRECT_DEFLATE_SIZE	thrift/include/thrift/transport/TZlibTransport.h	/^  static const uint32_t MIN_DIRECT_DEFLATE_SIZE = 32;$/;"	m	class:apache::thrift::transport::TZlibTransport
MISSING_RESULT	thrift/include/thrift/TApplicationException.h	/^    MISSING_RESULT = 5,$/;"	e	enum:apache::thrift::TApplicationException::TApplicationExceptionType
MONITOR_CACHE_SIZE	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  enum {MONITOR_CACHE_SIZE = 10};$/;"	e	enum:apache::thrift::async::TConcurrentClientSyncInfo::__anon1
MS_PER_S	thrift/include/thrift/concurrency/Util.h	/^  static const int64_t MS_PER_S = 1000LL;$/;"	m	class:apache::thrift::concurrency::Util
MULTIPLY	gen-cpp/tutorial_types.h	/^    MULTIPLY = 3,$/;"	e	enum:tutorial::Operation::type
MemoryPolicy	thrift/include/thrift/transport/TBufferTransports.h	/^  enum MemoryPolicy { OBSERVE = 1, COPY = 2, TAKE_OWNERSHIP = 3 };$/;"	g	class:apache::thrift::transport::TMemoryBuffer
Monitor	thrift/include/thrift/concurrency/Monitor.h	/^class Monitor : boost::noncopyable {$/;"	c	namespace:apache::thrift::concurrency
Monitor	thrift/include/thrift/concurrency/StdMonitor.cpp	/^Monitor::Monitor() : impl_(new Monitor::Impl()) {$/;"	f	class:apache::thrift::concurrency::Monitor
Monitor	thrift/include/thrift/concurrency/StdMonitor.cpp	/^Monitor::Monitor(Monitor* monitor) : impl_(new Monitor::Impl(monitor)) {$/;"	f	class:apache::thrift::concurrency::Monitor
Monitor	thrift/include/thrift/concurrency/StdMonitor.cpp	/^Monitor::Monitor(Mutex* mutex) : impl_(new Monitor::Impl(mutex)) {$/;"	f	class:apache::thrift::concurrency::Monitor
MonitorMap	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  typedef std::map<int32_t, MonitorPtr> MonitorMap;$/;"	t	class:apache::thrift::async::TConcurrentClientSyncInfo
MonitorPtr	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  typedef boost::shared_ptr< ::apache::thrift::concurrency::Monitor> MonitorPtr;$/;"	t	class:apache::thrift::async::TConcurrentClientSyncInfo
Mutex	thrift/include/thrift/concurrency/Mutex.h	/^class Mutex {$/;"	c	namespace:apache::thrift::concurrency
Mutex	thrift/include/thrift/concurrency/StdMutex.cpp	/^Mutex::Mutex(Initializer init) : impl_(new Mutex::impl()) {$/;"	f	class:apache::thrift::concurrency::Mutex
MutexWaitCallback	thrift/include/thrift/concurrency/Mutex.h	/^typedef void (*MutexWaitCallback)(const void* id, int64_t waitTimeMicros);$/;"	t	namespace:apache::thrift::concurrency
MyInteger	gen-cpp/tutorial_types.h	/^typedef int32_t MyInteger;$/;"	t	namespace:tutorial
NEGATIVE_SIZE	thrift/include/thrift/protocol/TProtocolException.h	/^    NEGATIVE_SIZE = 2,$/;"	e	enum:apache::thrift::protocol::TProtocolException::TProtocolExceptionType
NORMAL	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^    NORMAL = 3,$/;"	e	enum:apache::thrift::concurrency::PosixThreadFactory::PRIORITY
NOT_IMPLEMENTED	thrift/include/thrift/protocol/TProtocolException.h	/^    NOT_IMPLEMENTED = 5,$/;"	e	enum:apache::thrift::protocol::TProtocolException::TProtocolExceptionType
NOT_OPEN	thrift/include/thrift/transport/TTransportException.h	/^    NOT_OPEN = 1,$/;"	e	enum:apache::thrift::transport::TTransportException::TTransportExceptionType
NO_CLOSE_ON_DESTROY	thrift/include/thrift/transport/TFDTransport.h	/^  enum ClosePolicy { NO_CLOSE_ON_DESTROY = 0, CLOSE_ON_DESTROY = 1 };$/;"	e	enum:apache::thrift::transport::TFDTransport::ClosePolicy
NO_TAIL_READ_TIMEOUT	thrift/include/thrift/transport/TFileTransport.h	/^  static const int32_t NO_TAIL_READ_TIMEOUT = 0;$/;"	m	class:apache::thrift::transport::TFileTransport
NS_PER_MS	thrift/include/thrift/concurrency/Util.h	/^  static const int64_t NS_PER_MS = NS_PER_S \/ MS_PER_S;$/;"	m	class:apache::thrift::concurrency::Util
NS_PER_S	thrift/include/thrift/concurrency/Util.h	/^  static const int64_t NS_PER_S = 1000000000LL;$/;"	m	class:apache::thrift::concurrency::Util
NS_PER_US	thrift/include/thrift/concurrency/Util.h	/^  static const int64_t NS_PER_US = NS_PER_S \/ US_PER_S;$/;"	m	class:apache::thrift::concurrency::Util
NoStarveReadWriteMutex	thrift/include/thrift/concurrency/Mutex.h	/^class NoStarveReadWriteMutex : public ReadWriteMutex {$/;"	c	namespace:apache::thrift::concurrency
NoSuchTaskException	thrift/include/thrift/concurrency/Exception.h	/^class NoSuchTaskException : public apache::thrift::TException {};$/;"	c	namespace:apache::thrift::concurrency
OBSERVE	thrift/include/thrift/transport/TBufferTransports.h	/^  enum MemoryPolicy { OBSERVE = 1, COPY = 2, TAKE_OWNERSHIP = 3 };$/;"	e	enum:apache::thrift::transport::TMemoryBuffer::MemoryPolicy
OTHER	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^  enum POLICY { OTHER, FIFO, ROUND_ROBIN };$/;"	e	enum:apache::thrift::concurrency::PosixThreadFactory::POLICY
Operation	gen-cpp/tutorial_types.h	/^struct Operation {$/;"	s	namespace:tutorial
PACKAGE	thrift/include/thrift/config.h	307;"	d
PACKAGE_BUGREPORT	thrift/include/thrift/config.h	310;"	d
PACKAGE_NAME	thrift/include/thrift/config.h	313;"	d
PACKAGE_STRING	thrift/include/thrift/config.h	316;"	d
PACKAGE_TARNAME	thrift/include/thrift/config.h	319;"	d
PACKAGE_URL	thrift/include/thrift/config.h	322;"	d
PACKAGE_VERSION	thrift/include/thrift/config.h	325;"	d
PEEKPROCESSOR_H	thrift/include/thrift/processor/PeekProcessor.h	21;"	d
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	205;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	208;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	211;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	217;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	241;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	250;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	259;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	181;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	199;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	202;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	250;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
POLICY	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^  enum POLICY { OTHER, FIFO, ROUND_ROBIN };$/;"	g	class:apache::thrift::concurrency::PosixThreadFactory
PRIORITY	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^  enum PRIORITY {$/;"	g	class:apache::thrift::concurrency::PosixThreadFactory
PROTOCOL_ERROR	thrift/include/thrift/TApplicationException.h	/^    PROTOCOL_ERROR = 7,$/;"	e	enum:apache::thrift::TApplicationException::TApplicationExceptionType
PROTOCOL_ID	thrift/include/thrift/protocol/TCompactProtocol.h	/^  static const int8_t PROTOCOL_ID = (int8_t)0x82u;$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
PeekProcessor	thrift/include/thrift/processor/PeekProcessor.h	/^class PeekProcessor : public apache::thrift::TProcessor {$/;"	c	namespace:apache::thrift::processor
PlatformThreadFactory	thrift/include/thrift/concurrency/PlatformThreadFactory.h	/^  typedef BoostThreadFactory PlatformThreadFactory;$/;"	t	namespace:apache::thrift::concurrency
PosixThreadFactory	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^class PosixThreadFactory : public ThreadFactory {$/;"	c	namespace:apache::thrift::concurrency
ProcessFunction	gen-cpp/Calculator.h	/^  typedef  void (CalculatorProcessor::*ProcessFunction)(int32_t, ::apache::thrift::protocol::TProtocol*, ::apache::thrift::protocol::TProtocol*, void*);$/;"	t	class:tutorial::CalculatorProcessor
ProcessFunction	gen-cpp/SharedService.h	/^  typedef  void (SharedServiceProcessor::*ProcessFunction)(int32_t, ::apache::thrift::protocol::TProtocol*, ::apache::thrift::protocol::TProtocol*, void*);$/;"	t	class:shared::SharedServiceProcessor
ProcessMap	gen-cpp/Calculator.h	/^  typedef std::map<std::string, ProcessFunction> ProcessMap;$/;"	t	class:tutorial::CalculatorProcessor
ProcessMap	gen-cpp/SharedService.h	/^  typedef std::map<std::string, ProcessFunction> ProcessMap;$/;"	t	class:shared::SharedServiceProcessor
PthreadFuncPtr	thrift/include/thrift/concurrency/FunctionRunner.h	/^  typedef void* (*PthreadFuncPtr)(void* arg);$/;"	t	class:apache::thrift::concurrency::FunctionRunner
READ	thrift/include/thrift/transport/TFileTransport.h	/^  enum mode { WRITE, READ };$/;"	e	enum:apache::thrift::transport::TFileTransportBuffer::mode
RESIZE_BUFFER_EVERY_N	thrift/include/thrift/server/TNonblockingServer.h	/^  static const int RESIZE_BUFFER_EVERY_N = 512;$/;"	m	class:apache::thrift::server::TNonblockingServer
RETSIGTYPE	thrift/include/thrift/config.h	328;"	d
ROUND_ROBIN	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^  enum POLICY { OTHER, FIFO, ROUND_ROBIN };$/;"	e	enum:apache::thrift::concurrency::PosixThreadFactory::POLICY
RWGuard	thrift/include/thrift/concurrency/Mutex.h	/^  RWGuard(const ReadWriteMutex& value, RWGuardType type) : rw_mutex_(value) {$/;"	f	class:apache::thrift::concurrency::RWGuard
RWGuard	thrift/include/thrift/concurrency/Mutex.h	/^  RWGuard(const ReadWriteMutex& value, bool write = false) : rw_mutex_(value) {$/;"	f	class:apache::thrift::concurrency::RWGuard
RWGuard	thrift/include/thrift/concurrency/Mutex.h	/^class RWGuard : boost::noncopyable {$/;"	c	namespace:apache::thrift::concurrency
RWGuardType	thrift/include/thrift/concurrency/Mutex.h	/^enum RWGuardType { RW_READ = 0, RW_WRITE = 1 };$/;"	g	namespace:apache::thrift::concurrency
RW_READ	thrift/include/thrift/concurrency/Mutex.h	/^enum RWGuardType { RW_READ = 0, RW_WRITE = 1 };$/;"	e	enum:apache::thrift::concurrency::RWGuardType
RW_WRITE	thrift/include/thrift/concurrency/Mutex.h	/^enum RWGuardType { RW_READ = 0, RW_WRITE = 1 };$/;"	e	enum:apache::thrift::concurrency::RWGuardType
ReadWriteMutex	thrift/include/thrift/concurrency/Mutex.h	/^class ReadWriteMutex {$/;"	c	namespace:apache::thrift::concurrency
ReleaseHandler	thrift/include/thrift/TProcessor.h	/^  ReleaseHandler(const boost::shared_ptr<HandlerFactory_>& handlerFactory)$/;"	f	class:apache::thrift::ReleaseHandler
ReleaseHandler	thrift/include/thrift/TProcessor.h	/^class ReleaseHandler {$/;"	c	namespace:apache::thrift
Runnable	thrift/include/thrift/concurrency/Thread.h	/^class Runnable {$/;"	c	namespace:apache::thrift::concurrency
SELECT_TYPE_ARG1	thrift/include/thrift/config.h	331;"	d
SELECT_TYPE_ARG234	thrift/include/thrift/config.h	334;"	d
SELECT_TYPE_ARG5	thrift/include/thrift/config.h	337;"	d
SET	thrift/include/thrift/protocol/TDebugProtocol.h	/^  enum write_state_t { UNINIT, STRUCT, LIST, SET, MAP_KEY, MAP_VALUE };$/;"	e	enum:apache::thrift::protocol::TDebugProtocol::write_state_t
SIGNED_RIGHT_SHIFT_IS	thrift/include/thrift/config.h	341;"	d
SIZE_LIMIT	thrift/include/thrift/protocol/TProtocolException.h	/^    SIZE_LIMIT = 3,$/;"	e	enum:apache::thrift::protocol::TProtocolException::TProtocolExceptionType
SKIP	thrift/include/thrift/transport/TSSLSocket.h	/^    SKIP = 0,  \/\/ cannot make decision, move on to next (if any)$/;"	e	enum:apache::thrift::transport::AccessManager::Decision
SOCKOPT_CAST_T	thrift/include/thrift/server/TNonblockingServer.h	78;"	d
SOCKOPT_CAST_T	thrift/include/thrift/server/TNonblockingServer.h	80;"	d
SSLContext	thrift/include/thrift/transport/TSSLSocket.h	/^class SSLContext {$/;"	c	namespace:apache::thrift::transport
SSLProtocol	thrift/include/thrift/transport/TSSLSocket.h	/^enum SSLProtocol {$/;"	g	namespace:apache::thrift::transport
SSLTLS	thrift/include/thrift/transport/TSSLSocket.h	/^  SSLTLS  = 0,  \/\/ Supports SSLv2 and SSLv3 handshake but only negotiates at TLSv1_0 or later.$/;"	e	enum:apache::thrift::transport::SSLProtocol
SSLv3	thrift/include/thrift/transport/TSSLSocket.h	/^  SSLv3   = 2,  \/\/ Supports SSLv3 only - also horribly insecure!$/;"	e	enum:apache::thrift::transport::SSLProtocol
STARTED	thrift/include/thrift/concurrency/ThreadManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, JOINING, STOPPING, STOPPED };$/;"	e	enum:apache::thrift::concurrency::ThreadManager::STATE
STARTED	thrift/include/thrift/concurrency/TimerManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, STOPPING, STOPPED };$/;"	e	enum:apache::thrift::concurrency::TimerManager::STATE
STARTING	thrift/include/thrift/concurrency/ThreadManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, JOINING, STOPPING, STOPPED };$/;"	e	enum:apache::thrift::concurrency::ThreadManager::STATE
STARTING	thrift/include/thrift/concurrency/TimerManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, STOPPING, STOPPED };$/;"	e	enum:apache::thrift::concurrency::TimerManager::STATE
STATE	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  enum STATE { uninitialized, starting, started, stopping, stopped };$/;"	g	class:apache::thrift::concurrency::StdThread	file:
STATE	thrift/include/thrift/concurrency/ThreadManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, JOINING, STOPPING, STOPPED };$/;"	g	class:apache::thrift::concurrency::ThreadManager
STATE	thrift/include/thrift/concurrency/TimerManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, STOPPING, STOPPED };$/;"	g	class:apache::thrift::concurrency::TimerManager
STATSPROCESSOR_H	thrift/include/thrift/processor/StatsProcessor.h	21;"	d
STDC_HEADERS	thrift/include/thrift/config.h	352;"	d
STOPPED	thrift/include/thrift/concurrency/ThreadManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, JOINING, STOPPING, STOPPED };$/;"	e	enum:apache::thrift::concurrency::ThreadManager::STATE
STOPPED	thrift/include/thrift/concurrency/TimerManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, STOPPING, STOPPED };$/;"	e	enum:apache::thrift::concurrency::TimerManager::STATE
STOPPING	thrift/include/thrift/concurrency/ThreadManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, JOINING, STOPPING, STOPPED };$/;"	e	enum:apache::thrift::concurrency::ThreadManager::STATE
STOPPING	thrift/include/thrift/concurrency/TimerManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, STOPPING, STOPPED };$/;"	e	enum:apache::thrift::concurrency::TimerManager::STATE
STRERROR_R_CHAR_P	thrift/include/thrift/config.h	355;"	d
STRUCT	thrift/include/thrift/protocol/TDebugProtocol.h	/^  enum write_state_t { UNINIT, STRUCT, LIST, SET, MAP_KEY, MAP_VALUE };$/;"	e	enum:apache::thrift::protocol::TDebugProtocol::write_state_t
SUBTRACT	gen-cpp/tutorial_types.h	/^    SUBTRACT = 2,$/;"	e	enum:tutorial::Operation::type
SharedServiceClient	gen-cpp/SharedService.h	/^  SharedServiceClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {$/;"	f	class:shared::SharedServiceClient
SharedServiceClient	gen-cpp/SharedService.h	/^  SharedServiceClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {$/;"	f	class:shared::SharedServiceClient
SharedServiceClient	gen-cpp/SharedService.h	/^class SharedServiceClient : virtual public SharedServiceIf {$/;"	c	namespace:shared
SharedServiceConcurrentClient	gen-cpp/SharedService.h	/^  SharedServiceConcurrentClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {$/;"	f	class:shared::SharedServiceConcurrentClient
SharedServiceConcurrentClient	gen-cpp/SharedService.h	/^  SharedServiceConcurrentClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {$/;"	f	class:shared::SharedServiceConcurrentClient
SharedServiceConcurrentClient	gen-cpp/SharedService.h	/^class SharedServiceConcurrentClient : virtual public SharedServiceIf {$/;"	c	namespace:shared
SharedServiceHandler	gen-cpp/SharedService_server.skeleton.cpp	/^  SharedServiceHandler() {$/;"	f	class:SharedServiceHandler
SharedServiceHandler	gen-cpp/SharedService_server.skeleton.cpp	/^class SharedServiceHandler : virtual public SharedServiceIf {$/;"	c	file:
SharedServiceIf	gen-cpp/SharedService.h	/^class SharedServiceIf {$/;"	c	namespace:shared
SharedServiceIfFactory	gen-cpp/SharedService.h	/^class SharedServiceIfFactory {$/;"	c	namespace:shared
SharedServiceIfSingletonFactory	gen-cpp/SharedService.h	/^  SharedServiceIfSingletonFactory(const boost::shared_ptr<SharedServiceIf>& iface) : iface_(iface) {}$/;"	f	class:shared::SharedServiceIfSingletonFactory
SharedServiceIfSingletonFactory	gen-cpp/SharedService.h	/^class SharedServiceIfSingletonFactory : virtual public SharedServiceIfFactory {$/;"	c	namespace:shared
SharedServiceMultiface	gen-cpp/SharedService.h	/^  SharedServiceMultiface() {}$/;"	f	class:shared::SharedServiceMultiface
SharedServiceMultiface	gen-cpp/SharedService.h	/^  SharedServiceMultiface(std::vector<boost::shared_ptr<SharedServiceIf> >& ifaces) : ifaces_(ifaces) {$/;"	f	class:shared::SharedServiceMultiface
SharedServiceMultiface	gen-cpp/SharedService.h	/^class SharedServiceMultiface : virtual public SharedServiceIf {$/;"	c	namespace:shared
SharedServiceNull	gen-cpp/SharedService.h	/^class SharedServiceNull : virtual public SharedServiceIf {$/;"	c	namespace:shared
SharedServiceProcessor	gen-cpp/SharedService.h	/^  SharedServiceProcessor(boost::shared_ptr<SharedServiceIf> iface) :$/;"	f	class:shared::SharedServiceProcessor
SharedServiceProcessor	gen-cpp/SharedService.h	/^class SharedServiceProcessor : public ::apache::thrift::TDispatchProcessor {$/;"	c	namespace:shared
SharedServiceProcessorFactory	gen-cpp/SharedService.h	/^  SharedServiceProcessorFactory(const ::boost::shared_ptr< SharedServiceIfFactory >& handlerFactory) :$/;"	f	class:shared::SharedServiceProcessorFactory
SharedServiceProcessorFactory	gen-cpp/SharedService.h	/^class SharedServiceProcessorFactory : public ::apache::thrift::TProcessorFactory {$/;"	c	namespace:shared
SharedService_H	gen-cpp/SharedService.h	8;"	d
SharedService_getStruct_args	gen-cpp/SharedService.h	/^  SharedService_getStruct_args() : key(0) {$/;"	f	class:shared::SharedService_getStruct_args
SharedService_getStruct_args	gen-cpp/SharedService.h	/^class SharedService_getStruct_args {$/;"	c	namespace:shared
SharedService_getStruct_pargs	gen-cpp/SharedService.h	/^class SharedService_getStruct_pargs {$/;"	c	namespace:shared
SharedService_getStruct_presult	gen-cpp/SharedService.h	/^class SharedService_getStruct_presult {$/;"	c	namespace:shared
SharedService_getStruct_result	gen-cpp/SharedService.h	/^  SharedService_getStruct_result() {$/;"	f	class:shared::SharedService_getStruct_result
SharedService_getStruct_result	gen-cpp/SharedService.h	/^class SharedService_getStruct_result {$/;"	c	namespace:shared
SharedStruct	gen-cpp/shared_types.cpp	/^SharedStruct::SharedStruct(const SharedStruct& other0) {$/;"	f	class:shared::SharedStruct
SharedStruct	gen-cpp/shared_types.h	/^  SharedStruct() : key(0), value() {$/;"	f	class:shared::SharedStruct
SharedStruct	gen-cpp/shared_types.h	/^class SharedStruct {$/;"	c	namespace:shared
StatsProcessor	thrift/include/thrift/processor/StatsProcessor.h	/^  StatsProcessor(bool print, bool frequency) : print_(print), frequency_(frequency) {}$/;"	f	class:apache::thrift::processor::StatsProcessor
StatsProcessor	thrift/include/thrift/processor/StatsProcessor.h	/^class StatsProcessor : public apache::thrift::TProcessor {$/;"	c	namespace:apache::thrift::processor
StdThread	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  StdThread(bool detached, boost::shared_ptr<Runnable> runnable)$/;"	f	class:apache::thrift::concurrency::StdThread
StdThread	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^class StdThread : public Thread, public boost::enable_shared_from_this<StdThread> {$/;"	c	namespace:apache::thrift::concurrency	file:
StdThreadFactory	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^StdThreadFactory::StdThreadFactory(bool detached) : impl_(new StdThreadFactory::Impl(detached)) {$/;"	f	class:apache::thrift::concurrency::StdThreadFactory
StdThreadFactory	thrift/include/thrift/concurrency/StdThreadFactory.h	/^class StdThreadFactory : public ThreadFactory {$/;"	c	namespace:apache::thrift::concurrency
StoredMessageProtocol	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^  StoredMessageProtocol(shared_ptr<protocol::TProtocol> _protocol,$/;"	f	class:apache::thrift::protocol::StoredMessageProtocol
StoredMessageProtocol	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^class StoredMessageProtocol : public TProtocolDecorator {$/;"	c	namespace:apache::thrift::protocol
Synchronized	thrift/include/thrift/concurrency/Monitor.h	/^  Synchronized(const Monitor& monitor) : g(monitor.mutex()) {}$/;"	f	class:apache::thrift::concurrency::Synchronized
Synchronized	thrift/include/thrift/concurrency/Monitor.h	/^  Synchronized(const Monitor* monitor) : g(monitor->mutex()) {}$/;"	f	class:apache::thrift::concurrency::Synchronized
Synchronized	thrift/include/thrift/concurrency/Monitor.h	/^class Synchronized {$/;"	c	namespace:apache::thrift::concurrency
SystemResourceException	thrift/include/thrift/concurrency/Exception.h	/^  SystemResourceException() {}$/;"	f	class:apache::thrift::concurrency::SystemResourceException
SystemResourceException	thrift/include/thrift/concurrency/Exception.h	/^  SystemResourceException(const std::string& message) : TException(message) {}$/;"	f	class:apache::thrift::concurrency::SystemResourceException
SystemResourceException	thrift/include/thrift/concurrency/Exception.h	/^class SystemResourceException : public apache::thrift::TException {$/;"	c	namespace:apache::thrift::concurrency
TAIL_READ_TIMEOUT	thrift/include/thrift/transport/TFileTransport.h	/^  static const int32_t TAIL_READ_TIMEOUT = -1;$/;"	m	class:apache::thrift::transport::TFileTransport
TAKE_OWNERSHIP	thrift/include/thrift/transport/TBufferTransports.h	/^  enum MemoryPolicy { OBSERVE = 1, COPY = 2, TAKE_OWNERSHIP = 3 };$/;"	e	enum:apache::thrift::transport::TMemoryBuffer::MemoryPolicy
TApplicationException	thrift/include/thrift/TApplicationException.h	/^  TApplicationException() : TException(), type_(UNKNOWN) {}$/;"	f	class:apache::thrift::TApplicationException
TApplicationException	thrift/include/thrift/TApplicationException.h	/^  TApplicationException(TApplicationExceptionType type) : TException(), type_(type) {}$/;"	f	class:apache::thrift::TApplicationException
TApplicationException	thrift/include/thrift/TApplicationException.h	/^  TApplicationException(TApplicationExceptionType type, const std::string& message)$/;"	f	class:apache::thrift::TApplicationException
TApplicationException	thrift/include/thrift/TApplicationException.h	/^  TApplicationException(const std::string& message) : TException(message), type_(UNKNOWN) {}$/;"	f	class:apache::thrift::TApplicationException
TApplicationException	thrift/include/thrift/TApplicationException.h	/^class TApplicationException : public TException {$/;"	c	namespace:apache::thrift
TApplicationExceptionType	thrift/include/thrift/TApplicationException.h	/^  enum TApplicationExceptionType {$/;"	g	class:apache::thrift::TApplicationException
TAsyncBufferProcessor	thrift/include/thrift/async/TAsyncBufferProcessor.h	/^class TAsyncBufferProcessor {$/;"	c	namespace:apache::thrift::async
TAsyncChannel	thrift/include/thrift/async/TAsyncChannel.h	/^class TAsyncChannel {$/;"	c	namespace:apache::thrift::async
TAsyncDispatchProcessor	thrift/include/thrift/async/TAsyncDispatchProcessor.h	/^class TAsyncDispatchProcessor : public TAsyncProcessor {$/;"	c	namespace:apache::thrift::async
TAsyncDispatchProcessorT	thrift/include/thrift/async/TAsyncDispatchProcessor.h	/^class TAsyncDispatchProcessorT : public TAsyncProcessor {$/;"	c	namespace:apache::thrift::async
TAsyncDispatchProcessorT	thrift/include/thrift/async/TAsyncDispatchProcessor.h	/^class TAsyncDispatchProcessorT<protocol::TDummyProtocol> : public TAsyncDispatchProcessor {};$/;"	c	namespace:apache::thrift::async
TAsyncDispatchProcessorT	thrift/include/thrift/async/TAsyncDispatchProcessor.h	/^class TAsyncDispatchProcessorT<protocol::TProtocol> : public TAsyncDispatchProcessor {};$/;"	c	namespace:apache::thrift::async
TAsyncProcessor	thrift/include/thrift/async/TAsyncProcessor.h	/^  TAsyncProcessor() {}$/;"	f	class:apache::thrift::async::TAsyncProcessor
TAsyncProcessor	thrift/include/thrift/async/TAsyncProcessor.h	/^class TAsyncProcessor {$/;"	c	namespace:apache::thrift::async
TAsyncProcessorFactory	thrift/include/thrift/async/TAsyncProcessor.h	/^class TAsyncProcessorFactory {$/;"	c	namespace:apache::thrift::async
TAsyncProtocolProcessor	thrift/include/thrift/async/TAsyncProtocolProcessor.h	/^  TAsyncProtocolProcessor(boost::shared_ptr<TAsyncProcessor> underlying,$/;"	f	class:apache::thrift::async::TAsyncProtocolProcessor
TAsyncProtocolProcessor	thrift/include/thrift/async/TAsyncProtocolProcessor.h	/^class TAsyncProtocolProcessor : public TAsyncBufferProcessor {$/;"	c	namespace:apache::thrift::async
TBase	thrift/include/thrift/TBase.h	/^class TBase {$/;"	c	namespace:apache::thrift
TBinaryProtocol	thrift/include/thrift/protocol/TBinaryProtocol.h	/^typedef TBinaryProtocolT<TTransport> TBinaryProtocol;$/;"	t	namespace:apache::thrift::protocol
TBinaryProtocolFactory	thrift/include/thrift/protocol/TBinaryProtocol.h	/^typedef TBinaryProtocolFactoryT<TTransport> TBinaryProtocolFactory;$/;"	t	namespace:apache::thrift::protocol
TBinaryProtocolFactoryT	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  TBinaryProtocolFactoryT()$/;"	f	class:apache::thrift::protocol::TBinaryProtocolFactoryT
TBinaryProtocolFactoryT	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  TBinaryProtocolFactoryT(int32_t string_limit,$/;"	f	class:apache::thrift::protocol::TBinaryProtocolFactoryT
TBinaryProtocolFactoryT	thrift/include/thrift/protocol/TBinaryProtocol.h	/^class TBinaryProtocolFactoryT : public TProtocolFactory {$/;"	c	namespace:apache::thrift::protocol
TBinaryProtocolT	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  TBinaryProtocolT(boost::shared_ptr<Transport_> trans)$/;"	f	class:apache::thrift::protocol::TBinaryProtocolT
TBinaryProtocolT	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  TBinaryProtocolT(boost::shared_ptr<Transport_> trans,$/;"	f	class:apache::thrift::protocol::TBinaryProtocolT
TBinaryProtocolT	thrift/include/thrift/protocol/TBinaryProtocol.h	/^class TBinaryProtocolT : public TVirtualProtocol<TBinaryProtocolT<Transport_, ByteOrder_> > {$/;"	c	namespace:apache::thrift::protocol
TBufferBase	thrift/include/thrift/transport/TBufferTransports.h	/^  TBufferBase() : rBase_(NULL), rBound_(NULL), wBase_(NULL), wBound_(NULL) {}$/;"	f	class:apache::thrift::transport::TBufferBase
TBufferBase	thrift/include/thrift/transport/TBufferTransports.h	/^class TBufferBase : public TVirtualTransport<TBufferBase> {$/;"	c	namespace:apache::thrift::transport
TBufferedTransport	thrift/include/thrift/transport/TBufferTransports.h	/^  TBufferedTransport(boost::shared_ptr<TTransport> transport)$/;"	f	class:apache::thrift::transport::TBufferedTransport
TBufferedTransport	thrift/include/thrift/transport/TBufferTransports.h	/^  TBufferedTransport(boost::shared_ptr<TTransport> transport, uint32_t rsz, uint32_t wsz)$/;"	f	class:apache::thrift::transport::TBufferedTransport
TBufferedTransport	thrift/include/thrift/transport/TBufferTransports.h	/^  TBufferedTransport(boost::shared_ptr<TTransport> transport, uint32_t sz)$/;"	f	class:apache::thrift::transport::TBufferedTransport
TBufferedTransport	thrift/include/thrift/transport/TBufferTransports.h	/^class TBufferedTransport : public TVirtualTransport<TBufferedTransport, TBufferBase> {$/;"	c	namespace:apache::thrift::transport
TBufferedTransportFactory	thrift/include/thrift/transport/TBufferTransports.h	/^  TBufferedTransportFactory() {}$/;"	f	class:apache::thrift::transport::TBufferedTransportFactory
TBufferedTransportFactory	thrift/include/thrift/transport/TBufferTransports.h	/^class TBufferedTransportFactory : public TTransportFactory {$/;"	c	namespace:apache::thrift::transport
TCompactProtocol	thrift/include/thrift/protocol/TCompactProtocol.h	/^typedef TCompactProtocolT<TTransport> TCompactProtocol;$/;"	t	namespace:apache::thrift::protocol
TCompactProtocolFactory	thrift/include/thrift/protocol/TCompactProtocol.h	/^typedef TCompactProtocolFactoryT<TTransport> TCompactProtocolFactory;$/;"	t	namespace:apache::thrift::protocol
TCompactProtocolFactoryT	thrift/include/thrift/protocol/TCompactProtocol.h	/^  TCompactProtocolFactoryT() : string_limit_(0), container_limit_(0) {}$/;"	f	class:apache::thrift::protocol::TCompactProtocolFactoryT
TCompactProtocolFactoryT	thrift/include/thrift/protocol/TCompactProtocol.h	/^  TCompactProtocolFactoryT(int32_t string_limit, int32_t container_limit)$/;"	f	class:apache::thrift::protocol::TCompactProtocolFactoryT
TCompactProtocolFactoryT	thrift/include/thrift/protocol/TCompactProtocol.h	/^class TCompactProtocolFactoryT : public TProtocolFactory {$/;"	c	namespace:apache::thrift::protocol
TCompactProtocolT	thrift/include/thrift/protocol/TCompactProtocol.h	/^  TCompactProtocolT(boost::shared_ptr<Transport_> trans)$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
TCompactProtocolT	thrift/include/thrift/protocol/TCompactProtocol.h	/^  TCompactProtocolT(boost::shared_ptr<Transport_> trans,$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
TCompactProtocolT	thrift/include/thrift/protocol/TCompactProtocol.h	/^class TCompactProtocolT : public TVirtualProtocol<TCompactProtocolT<Transport_> > {$/;"	c	namespace:apache::thrift::protocol
TConcurrentClientSyncInfo	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^class TConcurrentClientSyncInfo$/;"	c	namespace:apache::thrift::async
TConcurrentRecvSentry	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^class TConcurrentRecvSentry$/;"	c	namespace:apache::thrift::async
TConcurrentSendSentry	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^class TConcurrentSendSentry$/;"	c	namespace:apache::thrift::async
TConnectedClient	thrift/include/thrift/server/TConnectedClient.h	/^class TConnectedClient : public apache::thrift::concurrency::Runnable {$/;"	c	namespace:apache::thrift::server
TConnectionInfo	thrift/include/thrift/TProcessor.h	/^struct TConnectionInfo {$/;"	s	namespace:apache::thrift
TDB_LIKELY	thrift/include/thrift/transport/TBufferTransports.h	32;"	d
TDB_LIKELY	thrift/include/thrift/transport/TBufferTransports.h	35;"	d
TDB_UNLIKELY	thrift/include/thrift/transport/TBufferTransports.h	33;"	d
TDB_UNLIKELY	thrift/include/thrift/transport/TBufferTransports.h	36;"	d
TDebugProtocol	thrift/include/thrift/protocol/TDebugProtocol.h	/^  TDebugProtocol(boost::shared_ptr<TTransport> trans)$/;"	f	class:apache::thrift::protocol::TDebugProtocol
TDebugProtocol	thrift/include/thrift/protocol/TDebugProtocol.h	/^class TDebugProtocol : public TVirtualProtocol<TDebugProtocol> {$/;"	c	namespace:apache::thrift::protocol
TDebugProtocolFactory	thrift/include/thrift/protocol/TDebugProtocol.h	/^  TDebugProtocolFactory() {}$/;"	f	class:apache::thrift::protocol::TDebugProtocolFactory
TDebugProtocolFactory	thrift/include/thrift/protocol/TDebugProtocol.h	/^class TDebugProtocolFactory : public TProtocolFactory {$/;"	c	namespace:apache::thrift::protocol
TDelayedException	thrift/include/thrift/Thrift.h	/^class TDelayedException {$/;"	c	namespace:apache::thrift
TDispatchProcessor	thrift/include/thrift/TDispatchProcessor.h	/^class TDispatchProcessor : public TProcessor {$/;"	c	namespace:apache::thrift
TDispatchProcessorT	thrift/include/thrift/TDispatchProcessor.h	/^class TDispatchProcessorT : public TProcessor {$/;"	c	namespace:apache::thrift
TDispatchProcessorT	thrift/include/thrift/TDispatchProcessor.h	/^class TDispatchProcessorT<protocol::TDummyProtocol> : public TDispatchProcessor {};$/;"	c	namespace:apache::thrift
TDispatchProcessorT	thrift/include/thrift/TDispatchProcessor.h	/^class TDispatchProcessorT<protocol::TProtocol> : public TDispatchProcessor {};$/;"	c	namespace:apache::thrift
TDummyProtocol	thrift/include/thrift/protocol/TProtocol.h	/^class TDummyProtocol : public TProtocol {};$/;"	c	namespace:apache::thrift::protocol
TEOFException	thrift/include/thrift/transport/TFileTransport.h	/^  TEOFException() : TTransportException(TTransportException::END_OF_FILE){};$/;"	f	class:apache::thrift::transport::TEOFException
TEOFException	thrift/include/thrift/transport/TFileTransport.h	/^class TEOFException : public TTransportException {$/;"	c	namespace:apache::thrift::transport
TEnumIterator	thrift/include/thrift/Thrift.h	/^  TEnumIterator(int n, int* enums, const char** names)$/;"	f	class:apache::thrift::TEnumIterator
TEnumIterator	thrift/include/thrift/Thrift.h	/^class TEnumIterator$/;"	c	namespace:apache::thrift
TEvhttpClientChannel	thrift/include/thrift/async/TEvhttpClientChannel.h	/^class TEvhttpClientChannel : public TAsyncChannel {$/;"	c	namespace:apache::thrift::async
TEvhttpServer	thrift/include/thrift/async/TEvhttpServer.h	/^class TEvhttpServer {$/;"	c	namespace:apache::thrift::async
TException	thrift/include/thrift/Thrift.h	/^  TException() : message_() {}$/;"	f	class:apache::thrift::TException
TException	thrift/include/thrift/Thrift.h	/^  TException(const std::string& message) : message_(message) {}$/;"	f	class:apache::thrift::TException
TException	thrift/include/thrift/Thrift.h	/^class TException : public std::exception {$/;"	c	namespace:apache::thrift
TExceptionWrapper	thrift/include/thrift/Thrift.h	/^  TExceptionWrapper(const E& e) : e_(e) {}$/;"	f	class:apache::thrift::TExceptionWrapper
TExceptionWrapper	thrift/include/thrift/Thrift.h	/^class TExceptionWrapper : public TDelayedException {$/;"	c	namespace:apache::thrift
TFDTransport	thrift/include/thrift/transport/TFDTransport.h	/^  TFDTransport(int fd, ClosePolicy close_policy = NO_CLOSE_ON_DESTROY)$/;"	f	class:apache::thrift::transport::TFDTransport
TFDTransport	thrift/include/thrift/transport/TFDTransport.h	/^class TFDTransport : public TVirtualTransport<TFDTransport> {$/;"	c	namespace:apache::thrift::transport
TFileProcessor	thrift/include/thrift/transport/TFileTransport.h	/^class TFileProcessor {$/;"	c	namespace:apache::thrift::transport
TFileReaderTransport	thrift/include/thrift/transport/TFileTransport.h	/^class TFileReaderTransport : virtual public TTransport {$/;"	c	namespace:apache::thrift::transport
TFileTransport	thrift/include/thrift/transport/TFileTransport.h	/^class TFileTransport : public TFileReaderTransport, public TFileWriterTransport {$/;"	c	namespace:apache::thrift::transport
TFileTransportBuffer	thrift/include/thrift/transport/TFileTransport.h	/^class TFileTransportBuffer {$/;"	c	namespace:apache::thrift::transport
TFileWriterTransport	thrift/include/thrift/transport/TFileTransport.h	/^class TFileWriterTransport : virtual public TTransport {$/;"	c	namespace:apache::thrift::transport
TFramedTransport	thrift/include/thrift/transport/TBufferTransports.h	/^  TFramedTransport(boost::shared_ptr<TTransport> transport)$/;"	f	class:apache::thrift::transport::TFramedTransport
TFramedTransport	thrift/include/thrift/transport/TBufferTransports.h	/^  TFramedTransport(boost::shared_ptr<TTransport> transport,$/;"	f	class:apache::thrift::transport::TFramedTransport
TFramedTransport	thrift/include/thrift/transport/TBufferTransports.h	/^class TFramedTransport : public TVirtualTransport<TFramedTransport, TBufferBase> {$/;"	c	namespace:apache::thrift::transport
TFramedTransportFactory	thrift/include/thrift/transport/TBufferTransports.h	/^  TFramedTransportFactory() {}$/;"	f	class:apache::thrift::transport::TFramedTransportFactory
TFramedTransportFactory	thrift/include/thrift/transport/TBufferTransports.h	/^class TFramedTransportFactory : public TTransportFactory {$/;"	c	namespace:apache::thrift::transport
THRIFT	Makefile	/^THRIFT = $(top_builddir)\/compiler\/cpp\/thrift$/;"	m
THRIFT_CLOSE	thrift/include/thrift/transport/PlatformSocket.h	46;"	d
THRIFT_CLOSE	thrift/include/thrift/transport/PlatformSocket.h	99;"	d
THRIFT_CLOSESOCKET	thrift/include/thrift/transport/PlatformSocket.h	45;"	d
THRIFT_CLOSESOCKET	thrift/include/thrift/transport/PlatformSocket.h	98;"	d
THRIFT_CTIME_R	thrift/include/thrift/transport/PlatformSocket.h	114;"	d
THRIFT_CTIME_R	thrift/include/thrift/transport/PlatformSocket.h	65;"	d
THRIFT_EAGAIN	thrift/include/thrift/transport/PlatformSocket.h	29;"	d
THRIFT_EAGAIN	thrift/include/thrift/transport/PlatformSocket.h	87;"	d
THRIFT_ECONNRESET	thrift/include/thrift/transport/PlatformSocket.h	31;"	d
THRIFT_ECONNRESET	thrift/include/thrift/transport/PlatformSocket.h	83;"	d
THRIFT_EINPROGRESS	thrift/include/thrift/transport/PlatformSocket.h	28;"	d
THRIFT_EINPROGRESS	thrift/include/thrift/transport/PlatformSocket.h	82;"	d
THRIFT_EINTR	thrift/include/thrift/transport/PlatformSocket.h	30;"	d
THRIFT_EINTR	thrift/include/thrift/transport/PlatformSocket.h	81;"	d
THRIFT_ENOTCONN	thrift/include/thrift/transport/PlatformSocket.h	32;"	d
THRIFT_ENOTCONN	thrift/include/thrift/transport/PlatformSocket.h	84;"	d
THRIFT_EPIPE	thrift/include/thrift/transport/PlatformSocket.h	35;"	d
THRIFT_EPIPE	thrift/include/thrift/transport/PlatformSocket.h	88;"	d
THRIFT_ERRNO	thrift/include/thrift/transport/PlatformSocket.h	27;"	d
THRIFT_ERRNO	thrift/include/thrift/transport/PlatformSocket.h	80;"	d
THRIFT_ETIMEDOUT	thrift/include/thrift/transport/PlatformSocket.h	33;"	d
THRIFT_ETIMEDOUT	thrift/include/thrift/transport/PlatformSocket.h	85;"	d
THRIFT_EWOULDBLOCK	thrift/include/thrift/transport/PlatformSocket.h	34;"	d
THRIFT_EWOULDBLOCK	thrift/include/thrift/transport/PlatformSocket.h	86;"	d
THRIFT_FCNTL	thrift/include/thrift/transport/PlatformSocket.h	40;"	d
THRIFT_FCNTL	thrift/include/thrift/transport/PlatformSocket.h	93;"	d
THRIFT_FSTAT	thrift/include/thrift/transport/PlatformSocket.h	107;"	d
THRIFT_FSTAT	thrift/include/thrift/transport/PlatformSocket.h	53;"	d
THRIFT_FSYNC	thrift/include/thrift/transport/PlatformSocket.h	102;"	d
THRIFT_FSYNC	thrift/include/thrift/transport/PlatformSocket.h	49;"	d
THRIFT_FTRUNCATE	thrift/include/thrift/transport/PlatformSocket.h	101;"	d
THRIFT_FTRUNCATE	thrift/include/thrift/transport/PlatformSocket.h	48;"	d
THRIFT_F_GETFL	thrift/include/thrift/transport/PlatformSocket.h	42;"	d
THRIFT_F_GETFL	thrift/include/thrift/transport/PlatformSocket.h	95;"	d
THRIFT_F_SETFL	thrift/include/thrift/transport/PlatformSocket.h	43;"	d
THRIFT_F_SETFL	thrift/include/thrift/transport/PlatformSocket.h	96;"	d
THRIFT_GAI_STRERROR	thrift/include/thrift/transport/PlatformSocket.h	108;"	d
THRIFT_GAI_STRERROR	thrift/include/thrift/transport/PlatformSocket.h	56;"	d
THRIFT_GAI_STRERROR	thrift/include/thrift/transport/PlatformSocket.h	58;"	d
THRIFT_GETTIMEOFDAY	thrift/include/thrift/transport/PlatformSocket.h	44;"	d
THRIFT_GETTIMEOFDAY	thrift/include/thrift/transport/PlatformSocket.h	97;"	d
THRIFT_GET_SOCKET_ERROR	thrift/include/thrift/transport/PlatformSocket.h	26;"	d
THRIFT_GET_SOCKET_ERROR	thrift/include/thrift/transport/PlatformSocket.h	79;"	d
THRIFT_INVALID_SOCKET	thrift/include/thrift/transport/PlatformSocket.h	38;"	d
THRIFT_INVALID_SOCKET	thrift/include/thrift/transport/PlatformSocket.h	91;"	d
THRIFT_LSEEK	thrift/include/thrift/transport/PlatformSocket.h	103;"	d
THRIFT_LSEEK	thrift/include/thrift/transport/PlatformSocket.h	50;"	d
THRIFT_NO_SOCKET_CACHING	thrift/include/thrift/transport/PlatformSocket.h	36;"	d
THRIFT_NO_SOCKET_CACHING	thrift/include/thrift/transport/PlatformSocket.h	89;"	d
THRIFT_OPEN	thrift/include/thrift/transport/PlatformSocket.h	100;"	d
THRIFT_OPEN	thrift/include/thrift/transport/PlatformSocket.h	47;"	d
THRIFT_O_NONBLOCK	thrift/include/thrift/transport/PlatformSocket.h	41;"	d
THRIFT_O_NONBLOCK	thrift/include/thrift/transport/PlatformSocket.h	94;"	d
THRIFT_POLL	thrift/include/thrift/transport/PlatformSocket.h	115;"	d
THRIFT_POLL	thrift/include/thrift/transport/PlatformSocket.h	66;"	d
THRIFT_POLLFD	thrift/include/thrift/transport/PlatformSocket.h	116;"	d
THRIFT_POLLFD	thrift/include/thrift/transport/PlatformSocket.h	68;"	d
THRIFT_POLLFD	thrift/include/thrift/transport/PlatformSocket.h	72;"	d
THRIFT_POLLIN	thrift/include/thrift/transport/PlatformSocket.h	117;"	d
THRIFT_POLLIN	thrift/include/thrift/transport/PlatformSocket.h	69;"	d
THRIFT_POLLIN	thrift/include/thrift/transport/PlatformSocket.h	73;"	d
THRIFT_POLLOUT	thrift/include/thrift/transport/PlatformSocket.h	118;"	d
THRIFT_POLLOUT	thrift/include/thrift/transport/PlatformSocket.h	70;"	d
THRIFT_POLLOUT	thrift/include/thrift/transport/PlatformSocket.h	74;"	d
THRIFT_READ	thrift/include/thrift/transport/PlatformSocket.h	105;"	d
THRIFT_READ	thrift/include/thrift/transport/PlatformSocket.h	52;"	d
THRIFT_SHUT_RDWR	thrift/include/thrift/transport/PlatformSocket.h	119;"	d
THRIFT_SHUT_RDWR	thrift/include/thrift/transport/PlatformSocket.h	76;"	d
THRIFT_SLEEP_SEC	thrift/include/thrift/transport/PlatformSocket.h	111;"	d
THRIFT_SLEEP_SEC	thrift/include/thrift/transport/PlatformSocket.h	62;"	d
THRIFT_SLEEP_USEC	thrift/include/thrift/transport/PlatformSocket.h	112;"	d
THRIFT_SLEEP_USEC	thrift/include/thrift/transport/PlatformSocket.h	63;"	d
THRIFT_SNPRINTF	thrift/include/thrift/transport/PlatformSocket.h	110;"	d
THRIFT_SNPRINTF	thrift/include/thrift/transport/PlatformSocket.h	61;"	d
THRIFT_SOCKET	thrift/include/thrift/transport/PlatformSocket.h	37;"	d
THRIFT_SOCKET	thrift/include/thrift/transport/PlatformSocket.h	90;"	d
THRIFT_SOCKETPAIR	thrift/include/thrift/transport/PlatformSocket.h	39;"	d
THRIFT_SOCKETPAIR	thrift/include/thrift/transport/PlatformSocket.h	92;"	d
THRIFT_SSIZET	thrift/include/thrift/transport/PlatformSocket.h	109;"	d
THRIFT_SSIZET	thrift/include/thrift/transport/PlatformSocket.h	60;"	d
THRIFT_STAT	thrift/include/thrift/transport/PlatformSocket.h	106;"	d
THRIFT_STAT	thrift/include/thrift/transport/PlatformSocket.h	54;"	d
THRIFT_TIMESPEC	thrift/include/thrift/transport/PlatformSocket.h	113;"	d
THRIFT_TIMESPEC	thrift/include/thrift/transport/PlatformSocket.h	64;"	d
THRIFT_TMULTIPLEXEDPROCESSOR_H_	thrift/include/thrift/processor/TMultiplexedProcessor.h	21;"	d
THRIFT_TMULTIPLEXEDPROTOCOL_H_	thrift/include/thrift/protocol/TMultiplexedProtocol.h	21;"	d
THRIFT_TPROTOCOLDECORATOR_H_	thrift/include/thrift/protocol/TProtocolDecorator.h	21;"	d
THRIFT_UNUSED_VARIABLE	thrift/include/thrift/Thrift.h	51;"	d
THRIFT_WRITE	thrift/include/thrift/transport/PlatformSocket.h	104;"	d
THRIFT_WRITE	thrift/include/thrift/transport/PlatformSocket.h	51;"	d
THRIFT_htolel	thrift/include/thrift/protocol/TProtocol.h	109;"	d
THRIFT_htolel	thrift/include/thrift/protocol/TProtocol.h	133;"	d
THRIFT_htolel	thrift/include/thrift/protocol/TProtocol.h	141;"	d
THRIFT_htolell	thrift/include/thrift/protocol/TProtocol.h	107;"	d
THRIFT_htolell	thrift/include/thrift/protocol/TProtocol.h	131;"	d
THRIFT_htolell	thrift/include/thrift/protocol/TProtocol.h	139;"	d
THRIFT_htoles	thrift/include/thrift/protocol/TProtocol.h	111;"	d
THRIFT_htoles	thrift/include/thrift/protocol/TProtocol.h	135;"	d
THRIFT_htoles	thrift/include/thrift/protocol/TProtocol.h	143;"	d
THRIFT_htonll	thrift/include/thrift/protocol/TProtocol.h	103;"	d
THRIFT_htonll	thrift/include/thrift/protocol/TProtocol.h	148;"	d
THRIFT_htonll	thrift/include/thrift/protocol/TProtocol.h	151;"	d
THRIFT_htonll	thrift/include/thrift/protocol/TProtocol.h	154;"	d
THRIFT_letohl	thrift/include/thrift/protocol/TProtocol.h	110;"	d
THRIFT_letohl	thrift/include/thrift/protocol/TProtocol.h	134;"	d
THRIFT_letohl	thrift/include/thrift/protocol/TProtocol.h	142;"	d
THRIFT_letohll	thrift/include/thrift/protocol/TProtocol.h	108;"	d
THRIFT_letohll	thrift/include/thrift/protocol/TProtocol.h	132;"	d
THRIFT_letohll	thrift/include/thrift/protocol/TProtocol.h	140;"	d
THRIFT_letohs	thrift/include/thrift/protocol/TProtocol.h	112;"	d
THRIFT_letohs	thrift/include/thrift/protocol/TProtocol.h	136;"	d
THRIFT_letohs	thrift/include/thrift/protocol/TProtocol.h	144;"	d
THRIFT_ntohll	thrift/include/thrift/protocol/TProtocol.h	102;"	d
THRIFT_ntohll	thrift/include/thrift/protocol/TProtocol.h	147;"	d
THRIFT_ntohll	thrift/include/thrift/protocol/TProtocol.h	150;"	d
THRIFT_ntohll	thrift/include/thrift/protocol/TProtocol.h	153;"	d
THttpClient	thrift/include/thrift/transport/THttpClient.h	/^class THttpClient : public THttpTransport {$/;"	c	namespace:apache::thrift::transport
THttpServer	thrift/include/thrift/transport/THttpServer.h	/^class THttpServer : public THttpTransport {$/;"	c	namespace:apache::thrift::transport
THttpServerTransportFactory	thrift/include/thrift/transport/THttpServer.h	/^  THttpServerTransportFactory() {}$/;"	f	class:apache::thrift::transport::THttpServerTransportFactory
THttpServerTransportFactory	thrift/include/thrift/transport/THttpServer.h	/^class THttpServerTransportFactory : public TTransportFactory {$/;"	c	namespace:apache::thrift::transport
THttpTransport	thrift/include/thrift/transport/THttpTransport.h	/^class THttpTransport : public TVirtualTransport<THttpTransport> {$/;"	c	namespace:apache::thrift::transport
TIMED_OUT	thrift/include/thrift/transport/TTransportException.h	/^    TIMED_OUT = 2,$/;"	e	enum:apache::thrift::transport::TTransportException::TTransportExceptionType
TIME_WITH_SYS_TIME	thrift/include/thrift/config.h	358;"	d
TInputRecursionTracker	thrift/include/thrift/protocol/TProtocol.h	/^  TInputRecursionTracker(TProtocol &prot) : prot_(prot) {$/;"	f	struct:apache::thrift::protocol::TInputRecursionTracker
TInputRecursionTracker	thrift/include/thrift/protocol/TProtocol.h	/^struct TInputRecursionTracker {$/;"	s	namespace:apache::thrift::protocol
TJSONProtocol	thrift/include/thrift/protocol/TJSONProtocol.h	/^class TJSONProtocol : public TVirtualProtocol<TJSONProtocol> {$/;"	c	namespace:apache::thrift::protocol
TJSONProtocolFactory	thrift/include/thrift/protocol/TJSONProtocol.h	/^  TJSONProtocolFactory() {}$/;"	f	class:apache::thrift::protocol::TJSONProtocolFactory
TJSONProtocolFactory	thrift/include/thrift/protocol/TJSONProtocol.h	/^class TJSONProtocolFactory : public TProtocolFactory {$/;"	c	namespace:apache::thrift::protocol
TLEBinaryProtocol	thrift/include/thrift/protocol/TBinaryProtocol.h	/^typedef TBinaryProtocolT<TTransport, TNetworkLittleEndian> TLEBinaryProtocol;$/;"	t	namespace:apache::thrift::protocol
TLEBinaryProtocolFactory	thrift/include/thrift/protocol/TBinaryProtocol.h	/^typedef TBinaryProtocolFactoryT<TTransport, TNetworkLittleEndian> TLEBinaryProtocolFactory;$/;"	t	namespace:apache::thrift::protocol
TLSv1_0	thrift/include/thrift/transport/TSSLSocket.h	/^  TLSv1_0 = 3,  \/\/ Supports TLSv1_0 or later.$/;"	e	enum:apache::thrift::transport::SSLProtocol
TLSv1_1	thrift/include/thrift/transport/TSSLSocket.h	/^  TLSv1_1 = 4,  \/\/ Supports TLSv1_1 or later.$/;"	e	enum:apache::thrift::transport::SSLProtocol
TLSv1_2	thrift/include/thrift/transport/TSSLSocket.h	/^  TLSv1_2 = 5,  \/\/ Supports TLSv1_2 or later.$/;"	e	enum:apache::thrift::transport::SSLProtocol
TMemoryBuffer	thrift/include/thrift/transport/TBufferTransports.h	/^  TMemoryBuffer() { initCommon(NULL, defaultSize, true, 0); }$/;"	f	class:apache::thrift::transport::TMemoryBuffer
TMemoryBuffer	thrift/include/thrift/transport/TBufferTransports.h	/^  TMemoryBuffer(uint32_t sz) { initCommon(NULL, sz, true, 0); }$/;"	f	class:apache::thrift::transport::TMemoryBuffer
TMemoryBuffer	thrift/include/thrift/transport/TBufferTransports.h	/^  TMemoryBuffer(uint8_t* buf, uint32_t sz, MemoryPolicy policy = OBSERVE) {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
TMemoryBuffer	thrift/include/thrift/transport/TBufferTransports.h	/^class TMemoryBuffer : public TVirtualTransport<TMemoryBuffer, TBufferBase> {$/;"	c	namespace:apache::thrift::transport
TMessageType	thrift/include/thrift/protocol/TProtocol.h	/^enum TMessageType {$/;"	g	namespace:apache::thrift::protocol
TMultiplexedProcessor	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^class TMultiplexedProcessor : public TProcessor {$/;"	c	namespace:apache::thrift
TMultiplexedProtocol	thrift/include/thrift/protocol/TMultiplexedProtocol.h	/^  TMultiplexedProtocol(shared_ptr<TProtocol> _protocol, const std::string& _serviceName)$/;"	f	class:apache::thrift::protocol::TMultiplexedProtocol
TMultiplexedProtocol	thrift/include/thrift/protocol/TMultiplexedProtocol.h	/^class TMultiplexedProtocol : public TProtocolDecorator {$/;"	c	namespace:apache::thrift::protocol
TNetworkBigEndian	thrift/include/thrift/protocol/TProtocol.h	/^struct TNetworkBigEndian$/;"	s	namespace:apache::thrift::protocol
TNetworkLittleEndian	thrift/include/thrift/protocol/TProtocol.h	/^struct TNetworkLittleEndian$/;"	s	namespace:apache::thrift::protocol
TNonblockingIOThread	thrift/include/thrift/server/TNonblockingServer.h	/^class TNonblockingIOThread : public Runnable {$/;"	c	namespace:apache::thrift::server
TNonblockingServer	thrift/include/thrift/server/TNonblockingServer.h	/^  TNonblockingServer(const boost::shared_ptr<TProcessor>& processor, int port)$/;"	f	class:apache::thrift::server::TNonblockingServer
TNonblockingServer	thrift/include/thrift/server/TNonblockingServer.h	/^  TNonblockingServer(const boost::shared_ptr<TProcessor>& processor,$/;"	f	class:apache::thrift::server::TNonblockingServer
TNonblockingServer	thrift/include/thrift/server/TNonblockingServer.h	/^  TNonblockingServer(const boost::shared_ptr<TProcessorFactory>& processorFactory, int port)$/;"	f	class:apache::thrift::server::TNonblockingServer
TNonblockingServer	thrift/include/thrift/server/TNonblockingServer.h	/^  TNonblockingServer(const boost::shared_ptr<TProcessorFactory>& processorFactory,$/;"	f	class:apache::thrift::server::TNonblockingServer
TNonblockingServer	thrift/include/thrift/server/TNonblockingServer.h	/^class TNonblockingServer : public TServer {$/;"	c	namespace:apache::thrift::server
TNullTransport	thrift/include/thrift/transport/TTransportUtils.h	/^  TNullTransport() {}$/;"	f	class:apache::thrift::transport::TNullTransport
TNullTransport	thrift/include/thrift/transport/TTransportUtils.h	/^class TNullTransport : public TVirtualTransport<TNullTransport> {$/;"	c	namespace:apache::thrift::transport
TOutput	thrift/include/thrift/TOutput.h	/^  TOutput() : f_(&errorTimeWrapper) {}$/;"	f	class:apache::thrift::TOutput
TOutput	thrift/include/thrift/TOutput.h	/^class TOutput {$/;"	c	namespace:apache::thrift
TOutputRecursionTracker	thrift/include/thrift/protocol/TProtocol.h	/^  TOutputRecursionTracker(TProtocol &prot) : prot_(prot) {$/;"	f	struct:apache::thrift::protocol::TOutputRecursionTracker
TOutputRecursionTracker	thrift/include/thrift/protocol/TProtocol.h	/^struct TOutputRecursionTracker {$/;"	s	namespace:apache::thrift::protocol
TOverloadAction	thrift/include/thrift/server/TNonblockingServer.h	/^enum TOverloadAction {$/;"	g	namespace:apache::thrift::server
TPIPE_SERVER_MAX_CONNS_DEFAULT	thrift/include/thrift/transport/TPipeServer.h	32;"	d
TPipe	thrift/include/thrift/transport/TPipe.h	/^class TPipe : public TVirtualTransport<TPipe> {$/;"	c	namespace:apache::thrift::transport
TPipeServer	thrift/include/thrift/transport/TPipeServer.h	/^class TPipeServer : public TServerTransport {$/;"	c	namespace:apache::thrift::transport
TPipedFileReaderTransport	thrift/include/thrift/transport/TTransportUtils.h	/^class TPipedFileReaderTransport : public TPipedTransport, public TFileReaderTransport {$/;"	c	namespace:apache::thrift::transport
TPipedFileReaderTransportFactory	thrift/include/thrift/transport/TTransportUtils.h	/^  TPipedFileReaderTransportFactory() {}$/;"	f	class:apache::thrift::transport::TPipedFileReaderTransportFactory
TPipedFileReaderTransportFactory	thrift/include/thrift/transport/TTransportUtils.h	/^  TPipedFileReaderTransportFactory(boost::shared_ptr<TTransport> dstTrans)$/;"	f	class:apache::thrift::transport::TPipedFileReaderTransportFactory
TPipedFileReaderTransportFactory	thrift/include/thrift/transport/TTransportUtils.h	/^class TPipedFileReaderTransportFactory : public TPipedTransportFactory {$/;"	c	namespace:apache::thrift::transport
TPipedTransport	thrift/include/thrift/transport/TTransportUtils.h	/^  TPipedTransport(boost::shared_ptr<TTransport> srcTrans, boost::shared_ptr<TTransport> dstTrans)$/;"	f	class:apache::thrift::transport::TPipedTransport
TPipedTransport	thrift/include/thrift/transport/TTransportUtils.h	/^  TPipedTransport(boost::shared_ptr<TTransport> srcTrans,$/;"	f	class:apache::thrift::transport::TPipedTransport
TPipedTransport	thrift/include/thrift/transport/TTransportUtils.h	/^class TPipedTransport : virtual public TTransport {$/;"	c	namespace:apache::thrift::transport
TPipedTransportFactory	thrift/include/thrift/transport/TTransportUtils.h	/^  TPipedTransportFactory() {}$/;"	f	class:apache::thrift::transport::TPipedTransportFactory
TPipedTransportFactory	thrift/include/thrift/transport/TTransportUtils.h	/^  TPipedTransportFactory(boost::shared_ptr<TTransport> dstTrans) {$/;"	f	class:apache::thrift::transport::TPipedTransportFactory
TPipedTransportFactory	thrift/include/thrift/transport/TTransportUtils.h	/^class TPipedTransportFactory : public TTransportFactory {$/;"	c	namespace:apache::thrift::transport
TProcessor	thrift/include/thrift/TProcessor.h	/^  TProcessor() {}$/;"	f	class:apache::thrift::TProcessor
TProcessor	thrift/include/thrift/TProcessor.h	/^class TProcessor {$/;"	c	namespace:apache::thrift
TProcessorContextFreer	thrift/include/thrift/TProcessor.h	/^  TProcessorContextFreer(TProcessorEventHandler* handler, void* context, const char* method)$/;"	f	class:apache::thrift::TProcessorContextFreer
TProcessorContextFreer	thrift/include/thrift/TProcessor.h	/^class TProcessorContextFreer {$/;"	c	namespace:apache::thrift
TProcessorEventHandler	thrift/include/thrift/TProcessor.h	/^  TProcessorEventHandler() {}$/;"	f	class:apache::thrift::TProcessorEventHandler
TProcessorEventHandler	thrift/include/thrift/TProcessor.h	/^class TProcessorEventHandler {$/;"	c	namespace:apache::thrift
TProcessorFactory	thrift/include/thrift/TProcessor.h	/^class TProcessorFactory {$/;"	c	namespace:apache::thrift
TProtocol	thrift/include/thrift/protocol/TProtocol.h	/^  TProtocol() {}$/;"	f	class:apache::thrift::protocol::TProtocol
TProtocol	thrift/include/thrift/protocol/TProtocol.h	/^  TProtocol(boost::shared_ptr<TTransport> ptrans)$/;"	f	class:apache::thrift::protocol::TProtocol
TProtocol	thrift/include/thrift/protocol/TProtocol.h	/^class TProtocol {$/;"	c	namespace:apache::thrift::protocol
TProtocolDecorator	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  TProtocolDecorator(shared_ptr<TProtocol> proto)$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
TProtocolDecorator	thrift/include/thrift/protocol/TProtocolDecorator.h	/^class TProtocolDecorator : public TProtocol {$/;"	c	namespace:apache::thrift::protocol
TProtocolDefaults	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  TProtocolDefaults(boost::shared_ptr<TTransport> ptrans) : TProtocol(ptrans) {}$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
TProtocolDefaults	thrift/include/thrift/protocol/TVirtualProtocol.h	/^class TProtocolDefaults : public TProtocol {$/;"	c	namespace:apache::thrift::protocol
TProtocolException	thrift/include/thrift/protocol/TProtocolException.h	/^  TProtocolException() : apache::thrift::TException(), type_(UNKNOWN) {}$/;"	f	class:apache::thrift::protocol::TProtocolException
TProtocolException	thrift/include/thrift/protocol/TProtocolException.h	/^  TProtocolException(TProtocolExceptionType type) : apache::thrift::TException(), type_(type) {}$/;"	f	class:apache::thrift::protocol::TProtocolException
TProtocolException	thrift/include/thrift/protocol/TProtocolException.h	/^  TProtocolException(TProtocolExceptionType type, const std::string& message)$/;"	f	class:apache::thrift::protocol::TProtocolException
TProtocolException	thrift/include/thrift/protocol/TProtocolException.h	/^  TProtocolException(const std::string& message)$/;"	f	class:apache::thrift::protocol::TProtocolException
TProtocolException	thrift/include/thrift/protocol/TProtocolException.h	/^class TProtocolException : public apache::thrift::TException {$/;"	c	namespace:apache::thrift::protocol
TProtocolExceptionType	thrift/include/thrift/protocol/TProtocolException.h	/^  enum TProtocolExceptionType {$/;"	g	class:apache::thrift::protocol::TProtocolException
TProtocolFactory	thrift/include/thrift/protocol/TProtocol.h	/^  TProtocolFactory() {}$/;"	f	class:apache::thrift::protocol::TProtocolFactory
TProtocolFactory	thrift/include/thrift/protocol/TProtocol.h	/^class TProtocolFactory {$/;"	c	namespace:apache::thrift::protocol
TProtocolTap	thrift/include/thrift/protocol/TProtocolTap.h	/^  TProtocolTap(boost::shared_ptr<TProtocol> source, boost::shared_ptr<TProtocol> sink)$/;"	f	class:apache::thrift::protocol::TProtocolTap
TProtocolTap	thrift/include/thrift/protocol/TProtocolTap.h	/^class TProtocolTap : public TVirtualProtocol<TProtocolTap> {$/;"	c	namespace:apache::thrift::protocol
TQIODeviceTransport	thrift/include/thrift/qt/TQIODeviceTransport.h	/^class TQIODeviceTransport$/;"	c	namespace:apache::thrift::transport
TQTcpServer	thrift/include/thrift/qt/TQTcpServer.h	/^class TQTcpServer : public QObject {$/;"	c	namespace:apache::thrift::async
TSSLException	thrift/include/thrift/transport/TSSLSocket.h	/^  TSSLException(const std::string& message)$/;"	f	class:apache::thrift::transport::TSSLException
TSSLException	thrift/include/thrift/transport/TSSLSocket.h	/^class TSSLException : public TTransportException {$/;"	c	namespace:apache::thrift::transport
TSSLServerSocket	thrift/include/thrift/transport/TSSLServerSocket.h	/^class TSSLServerSocket : public TServerSocket {$/;"	c	namespace:apache::thrift::transport
TSSLSocket	thrift/include/thrift/transport/TSSLSocket.h	/^class TSSLSocket : public TSocket {$/;"	c	namespace:apache::thrift::transport
TSSLSocketFactory	thrift/include/thrift/transport/TSSLSocket.h	/^class TSSLSocketFactory {$/;"	c	namespace:apache::thrift::transport
TServer	thrift/include/thrift/server/TServer.h	/^  TServer(const boost::shared_ptr<TProcessor>& processor)$/;"	f	class:apache::thrift::server::TServer
TServer	thrift/include/thrift/server/TServer.h	/^  TServer(const boost::shared_ptr<TProcessor>& processor,$/;"	f	class:apache::thrift::server::TServer
TServer	thrift/include/thrift/server/TServer.h	/^  TServer(const boost::shared_ptr<TProcessorFactory>& processorFactory)$/;"	f	class:apache::thrift::server::TServer
TServer	thrift/include/thrift/server/TServer.h	/^  TServer(const boost::shared_ptr<TProcessorFactory>& processorFactory,$/;"	f	class:apache::thrift::server::TServer
TServer	thrift/include/thrift/server/TServer.h	/^class TServer : public concurrency::Runnable {$/;"	c	namespace:apache::thrift::server
TServerEventHandler	thrift/include/thrift/server/TServer.h	/^  TServerEventHandler() {}$/;"	f	class:apache::thrift::server::TServerEventHandler
TServerEventHandler	thrift/include/thrift/server/TServer.h	/^class TServerEventHandler {$/;"	c	namespace:apache::thrift::server
TServerFramework	thrift/include/thrift/server/TServerFramework.h	/^class TServerFramework : public TServer {$/;"	c	namespace:apache::thrift::server
TServerSocket	thrift/include/thrift/transport/TServerSocket.h	/^class TServerSocket : public TServerTransport {$/;"	c	namespace:apache::thrift::transport
TServerTransport	thrift/include/thrift/transport/TServerTransport.h	/^  TServerTransport() {}$/;"	f	class:apache::thrift::transport::TServerTransport
TServerTransport	thrift/include/thrift/transport/TServerTransport.h	/^class TServerTransport {$/;"	c	namespace:apache::thrift::transport
TShortReadTransport	thrift/include/thrift/transport/TShortReadTransport.h	/^  TShortReadTransport(boost::shared_ptr<TTransport> transport, double full_prob)$/;"	f	class:apache::thrift::transport::test::TShortReadTransport
TShortReadTransport	thrift/include/thrift/transport/TShortReadTransport.h	/^class TShortReadTransport : public TVirtualTransport<TShortReadTransport> {$/;"	c	namespace:apache::thrift::transport::test
TSimpleFileTransport	thrift/include/thrift/transport/TSimpleFileTransport.h	/^class TSimpleFileTransport : public TFDTransport {$/;"	c	namespace:apache::thrift::transport
TSimpleServer	thrift/include/thrift/server/TSimpleServer.h	/^class TSimpleServer : public TServerFramework {$/;"	c	namespace:apache::thrift::server
TSingletonProcessorFactory	thrift/include/thrift/TProcessor.h	/^  TSingletonProcessorFactory(boost::shared_ptr<TProcessor> processor) : processor_(processor) {}$/;"	f	class:apache::thrift::TSingletonProcessorFactory
TSingletonProcessorFactory	thrift/include/thrift/TProcessor.h	/^class TSingletonProcessorFactory : public TProcessorFactory {$/;"	c	namespace:apache::thrift
TSocket	thrift/include/thrift/transport/TSocket.h	/^class TSocket : public TVirtualTransport<TSocket> {$/;"	c	namespace:apache::thrift::transport
TSocketPool	thrift/include/thrift/transport/TSocketPool.h	/^class TSocketPool : public TSocket {$/;"	c	namespace:apache::thrift::transport
TSocketPoolServer	thrift/include/thrift/transport/TSocketPool.h	/^class TSocketPoolServer {$/;"	c	namespace:apache::thrift::transport
TThreadPoolServer	thrift/include/thrift/server/TThreadPoolServer.h	/^class TThreadPoolServer : public TServerFramework {$/;"	c	namespace:apache::thrift::server
TThreadedServer	thrift/include/thrift/server/TThreadedServer.h	/^class TThreadedServer : public TServerFramework {$/;"	c	namespace:apache::thrift::server
TTransport	thrift/include/thrift/transport/TTransport.h	/^  TTransport() {}$/;"	f	class:apache::thrift::transport::TTransport
TTransport	thrift/include/thrift/transport/TTransport.h	/^class TTransport {$/;"	c	namespace:apache::thrift::transport
TTransportDefaults	thrift/include/thrift/transport/TVirtualTransport.h	/^  TTransportDefaults() {}$/;"	f	class:apache::thrift::transport::TTransportDefaults
TTransportDefaults	thrift/include/thrift/transport/TVirtualTransport.h	/^class TTransportDefaults : public TTransport {$/;"	c	namespace:apache::thrift::transport
TTransportException	thrift/include/thrift/transport/TTransportException.h	/^  TTransportException() : apache::thrift::TException(), type_(UNKNOWN) {}$/;"	f	class:apache::thrift::transport::TTransportException
TTransportException	thrift/include/thrift/transport/TTransportException.h	/^  TTransportException(TTransportExceptionType type) : apache::thrift::TException(), type_(type) {}$/;"	f	class:apache::thrift::transport::TTransportException
TTransportException	thrift/include/thrift/transport/TTransportException.h	/^  TTransportException(TTransportExceptionType type, const std::string& message)$/;"	f	class:apache::thrift::transport::TTransportException
TTransportException	thrift/include/thrift/transport/TTransportException.h	/^  TTransportException(TTransportExceptionType type, const std::string& message, int errno_copy)$/;"	f	class:apache::thrift::transport::TTransportException
TTransportException	thrift/include/thrift/transport/TTransportException.h	/^  TTransportException(const std::string& message)$/;"	f	class:apache::thrift::transport::TTransportException
TTransportException	thrift/include/thrift/transport/TTransportException.h	/^class TTransportException : public apache::thrift::TException {$/;"	c	namespace:apache::thrift::transport
TTransportExceptionType	thrift/include/thrift/transport/TTransportException.h	/^  enum TTransportExceptionType {$/;"	g	class:apache::thrift::transport::TTransportException
TTransportFactory	thrift/include/thrift/transport/TTransport.h	/^  TTransportFactory() {}$/;"	f	class:apache::thrift::transport::TTransportFactory
TTransportFactory	thrift/include/thrift/transport/TTransport.h	/^class TTransportFactory {$/;"	c	namespace:apache::thrift::transport
TType	thrift/include/thrift/protocol/TProtocol.h	/^enum TType {$/;"	g	namespace:apache::thrift::protocol
TVirtualProtocol	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  TVirtualProtocol(boost::shared_ptr<TTransport> ptrans) : Super_(ptrans) {}$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
TVirtualProtocol	thrift/include/thrift/protocol/TVirtualProtocol.h	/^class TVirtualProtocol : public Super_ {$/;"	c	namespace:apache::thrift::protocol
TVirtualTransport	thrift/include/thrift/transport/TVirtualTransport.h	/^  TVirtualTransport() {}$/;"	f	class:apache::thrift::transport::TVirtualTransport
TVirtualTransport	thrift/include/thrift/transport/TVirtualTransport.h	/^  TVirtualTransport(Arg1_ const& a1, Arg2_ const& a2)$/;"	f	class:apache::thrift::transport::TVirtualTransport
TVirtualTransport	thrift/include/thrift/transport/TVirtualTransport.h	/^  TVirtualTransport(Arg_ const& arg)$/;"	f	class:apache::thrift::transport::TVirtualTransport
TVirtualTransport	thrift/include/thrift/transport/TVirtualTransport.h	/^class TVirtualTransport : public Super_ {$/;"	c	namespace:apache::thrift::transport
TYPE_BITS	thrift/include/thrift/protocol/TCompactProtocol.h	/^  static const int8_t TYPE_BITS = 0x07;          \/\/ 0000 0111$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
TYPE_MASK	thrift/include/thrift/protocol/TCompactProtocol.h	/^  static const int8_t TYPE_MASK = (int8_t)0xE0u; \/\/ 1110 0000$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
TYPE_SHIFT_AMOUNT	thrift/include/thrift/protocol/TCompactProtocol.h	/^  static const int32_t TYPE_SHIFT_AMOUNT = 5;$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
TZlibTransport	thrift/include/thrift/transport/TZlibTransport.h	/^  TZlibTransport(boost::shared_ptr<TTransport> transport,$/;"	f	class:apache::thrift::transport::TZlibTransport
TZlibTransport	thrift/include/thrift/transport/TZlibTransport.h	/^class TZlibTransport : public TVirtualTransport<TZlibTransport> {$/;"	c	namespace:apache::thrift::transport
TZlibTransportException	thrift/include/thrift/transport/TZlibTransport.h	/^  TZlibTransportException(int status, const char* msg)$/;"	f	class:apache::thrift::transport::TZlibTransportException
TZlibTransportException	thrift/include/thrift/transport/TZlibTransport.h	/^class TZlibTransportException : public TTransportException {$/;"	c	namespace:apache::thrift::transport
TZlibTransportFactory	thrift/include/thrift/transport/TZlibTransport.h	/^  TZlibTransportFactory() {}$/;"	f	class:apache::thrift::transport::TZlibTransportFactory
TZlibTransportFactory	thrift/include/thrift/transport/TZlibTransport.h	/^class TZlibTransportFactory : public TTransportFactory {$/;"	c	namespace:apache::thrift::transport
T_BOOL	thrift/include/thrift/protocol/TProtocol.h	/^  T_BOOL       = 2,$/;"	e	enum:apache::thrift::protocol::TType
T_BYTE	thrift/include/thrift/protocol/TProtocol.h	/^  T_BYTE       = 3,$/;"	e	enum:apache::thrift::protocol::TType
T_CALL	thrift/include/thrift/protocol/TProtocol.h	/^  T_CALL       = 1,$/;"	e	enum:apache::thrift::protocol::TMessageType
T_DEBUG	thrift/include/thrift/TLogging.h	56;"	d
T_DEBUG	thrift/include/thrift/TLogging.h	61;"	d
T_DEBUG_L	thrift/include/thrift/TLogging.h	97;"	d
T_DEBUG_T	thrift/include/thrift/TLogging.h	70;"	d
T_DEBUG_T	thrift/include/thrift/TLogging.h	87;"	d
T_DOUBLE	thrift/include/thrift/protocol/TProtocol.h	/^  T_DOUBLE     = 4,$/;"	e	enum:apache::thrift::protocol::TType
T_ERROR	thrift/include/thrift/TLogging.h	107;"	d
T_ERROR_ABORT	thrift/include/thrift/TLogging.h	128;"	d
T_EXCEPTION	thrift/include/thrift/protocol/TProtocol.h	/^  T_EXCEPTION  = 3,$/;"	e	enum:apache::thrift::protocol::TMessageType
T_GENERIC_PROTOCOL	thrift/include/thrift/TLogging.h	176;"	d
T_GENERIC_PROTOCOL	thrift/include/thrift/TLogging.h	184;"	d
T_GENERIC_PROTOCOL	thrift/include/thrift/TLogging.h	192;"	d
T_GLOBAL_DEBUGGING_LEVEL	thrift/include/thrift/TLogging.h	40;"	d
T_GLOBAL_LOGGING_LEVEL	thrift/include/thrift/TLogging.h	46;"	d
T_I08	thrift/include/thrift/protocol/TProtocol.h	/^  T_I08        = 3,$/;"	e	enum:apache::thrift::protocol::TType
T_I16	thrift/include/thrift/protocol/TProtocol.h	/^  T_I16        = 6,$/;"	e	enum:apache::thrift::protocol::TType
T_I32	thrift/include/thrift/protocol/TProtocol.h	/^  T_I32        = 8,$/;"	e	enum:apache::thrift::protocol::TType
T_I64	thrift/include/thrift/protocol/TProtocol.h	/^  T_I64        = 10,$/;"	e	enum:apache::thrift::protocol::TType
T_LIST	thrift/include/thrift/protocol/TProtocol.h	/^  T_LIST       = 15,$/;"	e	enum:apache::thrift::protocol::TType
T_LOG_OPER	thrift/include/thrift/TLogging.h	150;"	d
T_LOG_OPER	thrift/include/thrift/TLogging.h	162;"	d
T_MAP	thrift/include/thrift/protocol/TProtocol.h	/^  T_MAP        = 13,$/;"	e	enum:apache::thrift::protocol::TType
T_ONEWAY	thrift/include/thrift/protocol/TProtocol.h	/^  T_ONEWAY     = 4$/;"	e	enum:apache::thrift::protocol::TMessageType
T_OVERLOAD_CLOSE_ON_ACCEPT	thrift/include/thrift/server/TNonblockingServer.h	/^  T_OVERLOAD_CLOSE_ON_ACCEPT, \/\/\/< Drop new connections immediately *\/$/;"	e	enum:apache::thrift::server::TOverloadAction
T_OVERLOAD_DRAIN_TASK_QUEUE	thrift/include/thrift/server/TNonblockingServer.h	/^  T_OVERLOAD_DRAIN_TASK_QUEUE \/\/\/< Drop some tasks from head of task queue *\/$/;"	e	enum:apache::thrift::server::TOverloadAction
T_OVERLOAD_NO_ACTION	thrift/include/thrift/server/TNonblockingServer.h	/^  T_OVERLOAD_NO_ACTION,       \/\/\/< Don't handle overload *\/$/;"	e	enum:apache::thrift::server::TOverloadAction
T_REPLY	thrift/include/thrift/protocol/TProtocol.h	/^  T_REPLY      = 2,$/;"	e	enum:apache::thrift::protocol::TMessageType
T_SET	thrift/include/thrift/protocol/TProtocol.h	/^  T_SET        = 14,$/;"	e	enum:apache::thrift::protocol::TType
T_STOP	thrift/include/thrift/protocol/TProtocol.h	/^  T_STOP       = 0,$/;"	e	enum:apache::thrift::protocol::TType
T_STRING	thrift/include/thrift/protocol/TProtocol.h	/^  T_STRING     = 11,$/;"	e	enum:apache::thrift::protocol::TType
T_STRUCT	thrift/include/thrift/protocol/TProtocol.h	/^  T_STRUCT     = 12,$/;"	e	enum:apache::thrift::protocol::TType
T_U64	thrift/include/thrift/protocol/TProtocol.h	/^  T_U64        = 9,$/;"	e	enum:apache::thrift::protocol::TType
T_UTF16	thrift/include/thrift/protocol/TProtocol.h	/^  T_UTF16      = 17$/;"	e	enum:apache::thrift::protocol::TType
T_UTF7	thrift/include/thrift/protocol/TProtocol.h	/^  T_UTF7       = 11,$/;"	e	enum:apache::thrift::protocol::TType
T_UTF8	thrift/include/thrift/protocol/TProtocol.h	/^  T_UTF8       = 16,$/;"	e	enum:apache::thrift::protocol::TType
T_VIRTUAL_CALL	thrift/include/thrift/TLogging.h	175;"	d
T_VIRTUAL_CALL	thrift/include/thrift/TLogging.h	183;"	d
T_VIRTUAL_CALL	thrift/include/thrift/TLogging.h	191;"	d
T_VOID	thrift/include/thrift/protocol/TProtocol.h	/^  T_VOID       = 1,$/;"	e	enum:apache::thrift::protocol::TType
Thread	thrift/include/thrift/concurrency/Thread.h	/^class Thread {$/;"	c	namespace:apache::thrift::concurrency
ThreadFactory	thrift/include/thrift/concurrency/Thread.h	/^class ThreadFactory {$/;"	c	namespace:apache::thrift::concurrency
ThreadManager	thrift/include/thrift/concurrency/ThreadManager.h	/^  ThreadManager() {}$/;"	f	class:apache::thrift::concurrency::ThreadManager
ThreadManager	thrift/include/thrift/concurrency/ThreadManager.h	/^class ThreadManager {$/;"	c	namespace:apache::thrift::concurrency
ThriftDebugString	thrift/include/thrift/protocol/TDebugProtocol.h	/^std::string ThriftDebugString(const ThriftStruct& ts) {$/;"	f	namespace:apache::thrift
ThriftJSONString	thrift/include/thrift/protocol/TJSONProtocol.h	/^std::string ThriftJSONString(const ThriftStruct& ts) {$/;"	f	namespace:apache::thrift
TimedOutException	thrift/include/thrift/concurrency/Exception.h	/^  TimedOutException() : TException("TimedOutException"){};$/;"	f	class:apache::thrift::concurrency::TimedOutException
TimedOutException	thrift/include/thrift/concurrency/Exception.h	/^  TimedOutException(const std::string& message) : TException(message) {}$/;"	f	class:apache::thrift::concurrency::TimedOutException
TimedOutException	thrift/include/thrift/concurrency/Exception.h	/^class TimedOutException : public apache::thrift::TException {$/;"	c	namespace:apache::thrift::concurrency
TimeoutSeconds_	thrift/include/thrift/transport/TPipe.h	/^  long TimeoutSeconds_;$/;"	m	class:apache::thrift::transport::TPipe
TimerManager	thrift/include/thrift/concurrency/TimerManager.h	/^class TimerManager {$/;"	c	namespace:apache::thrift::concurrency
TooManyPendingTasksException	thrift/include/thrift/concurrency/Exception.h	/^  TooManyPendingTasksException() : TException("TooManyPendingTasksException"){};$/;"	f	class:apache::thrift::concurrency::TooManyPendingTasksException
TooManyPendingTasksException	thrift/include/thrift/concurrency/Exception.h	/^  TooManyPendingTasksException(const std::string& message) : TException(message) {}$/;"	f	class:apache::thrift::concurrency::TooManyPendingTasksException
TooManyPendingTasksException	thrift/include/thrift/concurrency/Exception.h	/^class TooManyPendingTasksException : public apache::thrift::TException {$/;"	c	namespace:apache::thrift::concurrency
TutorialClient_LDADD	Makefile	/^TutorialClient_LDADD = \\$/;"	m
TutorialClient_SOURCES	Makefile	/^TutorialClient_SOURCES = \\$/;"	m
TutorialServer_LDADD	Makefile	/^TutorialServer_LDADD = \\$/;"	m
TutorialServer_SOURCES	Makefile	/^TutorialServer_SOURCES = \\$/;"	m
UNINIT	thrift/include/thrift/protocol/TDebugProtocol.h	/^  enum write_state_t { UNINIT, STRUCT, LIST, SET, MAP_KEY, MAP_VALUE };$/;"	e	enum:apache::thrift::protocol::TDebugProtocol::write_state_t
UNINITIALIZED	thrift/include/thrift/concurrency/ThreadManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, JOINING, STOPPING, STOPPED };$/;"	e	enum:apache::thrift::concurrency::ThreadManager::STATE
UNINITIALIZED	thrift/include/thrift/concurrency/TimerManager.h	/^  enum STATE { UNINITIALIZED, STARTING, STARTED, STOPPING, STOPPED };$/;"	e	enum:apache::thrift::concurrency::TimerManager::STATE
UNKNOWN	thrift/include/thrift/TApplicationException.h	/^    UNKNOWN = 0,$/;"	e	enum:apache::thrift::TApplicationException::TApplicationExceptionType
UNKNOWN	thrift/include/thrift/protocol/TProtocolException.h	/^    UNKNOWN = 0,$/;"	e	enum:apache::thrift::protocol::TProtocolException::TProtocolExceptionType
UNKNOWN	thrift/include/thrift/transport/TTransportException.h	/^    UNKNOWN = 0,$/;"	e	enum:apache::thrift::transport::TTransportException::TTransportExceptionType
UNKNOWN_METHOD	thrift/include/thrift/TApplicationException.h	/^    UNKNOWN_METHOD = 1,$/;"	e	enum:apache::thrift::TApplicationException::TApplicationExceptionType
UNKNOWN_RIGHT_SHIFT	thrift/include/thrift/config.h	364;"	d
UNSUPPORTED_CLIENT_TYPE	thrift/include/thrift/TApplicationException.h	/^    UNSUPPORTED_CLIENT_TYPE = 10$/;"	e	enum:apache::thrift::TApplicationException::TApplicationExceptionType
US_PER_MS	thrift/include/thrift/concurrency/Util.h	/^  static const int64_t US_PER_MS = US_PER_S \/ MS_PER_S;$/;"	m	class:apache::thrift::concurrency::Util
US_PER_S	thrift/include/thrift/concurrency/Util.h	/^  static const int64_t US_PER_S = 1000000LL;$/;"	m	class:apache::thrift::concurrency::Util
UncancellableTaskException	thrift/include/thrift/concurrency/Exception.h	/^class UncancellableTaskException : public apache::thrift::TException {};$/;"	c	namespace:apache::thrift::concurrency
Util	thrift/include/thrift/concurrency/Util.h	/^class Util {$/;"	c	namespace:apache::thrift::concurrency
VERSION	thrift/include/thrift/config.h	371;"	d
VERSION_1	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  static const int32_t VERSION_1 = ((int32_t)0x80010000);$/;"	m	class:apache::thrift::protocol::TBinaryProtocolT
VERSION_MASK	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  static const int32_t VERSION_MASK = ((int32_t)0xffff0000);$/;"	m	class:apache::thrift::protocol::TBinaryProtocolT
VERSION_MASK	thrift/include/thrift/protocol/TCompactProtocol.h	/^  static const int8_t VERSION_MASK = 0x1f;       \/\/ 0001 1111$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
VERSION_N	thrift/include/thrift/protocol/TCompactProtocol.h	/^  static const int8_t VERSION_N = 1;$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
VoidCallback	thrift/include/thrift/async/TAsyncChannel.h	/^  typedef apache::thrift::stdcxx::function<void()> VoidCallback;$/;"	t	class:apache::thrift::async::TAsyncChannel
VoidFunc	thrift/include/thrift/concurrency/FunctionRunner.h	/^  typedef apache::thrift::stdcxx::function<void()> VoidFunc;$/;"	t	class:apache::thrift::concurrency::FunctionRunner
WRITE	thrift/include/thrift/transport/TFileTransport.h	/^  enum mode { WRITE, READ };$/;"	e	enum:apache::thrift::transport::TFileTransportBuffer::mode
WRITE_BUFFER_DEFAULT_SIZE	thrift/include/thrift/server/TNonblockingServer.h	/^  static const int WRITE_BUFFER_DEFAULT_SIZE = 1024;$/;"	m	class:apache::thrift::server::TNonblockingServer
WRONG_METHOD_NAME	thrift/include/thrift/TApplicationException.h	/^    WRONG_METHOD_NAME = 3,$/;"	e	enum:apache::thrift::TApplicationException::TApplicationExceptionType
Work	gen-cpp/tutorial_types.cpp	/^Work::Work(const Work& other1) {$/;"	f	class:tutorial::Work
Work	gen-cpp/tutorial_types.h	/^  Work() : num1(0), num2(0), op((Operation::type)0), comment() {$/;"	f	class:tutorial::Work
Work	gen-cpp/tutorial_types.h	/^class Work {$/;"	c	namespace:tutorial
YYTEXT_POINTER	thrift/include/thrift/config.h	375;"	d
_Calculator_add_args__isset	gen-cpp/Calculator.h	/^  _Calculator_add_args__isset() : num1(false), num2(false) {}$/;"	f	struct:tutorial::_Calculator_add_args__isset
_Calculator_add_args__isset	gen-cpp/Calculator.h	/^typedef struct _Calculator_add_args__isset {$/;"	s	namespace:tutorial
_Calculator_add_args__isset	gen-cpp/Calculator.h	/^} _Calculator_add_args__isset;$/;"	t	namespace:tutorial	typeref:struct:tutorial::_Calculator_add_args__isset
_Calculator_add_presult__isset	gen-cpp/Calculator.h	/^  _Calculator_add_presult__isset() : success(false) {}$/;"	f	struct:tutorial::_Calculator_add_presult__isset
_Calculator_add_presult__isset	gen-cpp/Calculator.h	/^typedef struct _Calculator_add_presult__isset {$/;"	s	namespace:tutorial
_Calculator_add_presult__isset	gen-cpp/Calculator.h	/^} _Calculator_add_presult__isset;$/;"	t	namespace:tutorial	typeref:struct:tutorial::_Calculator_add_presult__isset
_Calculator_add_result__isset	gen-cpp/Calculator.h	/^  _Calculator_add_result__isset() : success(false) {}$/;"	f	struct:tutorial::_Calculator_add_result__isset
_Calculator_add_result__isset	gen-cpp/Calculator.h	/^typedef struct _Calculator_add_result__isset {$/;"	s	namespace:tutorial
_Calculator_add_result__isset	gen-cpp/Calculator.h	/^} _Calculator_add_result__isset;$/;"	t	namespace:tutorial	typeref:struct:tutorial::_Calculator_add_result__isset
_Calculator_calculate_args__isset	gen-cpp/Calculator.h	/^  _Calculator_calculate_args__isset() : logid(false), w(false) {}$/;"	f	struct:tutorial::_Calculator_calculate_args__isset
_Calculator_calculate_args__isset	gen-cpp/Calculator.h	/^typedef struct _Calculator_calculate_args__isset {$/;"	s	namespace:tutorial
_Calculator_calculate_args__isset	gen-cpp/Calculator.h	/^} _Calculator_calculate_args__isset;$/;"	t	namespace:tutorial	typeref:struct:tutorial::_Calculator_calculate_args__isset
_Calculator_calculate_presult__isset	gen-cpp/Calculator.h	/^  _Calculator_calculate_presult__isset() : success(false), ouch(false) {}$/;"	f	struct:tutorial::_Calculator_calculate_presult__isset
_Calculator_calculate_presult__isset	gen-cpp/Calculator.h	/^typedef struct _Calculator_calculate_presult__isset {$/;"	s	namespace:tutorial
_Calculator_calculate_presult__isset	gen-cpp/Calculator.h	/^} _Calculator_calculate_presult__isset;$/;"	t	namespace:tutorial	typeref:struct:tutorial::_Calculator_calculate_presult__isset
_Calculator_calculate_result__isset	gen-cpp/Calculator.h	/^  _Calculator_calculate_result__isset() : success(false), ouch(false) {}$/;"	f	struct:tutorial::_Calculator_calculate_result__isset
_Calculator_calculate_result__isset	gen-cpp/Calculator.h	/^typedef struct _Calculator_calculate_result__isset {$/;"	s	namespace:tutorial
_Calculator_calculate_result__isset	gen-cpp/Calculator.h	/^} _Calculator_calculate_result__isset;$/;"	t	namespace:tutorial	typeref:struct:tutorial::_Calculator_calculate_result__isset
_InvalidOperation__isset	gen-cpp/tutorial_types.h	/^  _InvalidOperation__isset() : whatOp(false), why(false) {}$/;"	f	struct:tutorial::_InvalidOperation__isset
_InvalidOperation__isset	gen-cpp/tutorial_types.h	/^typedef struct _InvalidOperation__isset {$/;"	s	namespace:tutorial
_InvalidOperation__isset	gen-cpp/tutorial_types.h	/^} _InvalidOperation__isset;$/;"	t	namespace:tutorial	typeref:struct:tutorial::_InvalidOperation__isset
_SharedService_getStruct_args__isset	gen-cpp/SharedService.h	/^  _SharedService_getStruct_args__isset() : key(false) {}$/;"	f	struct:shared::_SharedService_getStruct_args__isset
_SharedService_getStruct_args__isset	gen-cpp/SharedService.h	/^typedef struct _SharedService_getStruct_args__isset {$/;"	s	namespace:shared
_SharedService_getStruct_args__isset	gen-cpp/SharedService.h	/^} _SharedService_getStruct_args__isset;$/;"	t	namespace:shared	typeref:struct:shared::_SharedService_getStruct_args__isset
_SharedService_getStruct_presult__isset	gen-cpp/SharedService.h	/^  _SharedService_getStruct_presult__isset() : success(false) {}$/;"	f	struct:shared::_SharedService_getStruct_presult__isset
_SharedService_getStruct_presult__isset	gen-cpp/SharedService.h	/^typedef struct _SharedService_getStruct_presult__isset {$/;"	s	namespace:shared
_SharedService_getStruct_presult__isset	gen-cpp/SharedService.h	/^} _SharedService_getStruct_presult__isset;$/;"	t	namespace:shared	typeref:struct:shared::_SharedService_getStruct_presult__isset
_SharedService_getStruct_result__isset	gen-cpp/SharedService.h	/^  _SharedService_getStruct_result__isset() : success(false) {}$/;"	f	struct:shared::_SharedService_getStruct_result__isset
_SharedService_getStruct_result__isset	gen-cpp/SharedService.h	/^typedef struct _SharedService_getStruct_result__isset {$/;"	s	namespace:shared
_SharedService_getStruct_result__isset	gen-cpp/SharedService.h	/^} _SharedService_getStruct_result__isset;$/;"	t	namespace:shared	typeref:struct:shared::_SharedService_getStruct_result__isset
_SharedStruct__isset	gen-cpp/shared_types.h	/^  _SharedStruct__isset() : key(false), value(false) {}$/;"	f	struct:shared::_SharedStruct__isset
_SharedStruct__isset	gen-cpp/shared_types.h	/^typedef struct _SharedStruct__isset {$/;"	s	namespace:shared
_SharedStruct__isset	gen-cpp/shared_types.h	/^} _SharedStruct__isset;$/;"	t	namespace:shared	typeref:struct:shared::_SharedStruct__isset
_THRIFT_ASYNC_TASYNCCHANNEL_H_	thrift/include/thrift/async/TAsyncChannel.h	21;"	d
_THRIFT_ASYNC_TASYNCDISPATCHPROCESSOR_H_	thrift/include/thrift/async/TAsyncDispatchProcessor.h	20;"	d
_THRIFT_ASYNC_TQIODEVICE_TRANSPORT_H_	thrift/include/thrift/qt/TQIODeviceTransport.h	21;"	d
_THRIFT_CONCURRENCY_BOOSTTHREADFACTORY_H_	thrift/include/thrift/concurrency/BoostThreadFactory.h	21;"	d
_THRIFT_CONCURRENCY_EXCEPTION_H_	thrift/include/thrift/concurrency/Exception.h	21;"	d
_THRIFT_CONCURRENCY_FUNCTION_RUNNER_H	thrift/include/thrift/concurrency/FunctionRunner.h	21;"	d
_THRIFT_CONCURRENCY_MONITOR_H_	thrift/include/thrift/concurrency/Monitor.h	21;"	d
_THRIFT_CONCURRENCY_MUTEX_H_	thrift/include/thrift/concurrency/Mutex.h	21;"	d
_THRIFT_CONCURRENCY_PLATFORMTHREADFACTORY_H_	thrift/include/thrift/concurrency/PlatformThreadFactory.h	21;"	d
_THRIFT_CONCURRENCY_POSIXTHREADFACTORY_H_	thrift/include/thrift/concurrency/PosixThreadFactory.h	21;"	d
_THRIFT_CONCURRENCY_STDTHREADFACTORY_H_	thrift/include/thrift/concurrency/StdThreadFactory.h	21;"	d
_THRIFT_CONCURRENCY_THREADMANAGER_H_	thrift/include/thrift/concurrency/ThreadManager.h	21;"	d
_THRIFT_CONCURRENCY_THREAD_H_	thrift/include/thrift/concurrency/Thread.h	21;"	d
_THRIFT_CONCURRENCY_TIMERMANAGER_H_	thrift/include/thrift/concurrency/TimerManager.h	21;"	d
_THRIFT_CONCURRENCY_UTIL_H_	thrift/include/thrift/concurrency/Util.h	21;"	d
_THRIFT_CXXFUNCTIONAL_H_	thrift/include/thrift/cxxfunctional.h	21;"	d
_THRIFT_OUTPUT_H_	thrift/include/thrift/TOutput.h	21;"	d
_THRIFT_PROTOCOL_TBASE64UTILS_H_	thrift/include/thrift/protocol/TBase64Utils.h	21;"	d
_THRIFT_PROTOCOL_TBINARYPROTOCOL_H_	thrift/include/thrift/protocol/TBinaryProtocol.h	21;"	d
_THRIFT_PROTOCOL_TCOMPACTPROTOCOL_H_	thrift/include/thrift/protocol/TCompactProtocol.h	21;"	d
_THRIFT_PROTOCOL_TDEBUGPROTOCOL_H_	thrift/include/thrift/protocol/TDebugProtocol.h	21;"	d
_THRIFT_PROTOCOL_TJSONPROTOCOL_H_	thrift/include/thrift/protocol/TJSONProtocol.h	21;"	d
_THRIFT_PROTOCOL_TPROTOCOLEXCEPTION_H_	thrift/include/thrift/protocol/TProtocolException.h	21;"	d
_THRIFT_PROTOCOL_TPROTOCOLTAP_H_	thrift/include/thrift/protocol/TProtocolTap.h	21;"	d
_THRIFT_PROTOCOL_TPROTOCOL_H_	thrift/include/thrift/protocol/TProtocol.h	21;"	d
_THRIFT_PROTOCOL_TVIRTUALPROTOCOL_H_	thrift/include/thrift/protocol/TVirtualProtocol.h	21;"	d
_THRIFT_SERVER_TCONNECTEDCLIENT_H_	thrift/include/thrift/server/TConnectedClient.h	21;"	d
_THRIFT_SERVER_TNONBLOCKINGSERVER_H_	thrift/include/thrift/server/TNonblockingServer.h	21;"	d
_THRIFT_SERVER_TSERVERFRAMEWORK_H_	thrift/include/thrift/server/TServerFramework.h	21;"	d
_THRIFT_SERVER_TSERVER_H_	thrift/include/thrift/server/TServer.h	21;"	d
_THRIFT_SERVER_TSIMPLESERVER_H_	thrift/include/thrift/server/TSimpleServer.h	21;"	d
_THRIFT_SERVER_TTHREADEDSERVER_H_	thrift/include/thrift/server/TThreadedServer.h	21;"	d
_THRIFT_SERVER_TTHREADPOOLSERVER_H_	thrift/include/thrift/server/TThreadPoolServer.h	21;"	d
_THRIFT_TAPPLICATIONEXCEPTION_H_	thrift/include/thrift/TApplicationException.h	21;"	d
_THRIFT_TASYNCPROCESSOR_H_	thrift/include/thrift/async/TAsyncProcessor.h	21;"	d
_THRIFT_TASYNC_BUFFER_PROCESSOR_H_	thrift/include/thrift/async/TAsyncBufferProcessor.h	21;"	d
_THRIFT_TASYNC_QTCP_SERVER_H_	thrift/include/thrift/qt/TQTcpServer.h	21;"	d
_THRIFT_TBASE_H_	thrift/include/thrift/TBase.h	21;"	d
_THRIFT_TCONCURRENTCLIENTSYNCINFO_H_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	20;"	d
_THRIFT_TDISPATCHPROCESSOR_H_	thrift/include/thrift/TDispatchProcessor.h	20;"	d
_THRIFT_TEVHTTP_CLIENT_CHANNEL_H_	thrift/include/thrift/async/TEvhttpClientChannel.h	21;"	d
_THRIFT_TEVHTTP_SERVER_H_	thrift/include/thrift/async/TEvhttpServer.h	21;"	d
_THRIFT_THRIFT_H_	thrift/include/thrift/Thrift.h	21;"	d
_THRIFT_TLOGGING_H_	thrift/include/thrift/TLogging.h	21;"	d
_THRIFT_TNAME_ME_H_	thrift/include/thrift/async/TAsyncProtocolProcessor.h	21;"	d
_THRIFT_TOSTRING_H_	thrift/include/thrift/TToString.h	21;"	d
_THRIFT_TPROCESSOR_H_	thrift/include/thrift/TProcessor.h	21;"	d
_THRIFT_TRANSPORT_PLATFORM_SOCKET_H_	thrift/include/thrift/transport/PlatformSocket.h	23;"	d
_THRIFT_TRANSPORT_TBUFFERTRANSPORTS_H_	thrift/include/thrift/transport/TBufferTransports.h	21;"	d
_THRIFT_TRANSPORT_TFDTRANSPORT_H_	thrift/include/thrift/transport/TFDTransport.h	21;"	d
_THRIFT_TRANSPORT_TFILETRANSPORT_H_	thrift/include/thrift/transport/TFileTransport.h	21;"	d
_THRIFT_TRANSPORT_THTTPCLIENT_H_	thrift/include/thrift/transport/THttpClient.h	21;"	d
_THRIFT_TRANSPORT_THTTPSERVER_H_	thrift/include/thrift/transport/THttpServer.h	21;"	d
_THRIFT_TRANSPORT_THTTPTRANSPORT_H_	thrift/include/thrift/transport/THttpTransport.h	21;"	d
_THRIFT_TRANSPORT_TPIPE_H_	thrift/include/thrift/transport/TPipe.h	21;"	d
_THRIFT_TRANSPORT_TSERVERSOCKET_H_	thrift/include/thrift/transport/TServerSocket.h	21;"	d
_THRIFT_TRANSPORT_TSERVERTRANSPORT_H_	thrift/include/thrift/transport/TServerTransport.h	21;"	d
_THRIFT_TRANSPORT_TSERVERWINPIPES_H_	thrift/include/thrift/transport/TPipeServer.h	21;"	d
_THRIFT_TRANSPORT_TSHORTREADTRANSPORT_H_	thrift/include/thrift/transport/TShortReadTransport.h	21;"	d
_THRIFT_TRANSPORT_TSIMPLEFILETRANSPORT_H_	thrift/include/thrift/transport/TSimpleFileTransport.h	21;"	d
_THRIFT_TRANSPORT_TSOCKETPOOL_H_	thrift/include/thrift/transport/TSocketPool.h	21;"	d
_THRIFT_TRANSPORT_TSOCKET_H_	thrift/include/thrift/transport/TSocket.h	21;"	d
_THRIFT_TRANSPORT_TSSLSERVERSOCKET_H_	thrift/include/thrift/transport/TSSLServerSocket.h	21;"	d
_THRIFT_TRANSPORT_TSSLSOCKET_H_	thrift/include/thrift/transport/TSSLSocket.h	21;"	d
_THRIFT_TRANSPORT_TTRANSPORTEXCEPTION_H_	thrift/include/thrift/transport/TTransportException.h	21;"	d
_THRIFT_TRANSPORT_TTRANSPORTUTILS_H_	thrift/include/thrift/transport/TTransportUtils.h	21;"	d
_THRIFT_TRANSPORT_TTRANSPORT_H_	thrift/include/thrift/transport/TTransport.h	21;"	d
_THRIFT_TRANSPORT_TVIRTUALTRANSPORT_H_	thrift/include/thrift/transport/TVirtualTransport.h	21;"	d
_THRIFT_TRANSPORT_TZLIBTRANSPORT_H_	thrift/include/thrift/transport/TZlibTransport.h	21;"	d
_THRIFT_USING_CLANG_LIBCXX	thrift/include/thrift/cxxfunctional.h	58;"	d
_THRIFT_USING_GNU_LIBSTDCXX	thrift/include/thrift/cxxfunctional.h	63;"	d
_THRIFT_USING_GNU_LIBSTDCXX	thrift/include/thrift/cxxfunctional.h	70;"	d
_THRIFT_USING_MICROSOFT_STDLIB	thrift/include/thrift/cxxfunctional.h	38;"	d
_Work__isset	gen-cpp/tutorial_types.h	/^  _Work__isset() : num1(true), num2(false), op(false), comment(false) {}$/;"	f	struct:tutorial::_Work__isset
_Work__isset	gen-cpp/tutorial_types.h	/^typedef struct _Work__isset {$/;"	s	namespace:tutorial
_Work__isset	gen-cpp/tutorial_types.h	/^} _Work__isset;$/;"	t	namespace:tutorial	typeref:struct:tutorial::_Work__isset
__THRIFT_BIG_ENDIAN	thrift/include/thrift/protocol/TProtocol.h	85;"	d
__THRIFT_BIG_ENDIAN	thrift/include/thrift/protocol/TProtocol.h	92;"	d
__THRIFT_BIG_ENDIAN	thrift/include/thrift/protocol/TProtocol.h	95;"	d
__THRIFT_BYTE_ORDER	thrift/include/thrift/protocol/TProtocol.h	83;"	d
__THRIFT_BYTE_ORDER	thrift/include/thrift/protocol/TProtocol.h	89;"	d
__THRIFT_LITTLE_ENDIAN	thrift/include/thrift/protocol/TProtocol.h	84;"	d
__THRIFT_LITTLE_ENDIAN	thrift/include/thrift/protocol/TProtocol.h	91;"	d
__THRIFT_LITTLE_ENDIAN	thrift/include/thrift/protocol/TProtocol.h	94;"	d
__isset	gen-cpp/Calculator.h	/^  _Calculator_add_args__isset __isset;$/;"	m	class:tutorial::Calculator_add_args
__isset	gen-cpp/Calculator.h	/^  _Calculator_add_presult__isset __isset;$/;"	m	class:tutorial::Calculator_add_presult
__isset	gen-cpp/Calculator.h	/^  _Calculator_add_result__isset __isset;$/;"	m	class:tutorial::Calculator_add_result
__isset	gen-cpp/Calculator.h	/^  _Calculator_calculate_args__isset __isset;$/;"	m	class:tutorial::Calculator_calculate_args
__isset	gen-cpp/Calculator.h	/^  _Calculator_calculate_presult__isset __isset;$/;"	m	class:tutorial::Calculator_calculate_presult
__isset	gen-cpp/Calculator.h	/^  _Calculator_calculate_result__isset __isset;$/;"	m	class:tutorial::Calculator_calculate_result
__isset	gen-cpp/SharedService.h	/^  _SharedService_getStruct_args__isset __isset;$/;"	m	class:shared::SharedService_getStruct_args
__isset	gen-cpp/SharedService.h	/^  _SharedService_getStruct_presult__isset __isset;$/;"	m	class:shared::SharedService_getStruct_presult
__isset	gen-cpp/SharedService.h	/^  _SharedService_getStruct_result__isset __isset;$/;"	m	class:shared::SharedService_getStruct_result
__isset	gen-cpp/shared_types.h	/^  _SharedStruct__isset __isset;$/;"	m	class:shared::SharedStruct
__isset	gen-cpp/tutorial_types.h	/^  _InvalidOperation__isset __isset;$/;"	m	class:tutorial::InvalidOperation
__isset	gen-cpp/tutorial_types.h	/^  _Work__isset __isset;$/;"	m	class:tutorial::Work
__set_comment	gen-cpp/tutorial_types.cpp	/^void Work::__set_comment(const std::string& val) {$/;"	f	class:tutorial::Work
__set_key	gen-cpp/shared_types.cpp	/^void SharedStruct::__set_key(const int32_t val) {$/;"	f	class:shared::SharedStruct
__set_num1	gen-cpp/tutorial_types.cpp	/^void Work::__set_num1(const int32_t val) {$/;"	f	class:tutorial::Work
__set_num2	gen-cpp/tutorial_types.cpp	/^void Work::__set_num2(const int32_t val) {$/;"	f	class:tutorial::Work
__set_op	gen-cpp/tutorial_types.cpp	/^void Work::__set_op(const Operation::type val) {$/;"	f	class:tutorial::Work
__set_value	gen-cpp/shared_types.cpp	/^void SharedStruct::__set_value(const std::string& val) {$/;"	f	class:shared::SharedStruct
__set_whatOp	gen-cpp/tutorial_types.cpp	/^void InvalidOperation::__set_whatOp(const int32_t val) {$/;"	f	class:tutorial::InvalidOperation
__set_why	gen-cpp/tutorial_types.cpp	/^void InvalidOperation::__set_why(const std::string& val) {$/;"	f	class:tutorial::InvalidOperation
_kOperationNames	gen-cpp/tutorial_types.cpp	/^const char* _kOperationNames[] = {$/;"	m	namespace:tutorial	file:
_kOperationValues	gen-cpp/tutorial_types.cpp	/^int _kOperationValues[] = {$/;"	m	namespace:tutorial	file:
_runnable	thrift/include/thrift/concurrency/Thread.h	/^  boost::shared_ptr<Runnable> _runnable;$/;"	m	class:apache::thrift::concurrency::Thread
accTimeout_	thrift/include/thrift/transport/TServerSocket.h	/^  int accTimeout_;$/;"	m	class:apache::thrift::transport::TServerSocket
accept	thrift/include/thrift/transport/TServerTransport.h	/^  boost::shared_ptr<TTransport> accept() {$/;"	f	class:apache::thrift::transport::TServerTransport
acceptBacklog_	thrift/include/thrift/transport/TServerSocket.h	/^  int acceptBacklog_;$/;"	m	class:apache::thrift::transport::TServerSocket
acceptCallback_	thrift/include/thrift/transport/TServerSocket.h	/^  socket_func_t acceptCallback_;$/;"	m	class:apache::thrift::transport::TServerSocket
access	thrift/include/thrift/transport/TSSLSocket.h	/^  virtual void access(boost::shared_ptr<AccessManager> manager) { access_ = manager; }$/;"	f	class:apache::thrift::transport::TSSLSocket
access	thrift/include/thrift/transport/TSSLSocket.h	/^  virtual void access(boost::shared_ptr<AccessManager> manager) { access_ = manager; }$/;"	f	class:apache::thrift::transport::TSSLSocketFactory
access_	thrift/include/thrift/transport/TSSLSocket.h	/^  boost::shared_ptr<AccessManager> access_;$/;"	m	class:apache::thrift::transport::TSSLSocket
access_	thrift/include/thrift/transport/TSSLSocket.h	/^  boost::shared_ptr<AccessManager> access_;$/;"	m	class:apache::thrift::transport::TSSLSocketFactory
activeConnections_	thrift/include/thrift/server/TNonblockingServer.h	/^  std::vector<TConnection*> activeConnections_;$/;"	m	class:apache::thrift::server::TNonblockingServer
actualProcessor_	thrift/include/thrift/processor/PeekProcessor.h	/^  boost::shared_ptr<apache::thrift::TProcessor> actualProcessor_;$/;"	m	class:apache::thrift::processor::PeekProcessor
add	CppServer.cpp	/^  int32_t add(const int32_t n1, const int32_t n2) {$/;"	f	class:CalculatorHandler
add	gen-cpp/Calculator.cpp	/^int32_t CalculatorClient::add(const int32_t num1, const int32_t num2)$/;"	f	class:tutorial::CalculatorClient
add	gen-cpp/Calculator.cpp	/^int32_t CalculatorConcurrentClient::add(const int32_t num1, const int32_t num2)$/;"	f	class:tutorial::CalculatorConcurrentClient
add	gen-cpp/Calculator.h	/^  int32_t add(const int32_t \/* num1 *\/, const int32_t \/* num2 *\/) {$/;"	f	class:tutorial::CalculatorNull
add	gen-cpp/Calculator.h	/^  int32_t add(const int32_t num1, const int32_t num2) {$/;"	f	class:tutorial::CalculatorMultiface
add	gen-cpp/Calculator.h	/^  void add(boost::shared_ptr<CalculatorIf> iface) {$/;"	f	class:tutorial::CalculatorMultiface
add	gen-cpp/Calculator_server.skeleton.cpp	/^  int32_t add(const int32_t num1, const int32_t num2) {$/;"	f	class:CalculatorHandler
add	gen-cpp/SharedService.h	/^  void add(boost::shared_ptr<SharedServiceIf> iface) {$/;"	f	class:shared::SharedServiceMultiface
addTask	thrift/include/thrift/server/TNonblockingServer.h	/^  void addTask(boost::shared_ptr<Runnable> task) {$/;"	f	class:apache::thrift::server::TNonblockingServer
address_	thrift/include/thrift/transport/TServerSocket.h	/^  std::string address_;$/;"	m	class:apache::thrift::transport::TServerSocket
alwaysTryLast_	thrift/include/thrift/transport/TSocketPool.h	/^  bool alwaysTryLast_;$/;"	m	class:apache::thrift::transport::TSocketPool
apache	thrift/include/thrift/TApplicationException.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/TBase.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/TDispatchProcessor.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/TOutput.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/TProcessor.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/TToString.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/Thrift.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/async/TAsyncBufferProcessor.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/async/TAsyncChannel.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/async/TAsyncDispatchProcessor.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/async/TAsyncProcessor.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/async/TAsyncProtocolProcessor.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^namespace apache { namespace thrift { namespace async {$/;"	n
apache	thrift/include/thrift/async/TEvhttpClientChannel.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/async/TEvhttpServer.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/concurrency/BoostThreadFactory.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/concurrency/Exception.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/concurrency/FunctionRunner.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/concurrency/Monitor.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/concurrency/Mutex.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/concurrency/PlatformThreadFactory.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/concurrency/StdMonitor.cpp	/^namespace apache {$/;"	n	file:
apache	thrift/include/thrift/concurrency/StdMutex.cpp	/^namespace apache {$/;"	n	file:
apache	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^namespace apache {$/;"	n	file:
apache	thrift/include/thrift/concurrency/StdThreadFactory.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/concurrency/Thread.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/concurrency/ThreadManager.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/concurrency/TimerManager.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/concurrency/Util.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/cxxfunctional.h	/^  namespace apache { namespace thrift { namespace stdcxx {$/;"	n
apache	thrift/include/thrift/processor/PeekProcessor.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/processor/StatsProcessor.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/protocol/TBase64Utils.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/protocol/TBinaryProtocol.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/protocol/TCompactProtocol.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/protocol/TDebugProtocol.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/protocol/TJSONProtocol.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/protocol/TMultiplexedProtocol.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/protocol/TProtocol.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/protocol/TProtocolDecorator.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/protocol/TProtocolException.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/protocol/TProtocolTap.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/protocol/TVirtualProtocol.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/qt/TQIODeviceTransport.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/qt/TQTcpServer.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/server/TConnectedClient.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/server/TNonblockingServer.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/server/TServer.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/server/TServerFramework.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/server/TSimpleServer.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/server/TThreadPoolServer.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/server/TThreadedServer.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TBufferTransports.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TFDTransport.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TFileTransport.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/THttpClient.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/THttpServer.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/THttpTransport.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TPipe.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TPipeServer.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TSSLServerSocket.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TSSLSocket.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TServerSocket.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TServerTransport.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TShortReadTransport.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TSimpleFileTransport.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TSocket.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TSocketPool.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TTransport.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TTransportException.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TTransportUtils.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TVirtualTransport.h	/^namespace apache {$/;"	n
apache	thrift/include/thrift/transport/TZlibTransport.h	/^namespace apache {$/;"	n
appendBufferToString	thrift/include/thrift/transport/TBufferTransports.h	/^  void appendBufferToString(std::string& str) {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
async	thrift/include/thrift/async/TAsyncBufferProcessor.h	/^namespace async {$/;"	n	namespace:apache::thrift
async	thrift/include/thrift/async/TAsyncChannel.h	/^namespace async {$/;"	n	namespace:apache::thrift
async	thrift/include/thrift/async/TAsyncDispatchProcessor.h	/^namespace async {$/;"	n	namespace:apache::thrift
async	thrift/include/thrift/async/TAsyncProcessor.h	/^namespace async {$/;"	n	namespace:apache::thrift
async	thrift/include/thrift/async/TAsyncProtocolProcessor.h	/^namespace async {$/;"	n	namespace:apache::thrift
async	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^namespace apache { namespace thrift { namespace async {$/;"	n	namespace:apache::thrift
async	thrift/include/thrift/async/TEvhttpClientChannel.h	/^namespace async {$/;"	n	namespace:apache::thrift
async	thrift/include/thrift/async/TEvhttpServer.h	/^namespace async {$/;"	n	namespace:apache::thrift
async	thrift/include/thrift/qt/TQTcpServer.h	/^namespace async {$/;"	n	namespace:apache::thrift
asyncComplete	thrift/include/thrift/TProcessor.h	/^  virtual void asyncComplete(void* ctx, const char* fn_name) {$/;"	f	class:apache::thrift::TProcessorEventHandler
asyncServer_	thrift/include/thrift/async/TAsyncProcessor.h	/^  const TEventServer* asyncServer_;$/;"	m	class:apache::thrift::async::TAsyncProcessor
available_read	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t available_read() const {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
available_write	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t available_write() const { return static_cast<uint32_t>(wBound_ - wBase_); }$/;"	f	class:apache::thrift::transport::TMemoryBuffer
bitwise_cast	thrift/include/thrift/protocol/TProtocol.h	/^static inline To bitwise_cast(From from) {$/;"	f
boolValue	thrift/include/thrift/protocol/TCompactProtocol.h	/^    bool boolValue;$/;"	m	struct:apache::thrift::protocol::TCompactProtocolT::__anon3
boolValue_	thrift/include/thrift/protocol/TCompactProtocol.h	/^  } boolValue_;$/;"	m	class:apache::thrift::protocol::TCompactProtocolT	typeref:struct:apache::thrift::protocol::TCompactProtocolT::__anon3
booleanField_	thrift/include/thrift/protocol/TCompactProtocol.h	/^  } booleanField_;$/;"	m	class:apache::thrift::protocol::TCompactProtocolT	typeref:struct:apache::thrift::protocol::TCompactProtocolT::__anon2
borrow	thrift/include/thrift/transport/TBufferTransports.h	/^  const uint8_t* borrow(uint8_t* buf, uint32_t* len) {$/;"	f	class:apache::thrift::transport::TBufferBase
borrow	thrift/include/thrift/transport/TShortReadTransport.h	/^  const uint8_t* borrow(uint8_t* buf, uint32_t* len) { return transport_->borrow(buf, len); }$/;"	f	class:apache::thrift::transport::test::TShortReadTransport
borrow	thrift/include/thrift/transport/TTransport.h	/^  const uint8_t* borrow(uint8_t* buf, uint32_t* len) {$/;"	f	class:apache::thrift::transport::TTransport
borrow	thrift/include/thrift/transport/TVirtualTransport.h	/^  const uint8_t* borrow(uint8_t* buf, uint32_t* len) {$/;"	f	class:apache::thrift::transport::TTransportDefaults
borrow_virt	thrift/include/thrift/transport/TTransport.h	/^  virtual const uint8_t* borrow_virt(uint8_t* \/* buf *\/, uint32_t* \/* len *\/) { return NULL; }$/;"	f	class:apache::thrift::transport::TTransport
borrow_virt	thrift/include/thrift/transport/TVirtualTransport.h	/^  virtual const uint8_t* borrow_virt(uint8_t* buf, uint32_t* len) {$/;"	f	class:apache::thrift::transport::TVirtualTransport
bswap_16	thrift/include/thrift/protocol/TProtocol.h	128;"	d
bswap_32	thrift/include/thrift/protocol/TProtocol.h	123;"	d
bswap_64	thrift/include/thrift/protocol/TProtocol.h	114;"	d
bufReclaimThresh_	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t bufReclaimThresh_;$/;"	m	class:apache::thrift::transport::TFramedTransport
bufferAndThreadInitialized_	thrift/include/thrift/transport/TFileTransport.h	/^  bool bufferAndThreadInitialized_;$/;"	m	class:apache::thrift::transport::TFileTransport
bufferLen_	thrift/include/thrift/transport/TFileTransport.h	/^  int32_t bufferLen_;$/;"	m	struct:apache::thrift::transport::readState
bufferMode_	thrift/include/thrift/transport/TFileTransport.h	/^  mode bufferMode_;$/;"	m	class:apache::thrift::transport::TFileTransportBuffer
bufferPtr_	thrift/include/thrift/transport/TFileTransport.h	/^  int32_t bufferPtr_;$/;"	m	struct:apache::thrift::transport::readState
bufferSize_	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t bufferSize_;$/;"	m	class:apache::thrift::transport::TMemoryBuffer
buffer_	thrift/include/thrift/transport/TBufferTransports.h	/^  uint8_t* buffer_;$/;"	m	class:apache::thrift::transport::TMemoryBuffer
buffer_	thrift/include/thrift/transport/TFileTransport.h	/^  eventInfo** buffer_;$/;"	m	class:apache::thrift::transport::TFileTransportBuffer
bufsize_	thrift/include/thrift/transport/TPipeServer.h	/^  uint32_t bufsize_;$/;"	m	class:apache::thrift::transport::TPipeServer
cachedPeerAddr_	thrift/include/thrift/transport/TSocket.h	/^  } cachedPeerAddr_;$/;"	m	class:apache::thrift::transport::TSocket	typeref:union:apache::thrift::transport::TSocket::__anon4
calculate	CppServer.cpp	/^  int32_t calculate(const int32_t logid, const Work& work) {$/;"	f	class:CalculatorHandler
calculate	gen-cpp/Calculator.cpp	/^int32_t CalculatorClient::calculate(const int32_t logid, const Work& w)$/;"	f	class:tutorial::CalculatorClient
calculate	gen-cpp/Calculator.cpp	/^int32_t CalculatorConcurrentClient::calculate(const int32_t logid, const Work& w)$/;"	f	class:tutorial::CalculatorConcurrentClient
calculate	gen-cpp/Calculator.h	/^  int32_t calculate(const int32_t \/* logid *\/, const Work& \/* w *\/) {$/;"	f	class:tutorial::CalculatorNull
calculate	gen-cpp/Calculator.h	/^  int32_t calculate(const int32_t logid, const Work& w) {$/;"	f	class:tutorial::CalculatorMultiface
calculate	gen-cpp/Calculator_server.skeleton.cpp	/^  int32_t calculate(const int32_t logid, const Work& w) {$/;"	f	class:CalculatorHandler
cast_sockopt	thrift/include/thrift/server/TNonblockingServer.h	/^inline SOCKOPT_CAST_T* cast_sockopt(T* v) {$/;"	f	namespace:apache::thrift::server
childInterruptSockWriter_	thrift/include/thrift/transport/TServerSocket.h	/^  THRIFT_SOCKET childInterruptSockWriter_;                     \/\/ is notified on interruptChildren()$/;"	m	class:apache::thrift::transport::TServerSocket
chunkSize_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t chunkSize_;$/;"	m	class:apache::thrift::transport::TFileTransport
chunkSize_	thrift/include/thrift/transport/THttpTransport.h	/^  uint32_t chunkSize_;$/;"	m	class:apache::thrift::transport::THttpTransport
chunkedDone_	thrift/include/thrift/transport/THttpTransport.h	/^  bool chunkedDone_;$/;"	m	class:apache::thrift::transport::THttpTransport
chunked_	thrift/include/thrift/transport/THttpTransport.h	/^  bool chunked_;$/;"	m	class:apache::thrift::transport::THttpTransport
client_	thrift/include/thrift/server/TConnectedClient.h	/^  boost::shared_ptr<apache::thrift::transport::TTransport> client_;$/;"	m	class:apache::thrift::server::TConnectedClient
clientsMonitor_	thrift/include/thrift/server/TThreadedServer.h	/^  apache::thrift::concurrency::Monitor clientsMonitor_;$/;"	m	class:apache::thrift::server::TThreadedServer
clients_	thrift/include/thrift/server/TServerFramework.h	/^  int64_t clients_;$/;"	m	class:apache::thrift::server::TServerFramework
close	thrift/include/thrift/transport/TBufferTransports.h	/^  void close() {$/;"	f	class:apache::thrift::transport::TBufferedTransport
close	thrift/include/thrift/transport/TBufferTransports.h	/^  void close() {$/;"	f	class:apache::thrift::transport::TFramedTransport
close	thrift/include/thrift/transport/TBufferTransports.h	/^  void close() {}$/;"	f	class:apache::thrift::transport::TMemoryBuffer
close	thrift/include/thrift/transport/THttpTransport.h	/^  void close() { transport_->close(); }$/;"	f	class:apache::thrift::transport::THttpTransport
close	thrift/include/thrift/transport/TShortReadTransport.h	/^  void close() { transport_->close(); }$/;"	f	class:apache::thrift::transport::test::TShortReadTransport
close	thrift/include/thrift/transport/TTransport.h	/^  virtual void close() {$/;"	f	class:apache::thrift::transport::TTransport
close	thrift/include/thrift/transport/TTransportUtils.h	/^  void close() { srcTrans_->close(); }$/;"	f	class:apache::thrift::transport::TPipedTransport
close	thrift/include/thrift/transport/TZlibTransport.h	/^  void close() { transport_->close(); }$/;"	f	class:apache::thrift::transport::TZlibTransport
close_policy_	thrift/include/thrift/transport/TFDTransport.h	/^  ClosePolicy close_policy_;$/;"	m	class:apache::thrift::transport::TFDTransport
closing_	thrift/include/thrift/transport/TFileTransport.h	/^  volatile bool closing_;$/;"	m	class:apache::thrift::transport::TFileTransport
cob_	thrift/include/thrift/async/TEvhttpClientChannel.h	/^  VoidCallback cob_;$/;"	m	class:apache::thrift::async::TEvhttpClientChannel
comment	gen-cpp/tutorial_types.h	/^  bool comment :1;$/;"	m	struct:tutorial::_Work__isset
comment	gen-cpp/tutorial_types.h	/^  std::string comment;$/;"	m	class:tutorial::Work
committed_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  bool committed_;$/;"	m	class:apache::thrift::async::TConcurrentRecvSentry
committed_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  bool committed_;$/;"	m	class:apache::thrift::async::TConcurrentSendSentry
comp_level_	thrift/include/thrift/transport/TZlibTransport.h	/^  const int comp_level_;$/;"	m	class:apache::thrift::transport::TZlibTransport
concurrency	thrift/include/thrift/concurrency/BoostThreadFactory.h	/^namespace concurrency {$/;"	n	namespace:apache::thrift
concurrency	thrift/include/thrift/concurrency/Exception.h	/^namespace concurrency {$/;"	n	namespace:apache::thrift
concurrency	thrift/include/thrift/concurrency/FunctionRunner.h	/^namespace concurrency {$/;"	n	namespace:apache::thrift
concurrency	thrift/include/thrift/concurrency/Monitor.h	/^namespace concurrency {$/;"	n	namespace:apache::thrift
concurrency	thrift/include/thrift/concurrency/Mutex.h	/^namespace concurrency {$/;"	n	namespace:apache::thrift
concurrency	thrift/include/thrift/concurrency/PlatformThreadFactory.h	/^namespace concurrency {$/;"	n	namespace:apache::thrift
concurrency	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^namespace concurrency {$/;"	n	namespace:apache::thrift
concurrency	thrift/include/thrift/concurrency/StdMonitor.cpp	/^namespace concurrency {$/;"	n	namespace:apache::thrift	file:
concurrency	thrift/include/thrift/concurrency/StdMutex.cpp	/^namespace concurrency {$/;"	n	namespace:apache::thrift	file:
concurrency	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^namespace concurrency {$/;"	n	namespace:apache::thrift	file:
concurrency	thrift/include/thrift/concurrency/StdThreadFactory.h	/^namespace concurrency {$/;"	n	namespace:apache::thrift
concurrency	thrift/include/thrift/concurrency/Thread.h	/^namespace concurrency {$/;"	n	namespace:apache::thrift
concurrency	thrift/include/thrift/concurrency/ThreadManager.h	/^namespace concurrency {$/;"	n	namespace:apache::thrift
concurrency	thrift/include/thrift/concurrency/TimerManager.h	/^namespace concurrency {$/;"	n	namespace:apache::thrift
concurrency	thrift/include/thrift/concurrency/Util.h	/^namespace concurrency {$/;"	n	namespace:apache::thrift
conditionVariable_	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  std::condition_variable_any conditionVariable_;$/;"	m	class:apache::thrift::concurrency::Monitor::Impl	file:
connMutex_	thrift/include/thrift/server/TNonblockingServer.h	/^  Mutex connMutex_;$/;"	m	class:apache::thrift::server::TNonblockingServer
connTimeout_	thrift/include/thrift/transport/TSocket.h	/^  int connTimeout_;$/;"	m	class:apache::thrift::transport::TSocket
conn_	thrift/include/thrift/async/TEvhttpClientChannel.h	/^  struct evhttp_connection* conn_;$/;"	m	class:apache::thrift::async::TEvhttpClientChannel	typeref:struct:apache::thrift::async::TEvhttpClientChannel::evhttp_connection
connectionStackLimit_	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t connectionStackLimit_;$/;"	m	class:apache::thrift::server::TNonblockingServer
connectionStack_	thrift/include/thrift/server/TNonblockingServer.h	/^  std::stack<TConnection*> connectionStack_;$/;"	m	class:apache::thrift::server::TNonblockingServer
consecutiveFailures_	thrift/include/thrift/transport/TSocketPool.h	/^  int consecutiveFailures_;$/;"	m	class:apache::thrift::transport::TSocketPoolServer
const_cast_sockopt	thrift/include/thrift/server/TNonblockingServer.h	/^inline const SOCKOPT_CAST_T* const_cast_sockopt(const T* v) {$/;"	f	namespace:apache::thrift::server
consume	thrift/include/thrift/transport/TBufferTransports.h	/^  void consume(uint32_t len) {$/;"	f	class:apache::thrift::transport::TBufferBase
consume	thrift/include/thrift/transport/TShortReadTransport.h	/^  void consume(uint32_t len) { return transport_->consume(len); }$/;"	f	class:apache::thrift::transport::test::TShortReadTransport
consume	thrift/include/thrift/transport/TTransport.h	/^  void consume(uint32_t len) {$/;"	f	class:apache::thrift::transport::TTransport
consume	thrift/include/thrift/transport/TVirtualTransport.h	/^  void consume(uint32_t len) { this->TTransport::consume_virt(len); }$/;"	f	class:apache::thrift::transport::TTransportDefaults
consume_virt	thrift/include/thrift/transport/TTransport.h	/^  virtual void consume_virt(uint32_t \/* len *\/) {$/;"	f	class:apache::thrift::transport::TTransport
consume_virt	thrift/include/thrift/transport/TVirtualTransport.h	/^  virtual void consume_virt(uint32_t len) { static_cast<Transport_*>(this)->consume(len); }$/;"	f	class:apache::thrift::transport::TVirtualTransport
container_limit_	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  int32_t container_limit_;$/;"	m	class:apache::thrift::protocol::TBinaryProtocolFactoryT
container_limit_	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  int32_t container_limit_;$/;"	m	class:apache::thrift::protocol::TBinaryProtocolT
container_limit_	thrift/include/thrift/protocol/TCompactProtocol.h	/^  int32_t container_limit_;$/;"	m	class:apache::thrift::protocol::TCompactProtocolFactoryT
container_limit_	thrift/include/thrift/protocol/TCompactProtocol.h	/^  int32_t container_limit_;$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
contentLength_	thrift/include/thrift/transport/THttpTransport.h	/^  uint32_t contentLength_;$/;"	m	class:apache::thrift::transport::THttpTransport
context_	thrift/include/thrift/TProcessor.h	/^  void* context_;$/;"	m	class:apache::thrift::TProcessorContextFreer
context_	thrift/include/thrift/protocol/TJSONProtocol.h	/^  boost::shared_ptr<TJSONContext> context_;$/;"	m	class:apache::thrift::protocol::TJSONProtocol
contexts_	thrift/include/thrift/protocol/TJSONProtocol.h	/^  std::stack<boost::shared_ptr<TJSONContext> > contexts_;$/;"	m	class:apache::thrift::protocol::TJSONProtocol
corruptedEventSleepTime_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t corruptedEventSleepTime_;$/;"	m	class:apache::thrift::transport::TFileTransport
count_	thrift/include/thrift/transport/TSSLSocket.h	/^  static uint64_t count_;$/;"	m	class:apache::thrift::transport::TSSLSocketFactory
crbuf_	thrift/include/thrift/transport/TZlibTransport.h	/^  uint8_t* crbuf_;$/;"	m	class:apache::thrift::transport::TZlibTransport
crbuf_size_	thrift/include/thrift/transport/TZlibTransport.h	/^  uint32_t crbuf_size_;$/;"	m	class:apache::thrift::transport::TZlibTransport
create	thrift/include/thrift/concurrency/FunctionRunner.h	/^  static boost::shared_ptr<FunctionRunner> create(PthreadFuncPtr func, void* arg) {$/;"	f	class:apache::thrift::concurrency::FunctionRunner
create	thrift/include/thrift/concurrency/FunctionRunner.h	/^  static boost::shared_ptr<FunctionRunner> create(const VoidFunc& cob) {$/;"	f	class:apache::thrift::concurrency::FunctionRunner
createContext	thrift/include/thrift/server/TServer.h	/^  virtual void* createContext(boost::shared_ptr<TProtocol> input,$/;"	f	class:apache::thrift::server::TServerEventHandler
ctxMap_	thrift/include/thrift/qt/TQTcpServer.h	/^  std::map<QT_PREPEND_NAMESPACE(QTcpSocket)*, boost::shared_ptr<ConnectionContext> > ctxMap_;$/;"	m	class:apache::thrift::async::TQTcpServer
ctx_	thrift/include/thrift/transport/TSSLSocket.h	/^  SSL_CTX* ctx_;$/;"	m	class:apache::thrift::transport::SSLContext
ctx_	thrift/include/thrift/transport/TSSLSocket.h	/^  boost::shared_ptr<SSLContext> ctx_;$/;"	m	class:apache::thrift::transport::TSSLSocket
ctx_	thrift/include/thrift/transport/TSSLSocket.h	/^  boost::shared_ptr<SSLContext> ctx_;$/;"	m	class:apache::thrift::transport::TSSLSocketFactory
currentEvent_	thrift/include/thrift/transport/TFileTransport.h	/^  eventInfo* currentEvent_;$/;"	m	class:apache::thrift::transport::TFileTransport
currentServer_	thrift/include/thrift/transport/TSocketPool.h	/^  boost::shared_ptr<TSocketPoolServer> currentServer_;$/;"	m	class:apache::thrift::transport::TSocketPool
currentTime	thrift/include/thrift/concurrency/Util.h	/^  static int64_t currentTime() { return currentTimeTicks(MS_PER_S); }$/;"	f	class:apache::thrift::concurrency::Util
currentTimeUsec	thrift/include/thrift/concurrency/Util.h	/^  static int64_t currentTimeUsec() { return currentTimeTicks(US_PER_S); }$/;"	f	class:apache::thrift::concurrency::Util
cwbuf_	thrift/include/thrift/transport/TZlibTransport.h	/^  uint8_t* cwbuf_;$/;"	m	class:apache::thrift::transport::TZlibTransport
cwbuf_size_	thrift/include/thrift/transport/TZlibTransport.h	/^  uint32_t cwbuf_size_;$/;"	m	class:apache::thrift::transport::TZlibTransport
data_	thrift/include/thrift/protocol/TJSONProtocol.h	/^    uint8_t data_;$/;"	m	class:apache::thrift::protocol::TJSONProtocol::LookaheadReader
decrementActiveProcessors	thrift/include/thrift/server/TNonblockingServer.h	/^  void decrementActiveProcessors() {$/;"	f	class:apache::thrift::server::TNonblockingServer
decrementInputRecursionDepth	thrift/include/thrift/protocol/TProtocol.h	/^  void decrementInputRecursionDepth() { --input_recursion_depth_; }$/;"	f	class:apache::thrift::protocol::TProtocol
decrementOutputRecursionDepth	thrift/include/thrift/protocol/TProtocol.h	/^  void decrementOutputRecursionDepth() { --output_recursion_depth_; }$/;"	f	class:apache::thrift::protocol::TProtocol
defaultSize	thrift/include/thrift/transport/TBufferTransports.h	/^  static const uint32_t defaultSize = 1024;$/;"	m	class:apache::thrift::transport::TMemoryBuffer
delayException	thrift/include/thrift/Thrift.h	/^TDelayedException* TDelayedException::delayException(const E& e) {$/;"	f	class:apache::thrift::TDelayedException
deleteContext	thrift/include/thrift/server/TServer.h	/^  virtual void deleteContext(void* serverContext,$/;"	f	class:apache::thrift::server::TServerEventHandler
dequeueBuffer_	thrift/include/thrift/transport/TFileTransport.h	/^  TFileTransportBuffer* dequeueBuffer_;$/;"	m	class:apache::thrift::transport::TFileTransport
detached_	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  bool detached_;$/;"	m	class:apache::thrift::concurrency::StdThread	file:
detached_	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  bool detached_;$/;"	m	class:apache::thrift::concurrency::StdThreadFactory::Impl	file:
dev_	thrift/include/thrift/qt/TQIODeviceTransport.h	/^  boost::shared_ptr<QIODevice> dev_;$/;"	m	class:apache::thrift::transport::TQIODeviceTransport
dispatchCall	gen-cpp/Calculator.cpp	/^bool CalculatorProcessor::dispatchCall(::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, const std::string& fname, int32_t seqid, void* callContext) {$/;"	f	class:tutorial::CalculatorProcessor
dispatchCall	gen-cpp/SharedService.cpp	/^bool SharedServiceProcessor::dispatchCall(::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, const std::string& fname, int32_t seqid, void* callContext) {$/;"	f	class:shared::SharedServiceProcessor
dispatcherThread_	thrift/include/thrift/concurrency/TimerManager.h	/^  boost::shared_ptr<Thread> dispatcherThread_;$/;"	m	class:apache::thrift::concurrency::TimerManager
dispatcher_	thrift/include/thrift/concurrency/TimerManager.h	/^  boost::shared_ptr<Dispatcher> dispatcher_;$/;"	m	class:apache::thrift::concurrency::TimerManager
dstTrans_	thrift/include/thrift/transport/TTransportUtils.h	/^  boost::shared_ptr<TTransport> dstTrans_;$/;"	m	class:apache::thrift::transport::TPipedTransport
dstTrans_	thrift/include/thrift/transport/TTransportUtils.h	/^  boost::shared_ptr<TTransport> dstTrans_;$/;"	m	class:apache::thrift::transport::TPipedTransportFactory
e_	thrift/include/thrift/Thrift.h	/^  E e_;$/;"	m	class:apache::thrift::TExceptionWrapper
eb_	thrift/include/thrift/async/TEvhttpServer.h	/^  struct event_base* eb_;$/;"	m	class:apache::thrift::async::TEvhttpServer	typeref:struct:apache::thrift::async::TEvhttpServer::event_base
eh_	thrift/include/thrift/async/TEvhttpServer.h	/^  struct evhttp* eh_;$/;"	m	class:apache::thrift::async::TEvhttpServer	typeref:struct:apache::thrift::async::TEvhttpServer::evhttp
enqueueBuffer_	thrift/include/thrift/transport/TFileTransport.h	/^  TFileTransportBuffer* enqueueBuffer_;$/;"	m	class:apache::thrift::transport::TFileTransport
enums_	thrift/include/thrift/Thrift.h	/^  int* enums_;$/;"	m	class:apache::thrift::TEnumIterator
eofSleepTime_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t eofSleepTime_;$/;"	m	class:apache::thrift::transport::TFileTransport
error	thrift/include/thrift/async/TEvhttpClientChannel.h	/^  virtual bool error() const { return false; }$/;"	f	class:apache::thrift::async::TEvhttpClientChannel
errorMessage	thrift/include/thrift/transport/TZlibTransport.h	/^  static std::string errorMessage(int status, const char* msg) {$/;"	f	class:apache::thrift::transport::TZlibTransportException
eventBase_	thrift/include/thrift/server/TNonblockingServer.h	/^  event_base* eventBase_;$/;"	m	class:apache::thrift::server::TNonblockingIOThread
eventBuffPos_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t eventBuffPos_;$/;"	m	struct:apache::thrift::transport::eventInfo
eventBuff_	thrift/include/thrift/transport/TFileTransport.h	/^  uint8_t* eventBuff_;$/;"	m	struct:apache::thrift::transport::eventInfo
eventBufferSize_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t eventBufferSize_;$/;"	m	class:apache::thrift::transport::TFileTransport
eventHandler_	thrift/include/thrift/TProcessor.h	/^  boost::shared_ptr<TProcessorEventHandler> eventHandler_;$/;"	m	class:apache::thrift::TProcessor
eventHandler_	thrift/include/thrift/async/TAsyncProcessor.h	/^  boost::shared_ptr<TProcessorEventHandler> eventHandler_;$/;"	m	class:apache::thrift::async::TAsyncProcessor
eventHandler_	thrift/include/thrift/server/TConnectedClient.h	/^  boost::shared_ptr<apache::thrift::server::TServerEventHandler> eventHandler_;$/;"	m	class:apache::thrift::server::TConnectedClient
eventHandler_	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TServerEventHandler> eventHandler_;$/;"	m	class:apache::thrift::server::TServer
eventInfo	thrift/include/thrift/transport/TFileTransport.h	/^  eventInfo() : eventBuff_(NULL), eventSize_(0), eventBuffPos_(0){};$/;"	f	struct:apache::thrift::transport::eventInfo
eventInfo	thrift/include/thrift/transport/TFileTransport.h	/^typedef struct eventInfo {$/;"	s	namespace:apache::thrift::transport
eventInfo	thrift/include/thrift/transport/TFileTransport.h	/^} eventInfo;$/;"	t	namespace:apache::thrift::transport	typeref:struct:apache::thrift::transport::eventInfo
eventSizeBuffPos_	thrift/include/thrift/transport/TFileTransport.h	/^  uint8_t eventSizeBuffPos_;$/;"	m	struct:apache::thrift::transport::readState
eventSizeBuff_	thrift/include/thrift/transport/TFileTransport.h	/^  uint8_t eventSizeBuff_[4];$/;"	m	struct:apache::thrift::transport::readState
eventSize_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t eventSize_;$/;"	m	struct:apache::thrift::transport::eventInfo
event_	thrift/include/thrift/transport/TFileTransport.h	/^  eventInfo* event_;$/;"	m	struct:apache::thrift::transport::readState
evutil_socket_t	thrift/include/thrift/server/TNonblockingServer.h	/^typedef THRIFT_SOCKET evutil_socket_t;$/;"	t	namespace:apache::thrift::server
f_	thrift/include/thrift/TOutput.h	/^  void (*f_)(const char*);$/;"	m	class:apache::thrift::TOutput
factory_	thrift/include/thrift/transport/TSSLServerSocket.h	/^  boost::shared_ptr<TSSLSocketFactory> factory_;$/;"	m	class:apache::thrift::transport::TSSLServerSocket
fd_	thrift/include/thrift/transport/TFDTransport.h	/^  int fd_;$/;"	m	class:apache::thrift::transport::TFDTransport
fd_	thrift/include/thrift/transport/TFileTransport.h	/^  int fd_;$/;"	m	class:apache::thrift::transport::TFileTransport
fieldId	thrift/include/thrift/protocol/TCompactProtocol.h	/^    int16_t fieldId;$/;"	m	struct:apache::thrift::protocol::TCompactProtocolT::__anon2
fieldType	thrift/include/thrift/protocol/TCompactProtocol.h	/^    TType fieldType;$/;"	m	struct:apache::thrift::protocol::TCompactProtocolT::__anon2
filename_	thrift/include/thrift/transport/TFileTransport.h	/^  std::string filename_;$/;"	m	class:apache::thrift::transport::TFileTransport
flush	thrift/include/thrift/transport/TShortReadTransport.h	/^  void flush() { transport_->flush(); }$/;"	f	class:apache::thrift::transport::test::TShortReadTransport
flush	thrift/include/thrift/transport/TTransport.h	/^  virtual void flush() {$/;"	f	class:apache::thrift::transport::TTransport
flushMaxBytes_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t flushMaxBytes_;$/;"	m	class:apache::thrift::transport::TFileTransport
flushMaxUs_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t flushMaxUs_;$/;"	m	class:apache::thrift::transport::TFileTransport
flushed_	thrift/include/thrift/transport/TFileTransport.h	/^  Monitor flushed_;$/;"	m	class:apache::thrift::transport::TFileTransport
fnamePending_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  std::string fnamePending_;$/;"	m	class:apache::thrift::async::TConcurrentClientSyncInfo
forceFlush_	thrift/include/thrift/transport/TFileTransport.h	/^  volatile bool forceFlush_;$/;"	m	class:apache::thrift::transport::TFileTransport
freeContext	thrift/include/thrift/TProcessor.h	/^  virtual void freeContext(void* ctx, const char* fn_name) {$/;"	f	class:apache::thrift::TProcessorEventHandler
freeMonitors_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  std::vector<MonitorPtr> freeMonitors_;$/;"	m	class:apache::thrift::async::TConcurrentClientSyncInfo
frequency_	thrift/include/thrift/processor/StatsProcessor.h	/^  bool frequency_;$/;"	m	class:apache::thrift::processor::StatsProcessor
frequency_map_	thrift/include/thrift/processor/StatsProcessor.h	/^  std::map<std::string, int64_t> frequency_map_;$/;"	m	class:apache::thrift::processor::StatsProcessor
fromWire16	thrift/include/thrift/protocol/TProtocol.h	/^  static uint16_t fromWire16(uint16_t x) {return THRIFT_letohs(x);}$/;"	f	struct:apache::thrift::protocol::TNetworkLittleEndian
fromWire16	thrift/include/thrift/protocol/TProtocol.h	/^  static uint16_t fromWire16(uint16_t x) {return ntohs(x);}$/;"	f	struct:apache::thrift::protocol::TNetworkBigEndian
fromWire32	thrift/include/thrift/protocol/TProtocol.h	/^  static uint32_t fromWire32(uint32_t x) {return THRIFT_letohl(x);}$/;"	f	struct:apache::thrift::protocol::TNetworkLittleEndian
fromWire32	thrift/include/thrift/protocol/TProtocol.h	/^  static uint32_t fromWire32(uint32_t x) {return ntohl(x);}$/;"	f	struct:apache::thrift::protocol::TNetworkBigEndian
fromWire64	thrift/include/thrift/protocol/TProtocol.h	/^  static uint64_t fromWire64(uint64_t x) {return THRIFT_letohll(x);}$/;"	f	struct:apache::thrift::protocol::TNetworkLittleEndian
fromWire64	thrift/include/thrift/protocol/TProtocol.h	/^  static uint64_t fromWire64(uint64_t x) {return THRIFT_ntohll(x);}$/;"	f	struct:apache::thrift::protocol::TNetworkBigEndian
fullProb_	thrift/include/thrift/transport/TShortReadTransport.h	/^  double fullProb_;$/;"	m	class:apache::thrift::transport::test::TShortReadTransport
func_	thrift/include/thrift/concurrency/FunctionRunner.h	/^  VoidFunc func_;$/;"	m	class:apache::thrift::concurrency::FunctionRunner
g	thrift/include/thrift/concurrency/Monitor.h	/^  Guard g;$/;"	m	class:apache::thrift::concurrency::Synchronized
g_shared_constants	gen-cpp/shared_constants.cpp	/^const sharedConstants g_shared_constants;$/;"	m	namespace:shared	file:
g_tutorial_constants	gen-cpp/tutorial_constants.cpp	/^const tutorialConstants g_tutorial_constants;$/;"	m	namespace:tutorial	file:
get	thrift/include/thrift/transport/TSSLSocket.h	/^  SSL_CTX* get() { return ctx_; }$/;"	f	class:apache::thrift::transport::SSLContext
getAsyncServer	thrift/include/thrift/async/TAsyncProcessor.h	/^  const TEventServer* getAsyncServer() { return asyncServer_; }$/;"	f	class:apache::thrift::async::TAsyncProcessor
getBuffer	thrift/include/thrift/transport/TBufferTransports.h	/^  void getBuffer(uint8_t** bufPtr, uint32_t* sz) {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
getBufferAsString	thrift/include/thrift/transport/TBufferTransports.h	/^  std::string getBufferAsString() {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
getChunkSize	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t getChunkSize() { return chunkSize_; }$/;"	f	class:apache::thrift::transport::TFileTransport
getConnectionStackLimit	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getConnectionStackLimit() const { return connectionStackLimit_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getContext	thrift/include/thrift/TProcessor.h	/^  virtual void* getContext(const char* fn_name, void* serverContext) {$/;"	f	class:apache::thrift::TProcessorEventHandler
getCurrentThreadId	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  Thread::id_t getCurrentThreadId() const { return std::this_thread::get_id(); }$/;"	f	class:apache::thrift::concurrency::StdThreadFactory::Impl
getCurrentThreadId	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^Thread::id_t StdThreadFactory::getCurrentThreadId() const {$/;"	f	class:apache::thrift::concurrency::StdThreadFactory
getEofSleepTimeUs	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t getEofSleepTimeUs() { return eofSleepTime_; }$/;"	f	class:apache::thrift::transport::TFileTransport
getEventBase	thrift/include/thrift/server/TNonblockingServer.h	/^  event_base* getEventBase() const { return eventBase_; }$/;"	f	class:apache::thrift::server::TNonblockingIOThread
getEventBufferSize	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t getEventBufferSize() { return eventBufferSize_; }$/;"	f	class:apache::thrift::transport::TFileTransport
getEventHandler	thrift/include/thrift/TProcessor.h	/^  boost::shared_ptr<TProcessorEventHandler> getEventHandler() { return eventHandler_; }$/;"	f	class:apache::thrift::TProcessor
getEventHandler	thrift/include/thrift/async/TAsyncProcessor.h	/^  boost::shared_ptr<TProcessorEventHandler> getEventHandler() { return eventHandler_; }$/;"	f	class:apache::thrift::async::TAsyncProcessor
getEventHandler	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TServerEventHandler> getEventHandler() { return eventHandler_; }$/;"	f	class:apache::thrift::server::TServer
getEventSize	thrift/include/thrift/transport/TFileTransport.h	/^  inline uint32_t getEventSize() {$/;"	f	struct:apache::thrift::transport::readState
getFD	thrift/include/thrift/transport/TFDTransport.h	/^  int getFD() { return fd_; }$/;"	f	class:apache::thrift::transport::TFDTransport
getFileReaderTransport	thrift/include/thrift/transport/TTransportUtils.h	/^  boost::shared_ptr<TFileReaderTransport> getFileReaderTransport($/;"	f	class:apache::thrift::transport::TPipedFileReaderTransportFactory
getFlushMaxBytes	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t getFlushMaxBytes() { return flushMaxBytes_; }$/;"	f	class:apache::thrift::transport::TFileTransport
getFlushMaxUs	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t getFlushMaxUs() { return flushMaxUs_; }$/;"	f	class:apache::thrift::transport::TFileTransport
getHandler	CppServer.cpp	/^  virtual CalculatorIf* getHandler(const ::apache::thrift::TConnectionInfo& connInfo)$/;"	f	class:CalculatorCloneFactory
getHandler	gen-cpp/Calculator.h	/^  virtual CalculatorIf* getHandler(const ::apache::thrift::TConnectionInfo&) {$/;"	f	class:tutorial::CalculatorIfSingletonFactory
getHandler	gen-cpp/SharedService.h	/^  virtual SharedServiceIf* getHandler(const ::apache::thrift::TConnectionInfo&) {$/;"	f	class:shared::SharedServiceIfSingletonFactory
getId	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  Thread::id_t getId() { return thread_.get() ? thread_->get_id() : std::thread::id(); }$/;"	f	class:apache::thrift::concurrency::StdThread
getIdleBufferMemLimit	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getIdleBufferMemLimit() const { return idleReadBufferLimit_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getIdleReadBufferLimit	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getIdleReadBufferLimit() const { return idleReadBufferLimit_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getIdleWriteBufferLimit	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getIdleWriteBufferLimit() const { return idleWriteBufferLimit_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getInputProtocol	gen-cpp/Calculator.h	/^  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {$/;"	f	class:tutorial::CalculatorClient
getInputProtocol	gen-cpp/Calculator.h	/^  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {$/;"	f	class:tutorial::CalculatorConcurrentClient
getInputProtocol	gen-cpp/SharedService.h	/^  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {$/;"	f	class:shared::SharedServiceClient
getInputProtocol	gen-cpp/SharedService.h	/^  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {$/;"	f	class:shared::SharedServiceConcurrentClient
getInputProtocolFactory	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TProtocolFactory> getInputProtocolFactory() { return inputProtocolFactory_; }$/;"	f	class:apache::thrift::server::TServer
getInputTransport	thrift/include/thrift/protocol/TProtocol.h	/^  inline boost::shared_ptr<TTransport> getInputTransport() { return ptrans_; }$/;"	f	class:apache::thrift::protocol::TProtocol
getInputTransportFactory	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TTransportFactory> getInputTransportFactory() { return inputTransportFactory_; }$/;"	f	class:apache::thrift::server::TServer
getListenPort	thrift/include/thrift/server/TNonblockingServer.h	/^  int getListenPort() { return listenPort_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getMaxActiveProcessors	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getMaxActiveProcessors() const { return maxActiveProcessors_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getMaxConnections	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getMaxConnections() const { return maxConnections_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getMaxCorruptedEvents	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t getMaxCorruptedEvents() { return maxCorruptedEvents_; }$/;"	f	class:apache::thrift::transport::TFileTransport
getMaxEventSize	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t getMaxEventSize() { return maxEventSize_; }$/;"	f	class:apache::thrift::transport::TFileTransport
getMaxFrameSize	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getMaxFrameSize() const { return maxFrameSize_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getMaxFrameSize	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t getMaxFrameSize() { return maxFrameSize_; }$/;"	f	class:apache::thrift::transport::TFramedTransport
getNotificationRecvFD	thrift/include/thrift/server/TNonblockingServer.h	/^  evutil_socket_t getNotificationRecvFD() const { return notificationPipeFDs_[0]; }$/;"	f	class:apache::thrift::server::TNonblockingIOThread
getNotificationSendFD	thrift/include/thrift/server/TNonblockingServer.h	/^  evutil_socket_t getNotificationSendFD() const { return notificationPipeFDs_[1]; }$/;"	f	class:apache::thrift::server::TNonblockingIOThread
getNumActiveConnections	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getNumActiveConnections() const { return getNumConnections() - getNumIdleConnections(); }$/;"	f	class:apache::thrift::server::TNonblockingServer
getNumActiveProcessors	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getNumActiveProcessors() const { return numActiveProcessors_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getNumConnections	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getNumConnections() const { return numTConnections_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getNumIOThreads	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getNumIOThreads() const { return numIOThreads_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getNumIdleConnections	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getNumIdleConnections() const { return connectionStack_.size(); }$/;"	f	class:apache::thrift::server::TNonblockingServer
getOrigin	thrift/include/thrift/transport/TBufferTransports.h	/^  virtual const std::string getOrigin() { return transport_->getOrigin(); }$/;"	f	class:apache::thrift::transport::TBufferedTransport
getOrigin	thrift/include/thrift/transport/TBufferTransports.h	/^  virtual const std::string getOrigin() { return transport_->getOrigin(); }$/;"	f	class:apache::thrift::transport::TFramedTransport
getOrigin	thrift/include/thrift/transport/TTransport.h	/^  virtual const std::string getOrigin() { return "Unknown"; }$/;"	f	class:apache::thrift::transport::TTransport
getOutputProtocol	gen-cpp/Calculator.h	/^  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {$/;"	f	class:tutorial::CalculatorClient
getOutputProtocol	gen-cpp/Calculator.h	/^  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {$/;"	f	class:tutorial::CalculatorConcurrentClient
getOutputProtocol	gen-cpp/SharedService.h	/^  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {$/;"	f	class:shared::SharedServiceClient
getOutputProtocol	gen-cpp/SharedService.h	/^  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {$/;"	f	class:shared::SharedServiceConcurrentClient
getOutputProtocolFactory	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TProtocolFactory> getOutputProtocolFactory() { return outputProtocolFactory_; }$/;"	f	class:apache::thrift::server::TServer
getOutputTransport	thrift/include/thrift/protocol/TProtocol.h	/^  inline boost::shared_ptr<TTransport> getOutputTransport() { return ptrans_; }$/;"	f	class:apache::thrift::protocol::TProtocol
getOutputTransportFactory	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TTransportFactory> getOutputTransportFactory() {$/;"	f	class:apache::thrift::server::TServer
getOverloadAction	thrift/include/thrift/server/TNonblockingServer.h	/^  TOverloadAction getOverloadAction() const { return overloadAction_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getOverloadHysteresis	thrift/include/thrift/server/TNonblockingServer.h	/^  double getOverloadHysteresis() const { return overloadHysteresis_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getPassword	thrift/include/thrift/transport/TSSLSocket.h	/^  virtual void getPassword(std::string& \/* password *\/, int \/* size *\/) {}$/;"	f	class:apache::thrift::transport::TSSLSocketFactory
getProcessor	gen-cpp/Calculator.cpp	/^::boost::shared_ptr< ::apache::thrift::TProcessor > CalculatorProcessorFactory::getProcessor(const ::apache::thrift::TConnectionInfo& connInfo) {$/;"	f	class:tutorial::CalculatorProcessorFactory
getProcessor	gen-cpp/SharedService.cpp	/^::boost::shared_ptr< ::apache::thrift::TProcessor > SharedServiceProcessorFactory::getProcessor(const ::apache::thrift::TConnectionInfo& connInfo) {$/;"	f	class:shared::SharedServiceProcessorFactory
getProcessor	thrift/include/thrift/TProcessor.h	/^  boost::shared_ptr<TProcessor> getProcessor(const TConnectionInfo&) { return processor_; }$/;"	f	class:apache::thrift::TSingletonProcessorFactory
getProcessor	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TProcessor> getProcessor(boost::shared_ptr<TProtocol> inputProtocol,$/;"	f	class:apache::thrift::server::TServer
getProcessorFactory	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TProcessorFactory> getProcessorFactory() { return processorFactory_; }$/;"	f	class:apache::thrift::server::TServer
getProtocol	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  boost::shared_ptr<TProtocol> getProtocol(boost::shared_ptr<TTransport> trans) {$/;"	f	class:apache::thrift::protocol::TBinaryProtocolFactoryT
getProtocol	thrift/include/thrift/protocol/TCompactProtocol.h	/^  boost::shared_ptr<TProtocol> getProtocol(boost::shared_ptr<TTransport> trans) {$/;"	f	class:apache::thrift::protocol::TCompactProtocolFactoryT
getProtocol	thrift/include/thrift/protocol/TDebugProtocol.h	/^  boost::shared_ptr<TProtocol> getProtocol(boost::shared_ptr<TTransport> trans) {$/;"	f	class:apache::thrift::protocol::TDebugProtocolFactory
getProtocol	thrift/include/thrift/protocol/TJSONProtocol.h	/^  boost::shared_ptr<TProtocol> getProtocol(boost::shared_ptr<TTransport> trans) {$/;"	f	class:apache::thrift::protocol::TJSONProtocolFactory
getReadBuffSize	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t getReadBuffSize() { return readBuffSize_; }$/;"	f	class:apache::thrift::transport::TFileTransport
getReadMutex	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  ::apache::thrift::concurrency::Mutex &getReadMutex() {return readMutex_;}$/;"	f	class:apache::thrift::async::TConcurrentClientSyncInfo
getReadTimeout	thrift/include/thrift/transport/TFileTransport.h	/^  int32_t getReadTimeout() { return readTimeout_; }$/;"	f	class:apache::thrift::transport::TFileTransport
getRecursionLimit	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t getRecursionLimit() const {return recursion_limit_;}$/;"	f	class:apache::thrift::protocol::TProtocol
getResizeBufferEveryN	thrift/include/thrift/server/TNonblockingServer.h	/^  int32_t getResizeBufferEveryN() const { return resizeBufferEveryN_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getServer	thrift/include/thrift/server/TNonblockingServer.h	/^  TNonblockingServer* getServer() const { return server_; }$/;"	f	class:apache::thrift::server::TNonblockingIOThread
getServerTransport	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TServerTransport> getServerTransport() { return serverTransport_; }$/;"	f	class:apache::thrift::server::TServer
getSocketFD	thrift/include/thrift/transport/TSocket.h	/^  THRIFT_SOCKET getSocketFD() { return socket_; }$/;"	f	class:apache::thrift::transport::TSocket
getStruct	CppServer.cpp	/^  void getStruct(SharedStruct& ret, const int32_t logid) {$/;"	f	class:CalculatorHandler
getStruct	gen-cpp/SharedService.cpp	/^void SharedServiceClient::getStruct(SharedStruct& _return, const int32_t key)$/;"	f	class:shared::SharedServiceClient
getStruct	gen-cpp/SharedService.cpp	/^void SharedServiceConcurrentClient::getStruct(SharedStruct& _return, const int32_t key)$/;"	f	class:shared::SharedServiceConcurrentClient
getStruct	gen-cpp/SharedService.h	/^  void getStruct(SharedStruct& \/* _return *\/, const int32_t \/* key *\/) {$/;"	f	class:shared::SharedServiceNull
getStruct	gen-cpp/SharedService.h	/^  void getStruct(SharedStruct& _return, const int32_t key) {$/;"	f	class:shared::SharedServiceMultiface
getStruct	gen-cpp/SharedService_server.skeleton.cpp	/^  void getStruct(SharedStruct& _return, const int32_t key) {$/;"	f	class:SharedServiceHandler
getTargetTransport	thrift/include/thrift/transport/TTransportUtils.h	/^  boost::shared_ptr<TTransport> getTargetTransport() { return dstTrans_; }$/;"	f	class:apache::thrift::transport::TPipedTransport
getTaskExpireTime	thrift/include/thrift/server/TNonblockingServer.h	/^  int64_t getTaskExpireTime() const { return taskExpireTime_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getThread	thrift/include/thrift/server/TNonblockingServer.h	/^  boost::shared_ptr<Thread> getThread() const { return thread_; }$/;"	f	class:apache::thrift::server::TNonblockingIOThread
getThreadId	thrift/include/thrift/server/TNonblockingServer.h	/^  Thread::id_t getThreadId() const { return threadId_; }$/;"	f	class:apache::thrift::server::TNonblockingIOThread
getThreadManager	thrift/include/thrift/server/TNonblockingServer.h	/^  boost::shared_ptr<ThreadManager> getThreadManager() { return threadManager_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getThreadNumber	thrift/include/thrift/server/TNonblockingServer.h	/^  int getThreadNumber() const { return number_; }$/;"	f	class:apache::thrift::server::TNonblockingIOThread
getTransport	thrift/include/thrift/protocol/TProtocol.h	/^  inline boost::shared_ptr<TTransport> getTransport() { return ptrans_; }$/;"	f	class:apache::thrift::protocol::TProtocol
getTransport	thrift/include/thrift/transport/TBufferTransports.h	/^  virtual boost::shared_ptr<TTransport> getTransport(boost::shared_ptr<TTransport> trans) {$/;"	f	class:apache::thrift::transport::TBufferedTransportFactory
getTransport	thrift/include/thrift/transport/TBufferTransports.h	/^  virtual boost::shared_ptr<TTransport> getTransport(boost::shared_ptr<TTransport> trans) {$/;"	f	class:apache::thrift::transport::TFramedTransportFactory
getTransport	thrift/include/thrift/transport/THttpServer.h	/^  virtual boost::shared_ptr<TTransport> getTransport(boost::shared_ptr<TTransport> trans) {$/;"	f	class:apache::thrift::transport::THttpServerTransportFactory
getTransport	thrift/include/thrift/transport/TTransport.h	/^  virtual boost::shared_ptr<TTransport> getTransport(boost::shared_ptr<TTransport> trans) {$/;"	f	class:apache::thrift::transport::TTransportFactory
getTransport	thrift/include/thrift/transport/TTransportUtils.h	/^  boost::shared_ptr<TTransport> getTransport(boost::shared_ptr<TTransport> srcTrans) {$/;"	f	class:apache::thrift::transport::TPipedFileReaderTransportFactory
getTransport	thrift/include/thrift/transport/TTransportUtils.h	/^  virtual boost::shared_ptr<TTransport> getTransport(boost::shared_ptr<TTransport> srcTrans) {$/;"	f	class:apache::thrift::transport::TPipedTransportFactory
getTransport	thrift/include/thrift/transport/TZlibTransport.h	/^  virtual boost::shared_ptr<TTransport> getTransport(boost::shared_ptr<TTransport> trans) {$/;"	f	class:apache::thrift::transport::TZlibTransportFactory
getType	thrift/include/thrift/TApplicationException.h	/^  TApplicationExceptionType getType() { return type_; }$/;"	f	class:apache::thrift::TApplicationException
getType	thrift/include/thrift/protocol/TProtocolException.h	/^  TProtocolExceptionType getType() { return type_; }$/;"	f	class:apache::thrift::protocol::TProtocolException
getType	thrift/include/thrift/transport/TTransportException.h	/^  TTransportExceptionType getType() const throw() { return type_; }$/;"	f	class:apache::thrift::transport::TTransportException
getUnderlyingImpl	thrift/include/thrift/concurrency/StdMutex.cpp	/^void* Mutex::getUnderlyingImpl() const {$/;"	f	class:apache::thrift::concurrency::Mutex
getUnderlyingTransport	thrift/include/thrift/transport/TBufferTransports.h	/^  boost::shared_ptr<TTransport> getUnderlyingTransport() { return transport_; }$/;"	f	class:apache::thrift::transport::TBufferedTransport
getUnderlyingTransport	thrift/include/thrift/transport/TBufferTransports.h	/^  boost::shared_ptr<TTransport> getUnderlyingTransport() { return transport_; }$/;"	f	class:apache::thrift::transport::TFramedTransport
getUnderlyingTransport	thrift/include/thrift/transport/TShortReadTransport.h	/^  boost::shared_ptr<TTransport> getUnderlyingTransport() { return transport_; }$/;"	f	class:apache::thrift::transport::test::TShortReadTransport
getUserEventBase	thrift/include/thrift/server/TNonblockingServer.h	/^  event_base* getUserEventBase() const { return userEventBase_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getWriteBufferDefaultSize	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t getWriteBufferDefaultSize() const { return writeBufferDefaultSize_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
getWriteMutex	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  ::apache::thrift::concurrency::Mutex &getWriteMutex() {return writeMutex_;}$/;"	f	class:apache::thrift::async::TConcurrentClientSyncInfo
getWritePtr	thrift/include/thrift/transport/TBufferTransports.h	/^  uint8_t* getWritePtr(uint32_t len) {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
getZlibMessage	thrift/include/thrift/transport/TZlibTransport.h	/^  std::string getZlibMessage() { return zlib_msg_; }$/;"	f	class:apache::thrift::transport::TZlibTransportException
getZlibStatus	thrift/include/thrift/transport/TZlibTransport.h	/^  int getZlibStatus() { return zlib_status_; }$/;"	f	class:apache::thrift::transport::TZlibTransportException
get_current	thrift/include/thrift/concurrency/Thread.h	/^  static inline id_t get_current() { return boost::this_thread::get_id(); }$/;"	f	class:apache::thrift::concurrency::Thread
get_frequency_map	thrift/include/thrift/processor/StatsProcessor.h	/^  const std::map<std::string, int64_t>& get_frequency_map() { return frequency_map_; }$/;"	f	class:apache::thrift::processor::StatsProcessor
good	thrift/include/thrift/async/TEvhttpClientChannel.h	/^  virtual bool good() const { return true; }$/;"	f	class:apache::thrift::async::TEvhttpClientChannel
handlerError	thrift/include/thrift/TProcessor.h	/^  virtual void handlerError(void* ctx, const char* fn_name) {$/;"	f	class:apache::thrift::TProcessorEventHandler
handlerFactory_	gen-cpp/Calculator.h	/^  ::boost::shared_ptr< CalculatorIfFactory > handlerFactory_;$/;"	m	class:tutorial::CalculatorProcessorFactory
handlerFactory_	gen-cpp/SharedService.h	/^  ::boost::shared_ptr< SharedServiceIfFactory > handlerFactory_;$/;"	m	class:shared::SharedServiceProcessorFactory
handlerFactory_	thrift/include/thrift/TProcessor.h	/^  boost::shared_ptr<HandlerFactory_> handlerFactory_;$/;"	m	class:apache::thrift::ReleaseHandler
handler_	thrift/include/thrift/TProcessor.h	/^  apache::thrift::TProcessorEventHandler* handler_;$/;"	m	class:apache::thrift::TProcessorContextFreer
hasBoolValue	thrift/include/thrift/protocol/TCompactProtocol.h	/^    bool hasBoolValue;$/;"	m	struct:apache::thrift::protocol::TCompactProtocolT::__anon3
hasData_	thrift/include/thrift/protocol/TJSONProtocol.h	/^    bool hasData_;$/;"	m	class:apache::thrift::protocol::TJSONProtocol::LookaheadReader
host_	thrift/include/thrift/async/TEvhttpClientChannel.h	/^  std::string host_;$/;"	m	class:apache::thrift::async::TEvhttpClientChannel
host_	thrift/include/thrift/transport/THttpClient.h	/^  std::string host_;$/;"	m	class:apache::thrift::transport::THttpClient
host_	thrift/include/thrift/transport/TSocket.h	/^  std::string host_;$/;"	m	class:apache::thrift::transport::TSocket
host_	thrift/include/thrift/transport/TSocketPool.h	/^  std::string host_;$/;"	m	class:apache::thrift::transport::TSocketPoolServer
httpBufLen_	thrift/include/thrift/transport/THttpTransport.h	/^  uint32_t httpBufLen_;$/;"	m	class:apache::thrift::transport::THttpTransport
httpBufSize_	thrift/include/thrift/transport/THttpTransport.h	/^  uint32_t httpBufSize_;$/;"	m	class:apache::thrift::transport::THttpTransport
httpBuf_	thrift/include/thrift/transport/THttpTransport.h	/^  char* httpBuf_;$/;"	m	class:apache::thrift::transport::THttpTransport
httpPos_	thrift/include/thrift/transport/THttpTransport.h	/^  uint32_t httpPos_;$/;"	m	class:apache::thrift::transport::THttpTransport
hwm_	thrift/include/thrift/server/TServerFramework.h	/^  int64_t hwm_;$/;"	m	class:apache::thrift::server::TServerFramework
id_t	thrift/include/thrift/concurrency/Thread.h	/^  typedef boost::thread::id id_t;$/;"	t	class:apache::thrift::concurrency::Thread
idleReadBufferLimit_	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t idleReadBufferLimit_;$/;"	m	class:apache::thrift::server::TNonblockingServer
idleWriteBufferLimit_	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t idleWriteBufferLimit_;$/;"	m	class:apache::thrift::server::TNonblockingServer
iface_	gen-cpp/Calculator.h	/^  boost::shared_ptr<CalculatorIf> iface_;$/;"	m	class:tutorial::CalculatorIfSingletonFactory
iface_	gen-cpp/Calculator.h	/^  boost::shared_ptr<CalculatorIf> iface_;$/;"	m	class:tutorial::CalculatorProcessor
iface_	gen-cpp/SharedService.h	/^  boost::shared_ptr<SharedServiceIf> iface_;$/;"	m	class:shared::SharedServiceIfSingletonFactory
iface_	gen-cpp/SharedService.h	/^  boost::shared_ptr<SharedServiceIf> iface_;$/;"	m	class:shared::SharedServiceProcessor
ifaces_	gen-cpp/Calculator.h	/^  std::vector<boost::shared_ptr<CalculatorIf> > ifaces_;$/;"	m	class:tutorial::CalculatorMultiface
ifaces_	gen-cpp/SharedService.h	/^  std::vector<boost::shared_ptr<SharedServiceIf> > ifaces_;$/;"	m	class:shared::SharedServiceMultiface
ii_	thrift/include/thrift/Thrift.h	/^  int ii_;$/;"	m	class:apache::thrift::TEnumIterator
impl	thrift/include/thrift/concurrency/StdMutex.cpp	/^class Mutex::impl : public std::timed_mutex {};$/;"	c	class:apache::thrift::concurrency::Mutex	file:
impl_	thrift/include/thrift/concurrency/BoostThreadFactory.h	/^  boost::shared_ptr<Impl> impl_;$/;"	m	class:apache::thrift::concurrency::BoostThreadFactory
impl_	thrift/include/thrift/concurrency/Monitor.h	/^  Impl* impl_;$/;"	m	class:apache::thrift::concurrency::Monitor
impl_	thrift/include/thrift/concurrency/Mutex.h	/^  boost::shared_ptr<impl> impl_;$/;"	m	class:apache::thrift::concurrency::Mutex
impl_	thrift/include/thrift/concurrency/Mutex.h	/^  boost::shared_ptr<impl> impl_;$/;"	m	class:apache::thrift::concurrency::ReadWriteMutex
impl_	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^  boost::shared_ptr<Impl> impl_;$/;"	m	class:apache::thrift::concurrency::PosixThreadFactory
impl_	thrift/include/thrift/concurrency/StdThreadFactory.h	/^  boost::shared_ptr<Impl> impl_;$/;"	m	class:apache::thrift::concurrency::StdThreadFactory
impl_	thrift/include/thrift/transport/TPipe.h	/^  boost::shared_ptr<TPipeImpl> impl_;$/;"	m	class:apache::thrift::transport::TPipe
impl_	thrift/include/thrift/transport/TPipeServer.h	/^  boost::shared_ptr<TPipeServerImpl> impl_;$/;"	m	class:apache::thrift::transport::TPipeServer
incrementActiveProcessors	thrift/include/thrift/server/TNonblockingServer.h	/^  void incrementActiveProcessors() {$/;"	f	class:apache::thrift::server::TNonblockingServer
incrementInputRecursionDepth	thrift/include/thrift/protocol/TProtocol.h	/^  void incrementInputRecursionDepth() {$/;"	f	class:apache::thrift::protocol::TProtocol
incrementOutputRecursionDepth	thrift/include/thrift/protocol/TProtocol.h	/^  void incrementOutputRecursionDepth() {$/;"	f	class:apache::thrift::protocol::TProtocol
indent_inc	thrift/include/thrift/protocol/TDebugProtocol.h	/^  static const int indent_inc = 2;$/;"	m	class:apache::thrift::protocol::TDebugProtocol
indent_str_	thrift/include/thrift/protocol/TDebugProtocol.h	/^  std::string indent_str_;$/;"	m	class:apache::thrift::protocol::TDebugProtocol
info_arch	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_platform	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_version	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
init	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  void init(Mutex* mutex) { mutex_ = mutex; }$/;"	f	class:apache::thrift::concurrency::Monitor::Impl	file:
init	thrift/include/thrift/server/TNonblockingServer.h	/^  void init(int port) {$/;"	f	class:apache::thrift::server::TNonblockingServer
initCommon	thrift/include/thrift/transport/TBufferTransports.h	/^  void initCommon(uint8_t* buf, uint32_t size, bool owner, uint32_t wPos) {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
initPointers	thrift/include/thrift/transport/TBufferTransports.h	/^  void initPointers() {$/;"	f	class:apache::thrift::transport::TBufferedTransport
initPointers	thrift/include/thrift/transport/TBufferTransports.h	/^  void initPointers() {$/;"	f	class:apache::thrift::transport::TFramedTransport
initializeTargetTransport	thrift/include/thrift/transport/TTransportUtils.h	/^  virtual void initializeTargetTransport(boost::shared_ptr<TTransport> dstTrans) {$/;"	f	class:apache::thrift::transport::TPipedTransportFactory
input	thrift/include/thrift/TProcessor.h	/^  boost::shared_ptr<protocol::TProtocol> input;$/;"	m	struct:apache::thrift::TConnectionInfo
inputProtocolFactory_	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TProtocolFactory> inputProtocolFactory_;$/;"	m	class:apache::thrift::server::TServer
inputProtocolFactory_	thrift/include/thrift/transport/TFileTransport.h	/^  boost::shared_ptr<TProtocolFactory> inputProtocolFactory_;$/;"	m	class:apache::thrift::transport::TFileProcessor
inputProtocol_	thrift/include/thrift/server/TConnectedClient.h	/^  boost::shared_ptr<apache::thrift::protocol::TProtocol> inputProtocol_;$/;"	m	class:apache::thrift::server::TConnectedClient
inputTransportFactory_	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TTransportFactory> inputTransportFactory_;$/;"	m	class:apache::thrift::server::TServer
inputTransport_	thrift/include/thrift/transport/TFileTransport.h	/^  boost::shared_ptr<TFileReaderTransport> inputTransport_;$/;"	m	class:apache::thrift::transport::TFileProcessor
input_ended_	thrift/include/thrift/transport/TZlibTransport.h	/^  bool input_ended_;$/;"	m	class:apache::thrift::transport::TZlibTransport
input_recursion_depth_	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t input_recursion_depth_;$/;"	m	class:apache::thrift::protocol::TProtocol
interrupt	thrift/include/thrift/transport/TServerTransport.h	/^  virtual void interrupt() {}$/;"	f	class:apache::thrift::transport::TServerTransport
interruptChildren	thrift/include/thrift/transport/TServerTransport.h	/^  virtual void interruptChildren() {}$/;"	f	class:apache::thrift::transport::TServerTransport
interruptListener_	thrift/include/thrift/transport/TSocket.h	/^  boost::shared_ptr<THRIFT_SOCKET> interruptListener_;$/;"	m	class:apache::thrift::transport::TSocket
interruptSockReader_	thrift/include/thrift/transport/TServerSocket.h	/^  THRIFT_SOCKET interruptSockReader_;                          \/\/ is used in select\/poll with serverSocket_ for interruptability$/;"	m	class:apache::thrift::transport::TServerSocket
interruptSockWriter_	thrift/include/thrift/transport/TServerSocket.h	/^  THRIFT_SOCKET interruptSockWriter_;                          \/\/ is notified on interrupt()$/;"	m	class:apache::thrift::transport::TServerSocket
interruptableChildren_	thrift/include/thrift/transport/TServerSocket.h	/^  bool interruptableChildren_;$/;"	m	class:apache::thrift::transport::TServerSocket
intervalMs_	thrift/include/thrift/concurrency/FunctionRunner.h	/^  int intervalMs_;$/;"	m	class:apache::thrift::concurrency::FunctionRunner
ioThreadFactory_	thrift/include/thrift/server/TNonblockingServer.h	/^  boost::shared_ptr<PlatformThreadFactory> ioThreadFactory_;$/;"	m	class:apache::thrift::server::TNonblockingServer
ioThreads_	thrift/include/thrift/server/TNonblockingServer.h	/^  std::vector<boost::shared_ptr<TNonblockingIOThread> > ioThreads_;$/;"	m	class:apache::thrift::server::TNonblockingServer
iprot_	gen-cpp/SharedService.h	/^  ::apache::thrift::protocol::TProtocol* iprot_;$/;"	m	class:shared::SharedServiceClient
iprot_	gen-cpp/SharedService.h	/^  ::apache::thrift::protocol::TProtocol* iprot_;$/;"	m	class:shared::SharedServiceConcurrentClient
ipv4	thrift/include/thrift/transport/TSocket.h	/^    sockaddr_in ipv4;$/;"	m	union:apache::thrift::transport::TSocket::__anon4
ipv6	thrift/include/thrift/transport/TSocket.h	/^    sockaddr_in6 ipv6;$/;"	m	union:apache::thrift::transport::TSocket::__anon4
isAnonymous_	thrift/include/thrift/transport/TPipe.h	/^  bool isAnonymous_;$/;"	m	class:apache::thrift::transport::TPipe
isAnonymous_	thrift/include/thrift/transport/TPipeServer.h	/^  bool isAnonymous_;$/;"	m	class:apache::thrift::transport::TPipeServer
isDetached	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  bool isDetached() const { return detached_; }$/;"	f	class:apache::thrift::concurrency::StdThreadFactory::Impl
isDetached	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^bool StdThreadFactory::isDetached() const {$/;"	f	class:apache::thrift::concurrency::StdThreadFactory
isOpen	thrift/include/thrift/transport/TBufferTransports.h	/^  bool isOpen() { return transport_->isOpen(); }$/;"	f	class:apache::thrift::transport::TBufferedTransport
isOpen	thrift/include/thrift/transport/TBufferTransports.h	/^  bool isOpen() { return transport_->isOpen(); }$/;"	f	class:apache::thrift::transport::TFramedTransport
isOpen	thrift/include/thrift/transport/TBufferTransports.h	/^  bool isOpen() { return true; }$/;"	f	class:apache::thrift::transport::TMemoryBuffer
isOpen	thrift/include/thrift/transport/TFDTransport.h	/^  bool isOpen() { return fd_ >= 0; }$/;"	f	class:apache::thrift::transport::TFDTransport
isOpen	thrift/include/thrift/transport/TFileTransport.h	/^  bool isOpen() { return true; }$/;"	f	class:apache::thrift::transport::TFileTransport
isOpen	thrift/include/thrift/transport/THttpTransport.h	/^  bool isOpen() { return transport_->isOpen(); }$/;"	f	class:apache::thrift::transport::THttpTransport
isOpen	thrift/include/thrift/transport/TShortReadTransport.h	/^  bool isOpen() { return transport_->isOpen(); }$/;"	f	class:apache::thrift::transport::test::TShortReadTransport
isOpen	thrift/include/thrift/transport/TTransport.h	/^  virtual bool isOpen() { return false; }$/;"	f	class:apache::thrift::transport::TTransport
isOpen	thrift/include/thrift/transport/TTransportUtils.h	/^  bool isOpen() { return srcTrans_->isOpen(); }$/;"	f	class:apache::thrift::transport::TPipedTransport
isOpen	thrift/include/thrift/transport/TTransportUtils.h	/^  bool isOpen() { return true; }$/;"	f	class:apache::thrift::transport::TNullTransport
isThreadPoolProcessing	thrift/include/thrift/server/TNonblockingServer.h	/^  bool isThreadPoolProcessing() const { return threadPoolProcessing_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
is_current	thrift/include/thrift/concurrency/Thread.h	/^  static inline bool is_current(id_t t) { return t == boost::this_thread::get_id(); }$/;"	f	class:apache::thrift::concurrency::Thread
join	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  void join() {$/;"	f	class:apache::thrift::concurrency::StdThread
keepAlive_	thrift/include/thrift/transport/TServerSocket.h	/^  bool keepAlive_;$/;"	m	class:apache::thrift::transport::TServerSocket
keepAlive_	thrift/include/thrift/transport/TSocket.h	/^  bool keepAlive_;$/;"	m	class:apache::thrift::transport::TSocket
key	gen-cpp/SharedService.h	/^  bool key :1;$/;"	m	struct:shared::_SharedService_getStruct_args__isset
key	gen-cpp/SharedService.h	/^  const int32_t* key;$/;"	m	class:shared::SharedService_getStruct_pargs
key	gen-cpp/SharedService.h	/^  int32_t key;$/;"	m	class:shared::SharedService_getStruct_args
key	gen-cpp/shared_types.h	/^  bool key :1;$/;"	m	struct:shared::_SharedStruct__isset
key	gen-cpp/shared_types.h	/^  int32_t key;$/;"	m	class:shared::SharedStruct
lastBadChunk_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t lastBadChunk_;$/;"	m	class:apache::thrift::transport::TFileTransport
lastDispatchPtr_	thrift/include/thrift/transport/TFileTransport.h	/^  int32_t lastDispatchPtr_;$/;"	m	struct:apache::thrift::transport::readState
lastFailTime_	thrift/include/thrift/transport/TSocketPool.h	/^  time_t lastFailTime_;$/;"	m	class:apache::thrift::transport::TSocketPoolServer
lastFieldId_	thrift/include/thrift/protocol/TCompactProtocol.h	/^  int16_t lastFieldId_;$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
lastField_	thrift/include/thrift/protocol/TCompactProtocol.h	/^  std::stack<int16_t> lastField_;$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
libtutorialgencpp_la_LIBADD	Makefile	/^libtutorialgencpp_la_LIBADD = $(top_builddir)\/lib\/cpp\/libthrift.la$/;"	m
limit_	thrift/include/thrift/server/TServerFramework.h	/^  int64_t limit_;$/;"	m	class:apache::thrift::server::TServerFramework
lingerOn_	thrift/include/thrift/transport/TSocket.h	/^  bool lingerOn_;$/;"	m	class:apache::thrift::transport::TSocket
lingerVal_	thrift/include/thrift/transport/TSocket.h	/^  int lingerVal_;$/;"	m	class:apache::thrift::transport::TSocket
list_idx_	thrift/include/thrift/protocol/TDebugProtocol.h	/^  std::vector<int> list_idx_;$/;"	m	class:apache::thrift::protocol::TDebugProtocol
listen	thrift/include/thrift/transport/TServerTransport.h	/^  virtual void listen() {}$/;"	f	class:apache::thrift::transport::TServerTransport
listenCallback_	thrift/include/thrift/transport/TServerSocket.h	/^  socket_func_t listenCallback_;$/;"	m	class:apache::thrift::transport::TServerSocket
listenHandler	thrift/include/thrift/server/TNonblockingServer.h	/^  static void listenHandler(evutil_socket_t fd, short which, void* v) {$/;"	f	class:apache::thrift::server::TNonblockingIOThread
listenPort_	thrift/include/thrift/server/TNonblockingServer.h	/^  int listenPort_;$/;"	m	class:apache::thrift::server::TNonblockingServer
listenSocket_	thrift/include/thrift/server/TNonblockingServer.h	/^  THRIFT_SOCKET listenSocket_;$/;"	m	class:apache::thrift::server::TNonblockingIOThread
listening_	thrift/include/thrift/transport/TServerSocket.h	/^  bool listening_;$/;"	m	class:apache::thrift::transport::TServerSocket
lock	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  void lock() { mutex_->lock(); }$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
lock	thrift/include/thrift/concurrency/StdMonitor.cpp	/^void Monitor::lock() const {$/;"	f	class:apache::thrift::concurrency::Monitor
lock	thrift/include/thrift/concurrency/StdMutex.cpp	/^void Mutex::lock() const {$/;"	f	class:apache::thrift::concurrency::Mutex
log	CppServer.cpp	/^  map<int32_t, SharedStruct> log;$/;"	m	class:CalculatorHandler	file:
logid	gen-cpp/Calculator.h	/^  bool logid :1;$/;"	m	struct:tutorial::_Calculator_calculate_args__isset
logid	gen-cpp/Calculator.h	/^  const int32_t* logid;$/;"	m	class:tutorial::Calculator_calculate_pargs
logid	gen-cpp/Calculator.h	/^  int32_t logid;$/;"	m	class:tutorial::Calculator_calculate_args
main	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	CppClient.cpp	/^int main() {$/;"	f
main	CppServer.cpp	/^int main() {$/;"	f
main	gen-cpp/Calculator_server.skeleton.cpp	/^int main(int argc, char **argv) {$/;"	f
main	gen-cpp/SharedService_server.skeleton.cpp	/^int main(int argc, char **argv) {$/;"	f
manualOpenSSLInitialization_	thrift/include/thrift/transport/TSSLSocket.h	/^  static bool manualOpenSSLInitialization_;$/;"	m	class:apache::thrift::transport::TSSLSocketFactory
maxActiveProcessors_	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t maxActiveProcessors_;$/;"	m	class:apache::thrift::server::TNonblockingServer
maxConnections_	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t maxConnections_;$/;"	m	class:apache::thrift::server::TNonblockingServer
maxConsecutiveFailures_	thrift/include/thrift/transport/TSocketPool.h	/^  int maxConsecutiveFailures_;$/;"	m	class:apache::thrift::transport::TSocketPool
maxCorruptedEvents_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t maxCorruptedEvents_;$/;"	m	class:apache::thrift::transport::TFileTransport
maxEventSize_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t maxEventSize_;$/;"	m	class:apache::thrift::transport::TFileTransport
maxFrameSize_	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t maxFrameSize_;$/;"	m	class:apache::thrift::server::TNonblockingServer
maxFrameSize_	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t maxFrameSize_;$/;"	m	class:apache::thrift::transport::TFramedTransport
maxRecvRetries_	thrift/include/thrift/transport/TSocket.h	/^  int maxRecvRetries_;$/;"	m	class:apache::thrift::transport::TSocket
maxconns_	thrift/include/thrift/transport/TPipeServer.h	/^  uint32_t maxconns_;$/;"	m	class:apache::thrift::transport::TPipeServer
memoryBuffer_	thrift/include/thrift/processor/PeekProcessor.h	/^  boost::shared_ptr<apache::thrift::transport::TMemoryBuffer> memoryBuffer_;$/;"	m	class:apache::thrift::processor::PeekProcessor
message_	thrift/include/thrift/Thrift.h	/^  std::string message_;$/;"	m	class:apache::thrift::TException
method_	thrift/include/thrift/TProcessor.h	/^  const char* method_;$/;"	m	class:apache::thrift::TProcessorContextFreer
mode	thrift/include/thrift/transport/TFileTransport.h	/^  enum mode { WRITE, READ };$/;"	g	class:apache::thrift::transport::TFileTransportBuffer
mon_	thrift/include/thrift/server/TServerFramework.h	/^  apache::thrift::concurrency::Monitor mon_;$/;"	m	class:apache::thrift::server::TServerFramework
monitor_	thrift/include/thrift/concurrency/TimerManager.h	/^  Monitor monitor_;$/;"	m	class:apache::thrift::concurrency::TimerManager
mtypePending_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  ::apache::thrift::protocol::TMessageType mtypePending_;$/;"	m	class:apache::thrift::async::TConcurrentClientSyncInfo
mutex	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  Mutex& mutex() { return *mutex_; }$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
mutex	thrift/include/thrift/concurrency/StdMonitor.cpp	/^Mutex& Monitor::mutex() const {$/;"	f	class:apache::thrift::concurrency::Monitor
mutex_	thrift/include/thrift/concurrency/Mutex.h	/^  Mutex mutex_;$/;"	m	class:apache::thrift::concurrency::NoStarveReadWriteMutex
mutex_	thrift/include/thrift/concurrency/Mutex.h	/^  const Mutex* mutex_;$/;"	m	class:apache::thrift::concurrency::Guard
mutex_	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  Mutex* mutex_;$/;"	m	class:apache::thrift::concurrency::Monitor::Impl	file:
mutex_	thrift/include/thrift/transport/TFileTransport.h	/^  Mutex mutex_;$/;"	m	class:apache::thrift::transport::TFileTransport
mutex_	thrift/include/thrift/transport/TSSLSocket.h	/^  static concurrency::Mutex mutex_;$/;"	m	class:apache::thrift::transport::TSSLSocketFactory
nConnectionsDropped_	thrift/include/thrift/server/TNonblockingServer.h	/^  uint32_t nConnectionsDropped_;$/;"	m	class:apache::thrift::server::TNonblockingServer
nTotalConnectionsDropped_	thrift/include/thrift/server/TNonblockingServer.h	/^  uint64_t nTotalConnectionsDropped_;$/;"	m	class:apache::thrift::server::TNonblockingServer
n_	thrift/include/thrift/Thrift.h	/^  const int n_;$/;"	m	class:apache::thrift::TEnumIterator
name	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^  std::string name;$/;"	m	class:apache::thrift::protocol::StoredMessageProtocol
name	thrift/include/thrift/protocol/TCompactProtocol.h	/^    const char* name;$/;"	m	struct:apache::thrift::protocol::TCompactProtocolT::__anon2
names_	thrift/include/thrift/Thrift.h	/^  const char** names_;$/;"	m	class:apache::thrift::TEnumIterator
newThread	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  boost::shared_ptr<Thread> newThread(boost::shared_ptr<Runnable> runnable) const {$/;"	f	class:apache::thrift::concurrency::StdThreadFactory::Impl
newThread	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^boost::shared_ptr<Thread> StdThreadFactory::newThread(boost::shared_ptr<Runnable> runnable) const {$/;"	f	class:apache::thrift::concurrency::StdThreadFactory
nextIOThread_	thrift/include/thrift/server/TNonblockingServer.h	/^  uint32_t nextIOThread_;$/;"	m	class:apache::thrift::server::TNonblockingServer
nextseqid_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  int32_t nextseqid_;$/;"	m	class:apache::thrift::async::TConcurrentClientSyncInfo
noDelay_	thrift/include/thrift/transport/TSocket.h	/^  bool noDelay_;$/;"	m	class:apache::thrift::transport::TSocket
nodist_libtutorialgencpp_la_SOURCES	Makefile	/^nodist_libtutorialgencpp_la_SOURCES = \\$/;"	m
noinst_LTLIBRARIES	Makefile	/^noinst_LTLIBRARIES = libtutorialgencpp.la$/;"	m
noinst_PROGRAMS	Makefile	/^noinst_PROGRAMS = \\$/;"	m
notEmpty_	thrift/include/thrift/transport/TFileTransport.h	/^  Monitor notFull_, notEmpty_;$/;"	m	class:apache::thrift::transport::TFileTransport
notFull_	thrift/include/thrift/transport/TFileTransport.h	/^  Monitor notFull_, notEmpty_;$/;"	m	class:apache::thrift::transport::TFileTransport
notificationEvent_	thrift/include/thrift/server/TNonblockingServer.h	/^  struct event notificationEvent_;$/;"	m	class:apache::thrift::server::TNonblockingIOThread	typeref:struct:apache::thrift::server::TNonblockingIOThread::event
notificationPipeFDs_	thrift/include/thrift/server/TNonblockingServer.h	/^  evutil_socket_t notificationPipeFDs_[2];$/;"	m	class:apache::thrift::server::TNonblockingIOThread
notify	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  void notify() { conditionVariable_.notify_one(); }$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
notify	thrift/include/thrift/concurrency/StdMonitor.cpp	/^void Monitor::notify() const {$/;"	f	class:apache::thrift::concurrency::Monitor
notifyAll	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  void notifyAll() { conditionVariable_.notify_all(); }$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
notifyAll	thrift/include/thrift/concurrency/StdMonitor.cpp	/^void Monitor::notifyAll() const {$/;"	f	class:apache::thrift::concurrency::Monitor
num1	gen-cpp/Calculator.h	/^  bool num1 :1;$/;"	m	struct:tutorial::_Calculator_add_args__isset
num1	gen-cpp/Calculator.h	/^  const int32_t* num1;$/;"	m	class:tutorial::Calculator_add_pargs
num1	gen-cpp/Calculator.h	/^  int32_t num1;$/;"	m	class:tutorial::Calculator_add_args
num1	gen-cpp/tutorial_types.h	/^  bool num1 :1;$/;"	m	struct:tutorial::_Work__isset
num1	gen-cpp/tutorial_types.h	/^  int32_t num1;$/;"	m	class:tutorial::Work
num2	gen-cpp/Calculator.h	/^  bool num2 :1;$/;"	m	struct:tutorial::_Calculator_add_args__isset
num2	gen-cpp/Calculator.h	/^  const int32_t* num2;$/;"	m	class:tutorial::Calculator_add_pargs
num2	gen-cpp/Calculator.h	/^  int32_t num2;$/;"	m	class:tutorial::Calculator_add_args
num2	gen-cpp/tutorial_types.h	/^  bool num2 :1;$/;"	m	struct:tutorial::_Work__isset
num2	gen-cpp/tutorial_types.h	/^  int32_t num2;$/;"	m	class:tutorial::Work
numActiveProcessors_	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t numActiveProcessors_;$/;"	m	class:apache::thrift::server::TNonblockingServer
numCorruptedEventsInChunk_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t numCorruptedEventsInChunk_;$/;"	m	class:apache::thrift::transport::TFileTransport
numIOThreads_	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t numIOThreads_;$/;"	m	class:apache::thrift::server::TNonblockingServer
numRetries_	thrift/include/thrift/transport/TSocketPool.h	/^  int numRetries_;$/;"	m	class:apache::thrift::transport::TSocketPool
numTConnections_	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t numTConnections_;$/;"	m	class:apache::thrift::server::TNonblockingServer
number_	thrift/include/thrift/server/TNonblockingServer.h	/^  const int number_;$/;"	m	class:apache::thrift::server::TNonblockingIOThread
offset_	thrift/include/thrift/transport/TFileTransport.h	/^  off_t offset_;$/;"	m	class:apache::thrift::transport::TFileTransport
op	gen-cpp/tutorial_types.h	/^  Operation::type op;$/;"	m	class:tutorial::Work
op	gen-cpp/tutorial_types.h	/^  bool op :1;$/;"	m	struct:tutorial::_Work__isset
opaqueContext_	thrift/include/thrift/server/TConnectedClient.h	/^  void* opaqueContext_;$/;"	m	class:apache::thrift::server::TConnectedClient
open	thrift/include/thrift/transport/TBufferTransports.h	/^  void open() { transport_->open(); }$/;"	f	class:apache::thrift::transport::TBufferedTransport
open	thrift/include/thrift/transport/TBufferTransports.h	/^  void open() { transport_->open(); }$/;"	f	class:apache::thrift::transport::TFramedTransport
open	thrift/include/thrift/transport/TBufferTransports.h	/^  void open() {}$/;"	f	class:apache::thrift::transport::TMemoryBuffer
open	thrift/include/thrift/transport/TFDTransport.h	/^  void open() {}$/;"	f	class:apache::thrift::transport::TFDTransport
open	thrift/include/thrift/transport/THttpTransport.h	/^  void open() { transport_->open(); }$/;"	f	class:apache::thrift::transport::THttpTransport
open	thrift/include/thrift/transport/TShortReadTransport.h	/^  void open() { transport_->open(); }$/;"	f	class:apache::thrift::transport::test::TShortReadTransport
open	thrift/include/thrift/transport/TTransport.h	/^  virtual void open() {$/;"	f	class:apache::thrift::transport::TTransport
open	thrift/include/thrift/transport/TTransportUtils.h	/^  void open() { srcTrans_->open(); }$/;"	f	class:apache::thrift::transport::TPipedTransport
open	thrift/include/thrift/transport/TTransportUtils.h	/^  void open() {}$/;"	f	class:apache::thrift::transport::TNullTransport
open	thrift/include/thrift/transport/TZlibTransport.h	/^  void open() { transport_->open(); }$/;"	f	class:apache::thrift::transport::TZlibTransport
operator !=	gen-cpp/Calculator.h	/^  bool operator != (const Calculator_add_args &rhs) const {$/;"	f	class:tutorial::Calculator_add_args
operator !=	gen-cpp/Calculator.h	/^  bool operator != (const Calculator_add_result &rhs) const {$/;"	f	class:tutorial::Calculator_add_result
operator !=	gen-cpp/Calculator.h	/^  bool operator != (const Calculator_calculate_args &rhs) const {$/;"	f	class:tutorial::Calculator_calculate_args
operator !=	gen-cpp/Calculator.h	/^  bool operator != (const Calculator_calculate_result &rhs) const {$/;"	f	class:tutorial::Calculator_calculate_result
operator !=	gen-cpp/Calculator.h	/^  bool operator != (const Calculator_ping_args &rhs) const {$/;"	f	class:tutorial::Calculator_ping_args
operator !=	gen-cpp/Calculator.h	/^  bool operator != (const Calculator_ping_result &rhs) const {$/;"	f	class:tutorial::Calculator_ping_result
operator !=	gen-cpp/Calculator.h	/^  bool operator != (const Calculator_zip_args &rhs) const {$/;"	f	class:tutorial::Calculator_zip_args
operator !=	gen-cpp/SharedService.h	/^  bool operator != (const SharedService_getStruct_args &rhs) const {$/;"	f	class:shared::SharedService_getStruct_args
operator !=	gen-cpp/SharedService.h	/^  bool operator != (const SharedService_getStruct_result &rhs) const {$/;"	f	class:shared::SharedService_getStruct_result
operator !=	gen-cpp/shared_types.h	/^  bool operator != (const SharedStruct &rhs) const {$/;"	f	class:shared::SharedStruct
operator !=	gen-cpp/tutorial_types.h	/^  bool operator != (const InvalidOperation &rhs) const {$/;"	f	class:tutorial::InvalidOperation
operator !=	gen-cpp/tutorial_types.h	/^  bool operator != (const Work &rhs) const {$/;"	f	class:tutorial::Work
operator !=	thrift/include/thrift/Thrift.h	/^  bool operator!=(const TEnumIterator& end) {$/;"	f	class:apache::thrift::TEnumIterator
operator ()	thrift/include/thrift/TOutput.h	/^  inline void operator()(const char* message) { f_(message); }$/;"	f	class:apache::thrift::TOutput
operator ()	thrift/include/thrift/TProcessor.h	/^  void operator()(typename HandlerFactory_::Handler* handler) {$/;"	f	class:apache::thrift::ReleaseHandler
operator *	thrift/include/thrift/Thrift.h	/^  std::pair<int, const char*> operator*() const { return std::make_pair(enums_[ii_], names_[ii_]); }$/;"	f	class:apache::thrift::TEnumIterator
operator ++	thrift/include/thrift/Thrift.h	/^  int operator++() { return ++ii_; }$/;"	f	class:apache::thrift::TEnumIterator
operator <<	gen-cpp/shared_types.h	/^inline std::ostream& operator<<(std::ostream& out, const SharedStruct& obj)$/;"	f	namespace:shared
operator <<	gen-cpp/tutorial_types.h	/^inline std::ostream& operator<<(std::ostream& out, const InvalidOperation& obj)$/;"	f	namespace:tutorial
operator <<	gen-cpp/tutorial_types.h	/^inline std::ostream& operator<<(std::ostream& out, const Work& obj)$/;"	f	namespace:tutorial
operator =	gen-cpp/shared_types.cpp	/^SharedStruct& SharedStruct::operator=(const SharedStruct& other1) {$/;"	f	class:shared::SharedStruct
operator =	gen-cpp/tutorial_types.cpp	/^InvalidOperation& InvalidOperation::operator=(const InvalidOperation& other4) {$/;"	f	class:tutorial::InvalidOperation
operator =	gen-cpp/tutorial_types.cpp	/^Work& Work::operator=(const Work& other2) {$/;"	f	class:tutorial::Work
operator ==	gen-cpp/Calculator.h	/^  bool operator == (const Calculator_add_args & rhs) const$/;"	f	class:tutorial::Calculator_add_args
operator ==	gen-cpp/Calculator.h	/^  bool operator == (const Calculator_add_result & rhs) const$/;"	f	class:tutorial::Calculator_add_result
operator ==	gen-cpp/Calculator.h	/^  bool operator == (const Calculator_calculate_args & rhs) const$/;"	f	class:tutorial::Calculator_calculate_args
operator ==	gen-cpp/Calculator.h	/^  bool operator == (const Calculator_calculate_result & rhs) const$/;"	f	class:tutorial::Calculator_calculate_result
operator ==	gen-cpp/Calculator.h	/^  bool operator == (const Calculator_ping_args & \/* rhs *\/) const$/;"	f	class:tutorial::Calculator_ping_args
operator ==	gen-cpp/Calculator.h	/^  bool operator == (const Calculator_ping_result & \/* rhs *\/) const$/;"	f	class:tutorial::Calculator_ping_result
operator ==	gen-cpp/Calculator.h	/^  bool operator == (const Calculator_zip_args & \/* rhs *\/) const$/;"	f	class:tutorial::Calculator_zip_args
operator ==	gen-cpp/SharedService.h	/^  bool operator == (const SharedService_getStruct_args & rhs) const$/;"	f	class:shared::SharedService_getStruct_args
operator ==	gen-cpp/SharedService.h	/^  bool operator == (const SharedService_getStruct_result & rhs) const$/;"	f	class:shared::SharedService_getStruct_result
operator ==	gen-cpp/shared_types.h	/^  bool operator == (const SharedStruct & rhs) const$/;"	f	class:shared::SharedStruct
operator ==	gen-cpp/tutorial_types.h	/^  bool operator == (const InvalidOperation & rhs) const$/;"	f	class:tutorial::InvalidOperation
operator ==	gen-cpp/tutorial_types.h	/^  bool operator == (const Work & rhs) const$/;"	f	class:tutorial::Work
operator bool	thrift/include/thrift/concurrency/Mutex.h	/^  operator bool() const { return (mutex_ != NULL); }$/;"	f	class:apache::thrift::concurrency::Guard
oprot_	gen-cpp/SharedService.h	/^  ::apache::thrift::protocol::TProtocol* oprot_;$/;"	m	class:shared::SharedServiceClient
oprot_	gen-cpp/SharedService.h	/^  ::apache::thrift::protocol::TProtocol* oprot_;$/;"	m	class:shared::SharedServiceConcurrentClient
origin_	thrift/include/thrift/transport/THttpTransport.h	/^  std::string origin_;$/;"	m	class:apache::thrift::transport::THttpTransport
ouch	gen-cpp/Calculator.h	/^  InvalidOperation ouch;$/;"	m	class:tutorial::Calculator_calculate_presult
ouch	gen-cpp/Calculator.h	/^  InvalidOperation ouch;$/;"	m	class:tutorial::Calculator_calculate_result
ouch	gen-cpp/Calculator.h	/^  bool ouch :1;$/;"	m	struct:tutorial::_Calculator_calculate_presult__isset
ouch	gen-cpp/Calculator.h	/^  bool ouch :1;$/;"	m	struct:tutorial::_Calculator_calculate_result__isset
output	thrift/include/thrift/TProcessor.h	/^  boost::shared_ptr<protocol::TProtocol> output;$/;"	m	struct:apache::thrift::TConnectionInfo
outputProtocolFactory_	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TProtocolFactory> outputProtocolFactory_;$/;"	m	class:apache::thrift::server::TServer
outputProtocolFactory_	thrift/include/thrift/transport/TFileTransport.h	/^  boost::shared_ptr<TProtocolFactory> outputProtocolFactory_;$/;"	m	class:apache::thrift::transport::TFileProcessor
outputProtocol_	thrift/include/thrift/server/TConnectedClient.h	/^  boost::shared_ptr<apache::thrift::protocol::TProtocol> outputProtocol_;$/;"	m	class:apache::thrift::server::TConnectedClient
outputTransportFactory_	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TTransportFactory> outputTransportFactory_;$/;"	m	class:apache::thrift::server::TServer
outputTransport_	thrift/include/thrift/transport/TFileTransport.h	/^  boost::shared_ptr<TTransport> outputTransport_;$/;"	m	class:apache::thrift::transport::TFileProcessor
output_finished_	thrift/include/thrift/transport/TZlibTransport.h	/^  bool output_finished_;$/;"	m	class:apache::thrift::transport::TZlibTransport
output_recursion_depth_	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t output_recursion_depth_;$/;"	m	class:apache::thrift::protocol::TProtocol
overloadAction_	thrift/include/thrift/server/TNonblockingServer.h	/^  TOverloadAction overloadAction_;$/;"	m	class:apache::thrift::server::TNonblockingServer
overloadHysteresis_	thrift/include/thrift/server/TNonblockingServer.h	/^  double overloadHysteresis_;$/;"	m	class:apache::thrift::server::TNonblockingServer
overloaded_	thrift/include/thrift/server/TNonblockingServer.h	/^  bool overloaded_;$/;"	m	class:apache::thrift::server::TNonblockingServer
ownEventBase_	thrift/include/thrift/server/TNonblockingServer.h	/^  bool ownEventBase_;$/;"	m	class:apache::thrift::server::TNonblockingIOThread
ownedMutex_	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  const std::unique_ptr<Mutex> ownedMutex_;$/;"	m	class:apache::thrift::concurrency::Monitor::Impl	file:
owner_	thrift/include/thrift/transport/TBufferTransports.h	/^  bool owner_;$/;"	m	class:apache::thrift::transport::TMemoryBuffer
pChildInterruptSockReader_	thrift/include/thrift/transport/TServerSocket.h	/^  boost::shared_ptr<THRIFT_SOCKET> pChildInterruptSockReader_; \/\/ if interruptableChildren_ this is shared with child TSockets$/;"	m	class:apache::thrift::transport::TServerSocket
path_	thrift/include/thrift/async/TEvhttpClientChannel.h	/^  std::string path_;$/;"	m	class:apache::thrift::async::TEvhttpClientChannel
path_	thrift/include/thrift/transport/THttpClient.h	/^  std::string path_;$/;"	m	class:apache::thrift::transport::THttpClient
path_	thrift/include/thrift/transport/TServerSocket.h	/^  std::string path_;$/;"	m	class:apache::thrift::transport::TServerSocket
path_	thrift/include/thrift/transport/TSocket.h	/^  std::string path_;$/;"	m	class:apache::thrift::transport::TSocket
peek	thrift/include/thrift/protocol/TJSONProtocol.h	/^    uint8_t peek() {$/;"	f	class:apache::thrift::protocol::TJSONProtocol::LookaheadReader
peek	thrift/include/thrift/transport/TBufferTransports.h	/^  bool peek() { return (rBase_ < rBound_) || transport_->peek(); }$/;"	f	class:apache::thrift::transport::TFramedTransport
peek	thrift/include/thrift/transport/TBufferTransports.h	/^  bool peek() { return (rBase_ < wBase_); }$/;"	f	class:apache::thrift::transport::TMemoryBuffer
peek	thrift/include/thrift/transport/TBufferTransports.h	/^  bool peek() {$/;"	f	class:apache::thrift::transport::TBufferedTransport
peek	thrift/include/thrift/transport/THttpTransport.h	/^  bool peek() { return transport_->peek(); }$/;"	f	class:apache::thrift::transport::THttpTransport
peek	thrift/include/thrift/transport/TShortReadTransport.h	/^  bool peek() { return transport_->peek(); }$/;"	f	class:apache::thrift::transport::test::TShortReadTransport
peek	thrift/include/thrift/transport/TTransport.h	/^  virtual bool peek() { return isOpen(); }$/;"	f	class:apache::thrift::transport::TTransport
peek	thrift/include/thrift/transport/TTransportUtils.h	/^  bool peek() {$/;"	f	class:apache::thrift::transport::TPipedTransport
peerAddress_	thrift/include/thrift/transport/TSocket.h	/^  std::string peerAddress_;$/;"	m	class:apache::thrift::transport::TSocket
peerHost_	thrift/include/thrift/transport/TSocket.h	/^  std::string peerHost_;$/;"	m	class:apache::thrift::transport::TSocket
peerPort_	thrift/include/thrift/transport/TSocket.h	/^  int peerPort_;$/;"	m	class:apache::thrift::transport::TSocket
perror	thrift/include/thrift/TOutput.h	/^  inline void perror(const std::string& message, int errno_copy) {$/;"	f	class:apache::thrift::TOutput
pfact_	thrift/include/thrift/async/TAsyncProtocolProcessor.h	/^  boost::shared_ptr<apache::thrift::protocol::TProtocolFactory> pfact_;$/;"	m	class:apache::thrift::async::TAsyncProtocolProcessor
pfact_	thrift/include/thrift/qt/TQTcpServer.h	/^  boost::shared_ptr<apache::thrift::protocol::TProtocolFactory> pfact_;$/;"	m	class:apache::thrift::async::TQTcpServer
ping	CppServer.cpp	/^  void ping() { cout << "ping()" << endl; }$/;"	f	class:CalculatorHandler
ping	gen-cpp/Calculator.cpp	/^void CalculatorClient::ping()$/;"	f	class:tutorial::CalculatorClient
ping	gen-cpp/Calculator.cpp	/^void CalculatorConcurrentClient::ping()$/;"	f	class:tutorial::CalculatorConcurrentClient
ping	gen-cpp/Calculator.h	/^  void ping() {$/;"	f	class:tutorial::CalculatorMultiface
ping	gen-cpp/Calculator.h	/^  void ping() {$/;"	f	class:tutorial::CalculatorNull
ping	gen-cpp/Calculator_server.skeleton.cpp	/^  void ping() {$/;"	f	class:CalculatorHandler
pipeOnRead_	thrift/include/thrift/transport/TTransportUtils.h	/^  bool pipeOnRead_;$/;"	m	class:apache::thrift::transport::TPipedTransport
pipeOnWrite_	thrift/include/thrift/transport/TTransportUtils.h	/^  bool pipeOnWrite_;$/;"	m	class:apache::thrift::transport::TPipedTransport
pipedProtocol_	thrift/include/thrift/processor/PeekProcessor.h	/^  boost::shared_ptr<apache::thrift::protocol::TProtocol> pipedProtocol_;$/;"	m	class:apache::thrift::processor::PeekProcessor
pipename_	thrift/include/thrift/transport/TPipe.h	/^  std::string pipename_;$/;"	m	class:apache::thrift::transport::TPipe
pipename_	thrift/include/thrift/transport/TPipeServer.h	/^  std::string pipename_;$/;"	m	class:apache::thrift::transport::TPipeServer
piprot_	gen-cpp/SharedService.h	/^  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;$/;"	m	class:shared::SharedServiceClient
piprot_	gen-cpp/SharedService.h	/^  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;$/;"	m	class:shared::SharedServiceConcurrentClient
piprot_	thrift/include/thrift/processor/StatsProcessor.h	/^  boost::shared_ptr<apache::thrift::protocol::TProtocol> piprot_;$/;"	m	class:apache::thrift::processor::StatsProcessor
placeholders	thrift/include/thrift/cxxfunctional.h	/^    namespace placeholders {$/;"	n	namespace:apache::thrift::stdcxx
poprot_	gen-cpp/SharedService.h	/^  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;$/;"	m	class:shared::SharedServiceClient
poprot_	gen-cpp/SharedService.h	/^  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;$/;"	m	class:shared::SharedServiceConcurrentClient
port_	thrift/include/thrift/server/TNonblockingServer.h	/^  int port_;$/;"	m	class:apache::thrift::server::TNonblockingServer
port_	thrift/include/thrift/transport/TServerSocket.h	/^  int port_;$/;"	m	class:apache::thrift::transport::TServerSocket
port_	thrift/include/thrift/transport/TSocket.h	/^  int port_;$/;"	m	class:apache::thrift::transport::TSocket
port_	thrift/include/thrift/transport/TSocketPool.h	/^  int port_;$/;"	m	class:apache::thrift::transport::TSocketPoolServer
postRead	thrift/include/thrift/TProcessor.h	/^  virtual void postRead(void* ctx, const char* fn_name, uint32_t bytes) {$/;"	f	class:apache::thrift::TProcessorEventHandler
postWrite	thrift/include/thrift/TProcessor.h	/^  virtual void postWrite(void* ctx, const char* fn_name, uint32_t bytes) {$/;"	f	class:apache::thrift::TProcessorEventHandler
preRead	thrift/include/thrift/TProcessor.h	/^  virtual void preRead(void* ctx, const char* fn_name) {$/;"	f	class:apache::thrift::TProcessorEventHandler
preServe	thrift/include/thrift/server/TServer.h	/^  virtual void preServe() {}$/;"	f	class:apache::thrift::server::TServerEventHandler
preWrite	thrift/include/thrift/TProcessor.h	/^  virtual void preWrite(void* ctx, const char* fn_name) {$/;"	f	class:apache::thrift::TProcessorEventHandler
printAndPassToBuffer	thrift/include/thrift/processor/StatsProcessor.h	/^  void printAndPassToBuffer(apache::thrift::protocol::TType ftype) {$/;"	f	class:apache::thrift::processor::StatsProcessor
printTo	gen-cpp/shared_types.cpp	/^void SharedStruct::printTo(std::ostream& out) const {$/;"	f	class:shared::SharedStruct
printTo	gen-cpp/tutorial_types.cpp	/^void InvalidOperation::printTo(std::ostream& out) const {$/;"	f	class:tutorial::InvalidOperation
printTo	gen-cpp/tutorial_types.cpp	/^void Work::printTo(std::ostream& out) const {$/;"	f	class:tutorial::Work
print_	thrift/include/thrift/processor/StatsProcessor.h	/^  bool print_;$/;"	m	class:apache::thrift::processor::StatsProcessor
process	thrift/include/thrift/TDispatchProcessor.h	/^  virtual bool process(boost::shared_ptr<protocol::TProtocol> in,$/;"	f	class:apache::thrift::TDispatchProcessor
process	thrift/include/thrift/TDispatchProcessor.h	/^  virtual bool process(boost::shared_ptr<protocol::TProtocol> in,$/;"	f	class:apache::thrift::TDispatchProcessorT
process	thrift/include/thrift/TProcessor.h	/^  bool process(boost::shared_ptr<apache::thrift::protocol::TProtocol> io, void* connectionContext) {$/;"	f	class:apache::thrift::TProcessor
process	thrift/include/thrift/async/TAsyncDispatchProcessor.h	/^  virtual void process(apache::thrift::stdcxx::function<void(bool success)> _return,$/;"	f	class:apache::thrift::async::TAsyncDispatchProcessor
process	thrift/include/thrift/async/TAsyncDispatchProcessor.h	/^  virtual void process(apache::thrift::stdcxx::function<void(bool success)> _return,$/;"	f	class:apache::thrift::async::TAsyncDispatchProcessorT
process	thrift/include/thrift/async/TAsyncProcessor.h	/^  void process(apache::thrift::stdcxx::function<void(bool success)> _return,$/;"	f	class:apache::thrift::async::TAsyncProcessor
process	thrift/include/thrift/processor/StatsProcessor.h	/^  virtual bool process(boost::shared_ptr<apache::thrift::protocol::TProtocol> piprot,$/;"	f	class:apache::thrift::processor::StatsProcessor
process	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^  bool process(shared_ptr<protocol::TProtocol> in,$/;"	f	class:apache::thrift::TMultiplexedProcessor
processContext	thrift/include/thrift/server/TServer.h	/^  virtual void processContext(void* serverContext, boost::shared_ptr<TTransport> transport) {$/;"	f	class:apache::thrift::server::TServerEventHandler
processFast	thrift/include/thrift/TDispatchProcessor.h	/^  bool processFast(Protocol_* in, Protocol_* out, void* connectionContext) {$/;"	f	class:apache::thrift::TDispatchProcessorT
processFast	thrift/include/thrift/async/TAsyncDispatchProcessor.h	/^  void processFast(apache::thrift::stdcxx::function<void(bool success)> _return,$/;"	f	class:apache::thrift::async::TAsyncDispatchProcessorT
processMap_	gen-cpp/Calculator.h	/^  ProcessMap processMap_;$/;"	m	class:tutorial::CalculatorProcessor
processMap_	gen-cpp/SharedService.h	/^  ProcessMap processMap_;$/;"	m	class:shared::SharedServiceProcessor
process_add	gen-cpp/Calculator.cpp	/^void CalculatorProcessor::process_add(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext)$/;"	f	class:tutorial::CalculatorProcessor
process_calculate	gen-cpp/Calculator.cpp	/^void CalculatorProcessor::process_calculate(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext)$/;"	f	class:tutorial::CalculatorProcessor
process_getStruct	gen-cpp/SharedService.cpp	/^void SharedServiceProcessor::process_getStruct(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext)$/;"	f	class:shared::SharedServiceProcessor
process_ping	gen-cpp/Calculator.cpp	/^void CalculatorProcessor::process_ping(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext)$/;"	f	class:tutorial::CalculatorProcessor
process_zip	gen-cpp/Calculator.cpp	/^void CalculatorProcessor::process_zip(int32_t, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol*, void* callContext)$/;"	f	class:tutorial::CalculatorProcessor
processor	thrift/include/thrift/processor/PeekProcessor.h	/^namespace processor {$/;"	n	namespace:apache::thrift
processor	thrift/include/thrift/processor/StatsProcessor.h	/^namespace processor {$/;"	n	namespace:apache::thrift
processorFactory_	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TProcessorFactory> processorFactory_;$/;"	m	class:apache::thrift::server::TServer
processor_	thrift/include/thrift/TProcessor.h	/^  boost::shared_ptr<TProcessor> processor_;$/;"	m	class:apache::thrift::TSingletonProcessorFactory
processor_	thrift/include/thrift/async/TEvhttpServer.h	/^  boost::shared_ptr<TAsyncBufferProcessor> processor_;$/;"	m	class:apache::thrift::async::TEvhttpServer
processor_	thrift/include/thrift/qt/TQTcpServer.h	/^  boost::shared_ptr<TAsyncProcessor> processor_;$/;"	m	class:apache::thrift::async::TQTcpServer
processor_	thrift/include/thrift/server/TConnectedClient.h	/^  boost::shared_ptr<apache::thrift::TProcessor> processor_;$/;"	m	class:apache::thrift::server::TConnectedClient
processor_	thrift/include/thrift/transport/TFileTransport.h	/^  boost::shared_ptr<TProcessor> processor_;$/;"	m	class:apache::thrift::transport::TFileProcessor
prot_	thrift/include/thrift/protocol/TProtocol.h	/^  TProtocol &prot_;$/;"	m	struct:apache::thrift::protocol::TInputRecursionTracker
prot_	thrift/include/thrift/protocol/TProtocol.h	/^  TProtocol &prot_;$/;"	m	struct:apache::thrift::protocol::TOutputRecursionTracker
protocol	thrift/include/thrift/TApplicationException.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/protocol/TBase64Utils.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/protocol/TBinaryProtocol.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/protocol/TCompactProtocol.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/protocol/TDebugProtocol.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/protocol/TJSONProtocol.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/protocol/TMultiplexedProtocol.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/protocol/TProtocol.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  shared_ptr<TProtocol> protocol;$/;"	m	class:apache::thrift::protocol::TProtocolDecorator
protocol	thrift/include/thrift/protocol/TProtocolDecorator.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/protocol/TProtocolException.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/protocol/TProtocolTap.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/protocol/TVirtualProtocol.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
protocol	thrift/include/thrift/qt/TQTcpServer.h	/^namespace protocol {$/;"	n	namespace:apache::thrift
pthread_func_wrapper	thrift/include/thrift/concurrency/FunctionRunner.h	/^  static void pthread_func_wrapper(PthreadFuncPtr func, void* arg) {$/;"	f	class:apache::thrift::concurrency::FunctionRunner
ptrans_	thrift/include/thrift/protocol/TProtocol.h	/^  boost::shared_ptr<TTransport> ptrans_;$/;"	m	class:apache::thrift::protocol::TProtocol
rBase_	thrift/include/thrift/transport/TBufferTransports.h	/^  uint8_t* rBase_;$/;"	m	class:apache::thrift::transport::TBufferBase
rBound_	thrift/include/thrift/transport/TBufferTransports.h	/^  uint8_t* rBound_;$/;"	m	class:apache::thrift::transport::TBufferBase
rBufSize_	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t rBufSize_;$/;"	m	class:apache::thrift::transport::TBufferedTransport
rBufSize_	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t rBufSize_;$/;"	m	class:apache::thrift::transport::TFramedTransport
rBufSize_	thrift/include/thrift/transport/TTransportUtils.h	/^  uint32_t rBufSize_;$/;"	m	class:apache::thrift::transport::TPipedTransport
rBuf_	thrift/include/thrift/transport/TBufferTransports.h	/^  boost::scoped_array<uint8_t> rBuf_;$/;"	m	class:apache::thrift::transport::TBufferedTransport
rBuf_	thrift/include/thrift/transport/TBufferTransports.h	/^  boost::scoped_array<uint8_t> rBuf_;$/;"	m	class:apache::thrift::transport::TFramedTransport
rBuf_	thrift/include/thrift/transport/TTransportUtils.h	/^  uint8_t* rBuf_;$/;"	m	class:apache::thrift::transport::TPipedTransport
rLen_	thrift/include/thrift/transport/TTransportUtils.h	/^  uint32_t rLen_;$/;"	m	class:apache::thrift::transport::TPipedTransport
rPos_	thrift/include/thrift/transport/TTransportUtils.h	/^  uint32_t rPos_;$/;"	m	class:apache::thrift::transport::TPipedTransport
randomize_	thrift/include/thrift/transport/TSocketPool.h	/^  bool randomize_;$/;"	m	class:apache::thrift::transport::TSocketPool
read	gen-cpp/Calculator.cpp	/^uint32_t Calculator_add_args::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:tutorial::Calculator_add_args
read	gen-cpp/Calculator.cpp	/^uint32_t Calculator_add_presult::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:tutorial::Calculator_add_presult
read	gen-cpp/Calculator.cpp	/^uint32_t Calculator_add_result::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:tutorial::Calculator_add_result
read	gen-cpp/Calculator.cpp	/^uint32_t Calculator_calculate_args::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:tutorial::Calculator_calculate_args
read	gen-cpp/Calculator.cpp	/^uint32_t Calculator_calculate_presult::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:tutorial::Calculator_calculate_presult
read	gen-cpp/Calculator.cpp	/^uint32_t Calculator_calculate_result::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:tutorial::Calculator_calculate_result
read	gen-cpp/Calculator.cpp	/^uint32_t Calculator_ping_args::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:tutorial::Calculator_ping_args
read	gen-cpp/Calculator.cpp	/^uint32_t Calculator_ping_presult::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:tutorial::Calculator_ping_presult
read	gen-cpp/Calculator.cpp	/^uint32_t Calculator_ping_result::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:tutorial::Calculator_ping_result
read	gen-cpp/Calculator.cpp	/^uint32_t Calculator_zip_args::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:tutorial::Calculator_zip_args
read	gen-cpp/SharedService.cpp	/^uint32_t SharedService_getStruct_args::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:shared::SharedService_getStruct_args
read	gen-cpp/SharedService.cpp	/^uint32_t SharedService_getStruct_presult::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:shared::SharedService_getStruct_presult
read	gen-cpp/SharedService.cpp	/^uint32_t SharedService_getStruct_result::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:shared::SharedService_getStruct_result
read	gen-cpp/shared_types.cpp	/^uint32_t SharedStruct::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:shared::SharedStruct
read	gen-cpp/tutorial_types.cpp	/^uint32_t InvalidOperation::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:tutorial::InvalidOperation
read	gen-cpp/tutorial_types.cpp	/^uint32_t Work::read(::apache::thrift::protocol::TProtocol* iprot) {$/;"	f	class:tutorial::Work
read	thrift/include/thrift/protocol/TJSONProtocol.h	/^    uint8_t read() {$/;"	f	class:apache::thrift::protocol::TJSONProtocol::LookaheadReader
read	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t read(uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TBufferBase
read	thrift/include/thrift/transport/TShortReadTransport.h	/^  uint32_t read(uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::test::TShortReadTransport
read	thrift/include/thrift/transport/TTransport.h	/^  uint32_t read(uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TTransport
read	thrift/include/thrift/transport/TVirtualTransport.h	/^  uint32_t read(uint8_t* buf, uint32_t len) { return this->TTransport::read_virt(buf, len); }$/;"	f	class:apache::thrift::transport::TTransportDefaults
readAll	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t readAll(uint8_t* buf, uint32_t len) { return TBufferBase::readAll(buf, len); }$/;"	f	class:apache::thrift::transport::TBufferedTransport
readAll	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t readAll(uint8_t* buf, uint32_t len) { return TBufferBase::readAll(buf, len); }$/;"	f	class:apache::thrift::transport::TFramedTransport
readAll	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t readAll(uint8_t* buf, uint32_t len) { return TBufferBase::readAll(buf, len); }$/;"	f	class:apache::thrift::transport::TMemoryBuffer
readAll	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t readAll(uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TBufferBase
readAll	thrift/include/thrift/transport/TTransport.h	/^  uint32_t readAll(uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TTransport
readAll	thrift/include/thrift/transport/TTransport.h	/^uint32_t readAll(Transport_& trans, uint8_t* buf, uint32_t len) {$/;"	f	namespace:apache::thrift::transport
readAll	thrift/include/thrift/transport/TVirtualTransport.h	/^  uint32_t readAll(uint8_t* buf, uint32_t len) { return this->TTransport::readAll_virt(buf, len); }$/;"	f	class:apache::thrift::transport::TTransportDefaults
readAll	thrift/include/thrift/transport/TVirtualTransport.h	/^  uint32_t readAll(uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TVirtualTransport
readAll_virt	thrift/include/thrift/transport/TFileTransport.h	/^  virtual uint32_t readAll_virt(uint8_t* buf, uint32_t len) { return this->readAll(buf, len); }$/;"	f	class:apache::thrift::transport::TFileTransport
readAll_virt	thrift/include/thrift/transport/TTransport.h	/^  virtual uint32_t readAll_virt(uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TTransport
readAll_virt	thrift/include/thrift/transport/TTransportUtils.h	/^  virtual uint32_t readAll_virt(uint8_t* buf, uint32_t len) { return this->readAll(buf, len); }$/;"	f	class:apache::thrift::transport::TPipedFileReaderTransport
readAll_virt	thrift/include/thrift/transport/TVirtualTransport.h	/^  virtual uint32_t readAll_virt(uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TVirtualTransport
readAsString	thrift/include/thrift/transport/TBufferTransports.h	/^  std::string readAsString(uint32_t len) {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
readBinary	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readBinary(std::string& str) {$/;"	f	class:apache::thrift::protocol::TProtocol
readBinary	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readBinary(std::string& str) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readBinary	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readBinary(std::string& str) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readBinary_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readBinary_virt(std::string& str) { return protocol->readBinary(str); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readBinary_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readBinary_virt(std::string& str) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readBool	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readBool(bool& value) {$/;"	f	class:apache::thrift::protocol::TProtocol
readBool	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readBool(std::vector<bool>::reference value) {$/;"	f	class:apache::thrift::protocol::TProtocol
readBool	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readBool(bool& value) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readBool	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readBool(bool& value) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readBool	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readBool(std::vector<bool>::reference value) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readBool	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readBool(std::vector<bool>::reference value) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readBool_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readBool_virt(bool& value) { return protocol->readBool(value); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readBool_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readBool_virt(std::vector<bool>::reference value) {$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readBool_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readBool_virt(bool& value) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readBool_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readBool_virt(std::vector<bool>::reference value) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readBuffSize_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t readBuffSize_;$/;"	m	class:apache::thrift::transport::TFileTransport
readBuff_	thrift/include/thrift/transport/TFileTransport.h	/^  uint8_t* readBuff_;$/;"	m	class:apache::thrift::transport::TFileTransport
readBuffer_	thrift/include/thrift/transport/THttpTransport.h	/^  TMemoryBuffer readBuffer_;$/;"	m	class:apache::thrift::transport::THttpTransport
readByte	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readByte(int8_t& byte) {$/;"	f	class:apache::thrift::protocol::TProtocol
readByte	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readByte(int8_t& byte) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readByte	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readByte(int8_t& byte) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readByte_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readByte_virt(int8_t& byte) { return protocol->readByte(byte); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readByte_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readByte_virt(int8_t& byte) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readDouble	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readDouble(double& dub) {$/;"	f	class:apache::thrift::protocol::TProtocol
readDouble	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readDouble(double& dub) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readDouble	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readDouble(double& dub) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readDouble_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readDouble_virt(double& dub) { return protocol->readDouble(dub); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readDouble_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readDouble_virt(double& dub) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readEnd	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t readEnd() {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
readEnd	thrift/include/thrift/transport/TTransport.h	/^  virtual uint32_t readEnd() {$/;"	f	class:apache::thrift::transport::TTransport
readEnd	thrift/include/thrift/transport/TTransportUtils.h	/^  uint32_t readEnd() {$/;"	f	class:apache::thrift::transport::TPipedTransport
readFieldBegin	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readFieldBegin(std::string& name, TType& fieldType, int16_t& fieldId) {$/;"	f	class:apache::thrift::protocol::TProtocol
readFieldBegin	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readFieldBegin(std::string& name, TType& fieldType, int16_t& fieldId) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readFieldBegin	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readFieldBegin(std::string& name, TType& fieldType, int16_t& fieldId) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readFieldBegin_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readFieldBegin_virt(std::string& name, TType& fieldType, int16_t& fieldId) {$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readFieldBegin_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readFieldBegin_virt(std::string& name, TType& fieldType, int16_t& fieldId) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readFieldEnd	thrift/include/thrift/protocol/TCompactProtocol.h	/^  uint32_t readFieldEnd() { return 0; }$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
readFieldEnd	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readFieldEnd() {$/;"	f	class:apache::thrift::protocol::TProtocol
readFieldEnd	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readFieldEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readFieldEnd	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readFieldEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readFieldEnd_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readFieldEnd_virt() { return protocol->readFieldEnd(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readFieldEnd_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readFieldEnd_virt() { return static_cast<Protocol_*>(this)->readFieldEnd(); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readHeaders_	thrift/include/thrift/transport/THttpTransport.h	/^  bool readHeaders_;$/;"	m	class:apache::thrift::transport::THttpTransport
readI16	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readI16(int16_t& i16) {$/;"	f	class:apache::thrift::protocol::TProtocol
readI16	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readI16(int16_t& i16) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readI16	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readI16(int16_t& i16) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readI16_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readI16_virt(int16_t& i16) { return protocol->readI16(i16); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readI16_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readI16_virt(int16_t& i16) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readI32	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readI32(int32_t& i32) {$/;"	f	class:apache::thrift::protocol::TProtocol
readI32	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readI32(int32_t& i32) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readI32	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readI32(int32_t& i32) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readI32_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readI32_virt(int32_t& i32) { return protocol->readI32(i32); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readI32_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readI32_virt(int32_t& i32) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readI64	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readI64(int64_t& i64) {$/;"	f	class:apache::thrift::protocol::TProtocol
readI64	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readI64(int64_t& i64) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readI64	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readI64(int64_t& i64) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readI64_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readI64_virt(int64_t& i64) { return protocol->readI64(i64); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readI64_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readI64_virt(int64_t& i64) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readListBegin	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readListBegin(TType& elemType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TProtocol
readListBegin	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readListBegin(TType& elemType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readListBegin	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readListBegin(TType& elemType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readListBegin_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readListBegin_virt(TType& elemType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readListBegin_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readListBegin_virt(TType& elemType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readListEnd	thrift/include/thrift/protocol/TCompactProtocol.h	/^  uint32_t readListEnd() { return 0; }$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
readListEnd	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readListEnd() {$/;"	f	class:apache::thrift::protocol::TProtocol
readListEnd	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readListEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readListEnd	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readListEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readListEnd_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readListEnd_virt() { return protocol->readListEnd(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readListEnd_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readListEnd_virt() { return static_cast<Protocol_*>(this)->readListEnd(); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readMapBegin	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readMapBegin(TType& keyType, TType& valType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TProtocol
readMapBegin	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readMapBegin(TType& keyType, TType& valType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readMapBegin	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readMapBegin(TType& keyType, TType& valType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readMapBegin_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readMapBegin_virt(TType& keyType, TType& valType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readMapBegin_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readMapBegin_virt(TType& keyType, TType& valType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readMapEnd	thrift/include/thrift/protocol/TCompactProtocol.h	/^  uint32_t readMapEnd() { return 0; }$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
readMapEnd	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readMapEnd() {$/;"	f	class:apache::thrift::protocol::TProtocol
readMapEnd	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readMapEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readMapEnd	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readMapEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readMapEnd_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readMapEnd_virt() { return protocol->readMapEnd(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readMapEnd_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readMapEnd_virt() { return static_cast<Protocol_*>(this)->readMapEnd(); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readMessageBegin	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readMessageBegin(std::string& name, TMessageType& messageType, int32_t& seqid) {$/;"	f	class:apache::thrift::protocol::TProtocol
readMessageBegin	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readMessageBegin(std::string& name, TMessageType& messageType, int32_t& seqid) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readMessageBegin	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readMessageBegin(std::string& name, TMessageType& messageType, int32_t& seqid) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readMessageBegin_virt	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^  uint32_t readMessageBegin_virt(std::string& _name, TMessageType& _type, int32_t& _seqid) {$/;"	f	class:apache::thrift::protocol::StoredMessageProtocol
readMessageBegin_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readMessageBegin_virt(std::string& name,$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readMessageBegin_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readMessageBegin_virt(std::string& name,$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readMessageEnd	thrift/include/thrift/protocol/TCompactProtocol.h	/^  uint32_t readMessageEnd() { return 0; }$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
readMessageEnd	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readMessageEnd() {$/;"	f	class:apache::thrift::protocol::TProtocol
readMessageEnd	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readMessageEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readMessageEnd	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readMessageEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readMessageEnd_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readMessageEnd_virt() { return protocol->readMessageEnd(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readMessageEnd_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readMessageEnd_virt() { return static_cast<Protocol_*>(this)->readMessageEnd(); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readMutex_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  ::apache::thrift::concurrency::Mutex readMutex_;$/;"	m	class:apache::thrift::async::TConcurrentClientSyncInfo
readOnly_	thrift/include/thrift/transport/TFileTransport.h	/^  bool readOnly_;$/;"	m	class:apache::thrift::transport::TFileTransport
readPoint_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t readPoint_;$/;"	m	class:apache::thrift::transport::TFileTransportBuffer
readSetBegin	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readSetBegin(TType& elemType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TProtocol
readSetBegin	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readSetBegin(TType& elemType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readSetBegin	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readSetBegin(TType& elemType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readSetBegin_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readSetBegin_virt(TType& elemType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readSetBegin_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readSetBegin_virt(TType& elemType, uint32_t& size) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readSetEnd	thrift/include/thrift/protocol/TCompactProtocol.h	/^  uint32_t readSetEnd() { return 0; }$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
readSetEnd	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readSetEnd() {$/;"	f	class:apache::thrift::protocol::TProtocol
readSetEnd	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readSetEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readSetEnd	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readSetEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readSetEnd_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readSetEnd_virt() { return protocol->readSetEnd(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readSetEnd_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readSetEnd_virt() { return static_cast<Protocol_*>(this)->readSetEnd(); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readState	thrift/include/thrift/transport/TFileTransport.h	/^  readState() {$/;"	f	struct:apache::thrift::transport::readState
readState	thrift/include/thrift/transport/TFileTransport.h	/^typedef struct readState {$/;"	s	namespace:apache::thrift::transport
readState	thrift/include/thrift/transport/TFileTransport.h	/^} readState;$/;"	t	namespace:apache::thrift::transport	typeref:struct:apache::thrift::transport::readState
readState_	thrift/include/thrift/transport/TFileTransport.h	/^  readState readState_;$/;"	m	class:apache::thrift::transport::TFileTransport
readString	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readString(std::string& str) {$/;"	f	class:apache::thrift::protocol::TProtocol
readString	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readString(std::string& str) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readString	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readString(std::string& str) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readString_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readString_virt(std::string& str) { return protocol->readString(str); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readString_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readString_virt(std::string& str) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readStructBegin	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readStructBegin(std::string& name) {$/;"	f	class:apache::thrift::protocol::TProtocol
readStructBegin	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readStructBegin(std::string& name) {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readStructBegin	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readStructBegin(std::string& name) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readStructBegin_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readStructBegin_virt(std::string& name) {$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readStructBegin_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readStructBegin_virt(std::string& name) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readStructEnd	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t readStructEnd() {$/;"	f	class:apache::thrift::protocol::TProtocol
readStructEnd	thrift/include/thrift/protocol/TProtocolTap.h	/^  uint32_t readStructEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolTap
readStructEnd	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t readStructEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
readStructEnd_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t readStructEnd_virt() { return protocol->readStructEnd(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
readStructEnd_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t readStructEnd_virt() { return static_cast<Protocol_*>(this)->readStructEnd(); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
readTimeout_	thrift/include/thrift/transport/TFileTransport.h	/^  int32_t readTimeout_;$/;"	m	class:apache::thrift::transport::TFileTransport
read_virt	thrift/include/thrift/transport/TFileTransport.h	/^  virtual uint32_t read_virt(uint8_t* buf, uint32_t len) { return this->read(buf, len); }$/;"	f	class:apache::thrift::transport::TFileTransport
read_virt	thrift/include/thrift/transport/TTransport.h	/^  virtual uint32_t read_virt(uint8_t* \/* buf *\/, uint32_t \/* len *\/) {$/;"	f	class:apache::thrift::transport::TTransport
read_virt	thrift/include/thrift/transport/TTransportUtils.h	/^  virtual uint32_t read_virt(uint8_t* buf, uint32_t len) { return this->read(buf, len); }$/;"	f	class:apache::thrift::transport::TPipedFileReaderTransport
read_virt	thrift/include/thrift/transport/TTransportUtils.h	/^  virtual uint32_t read_virt(uint8_t* buf, uint32_t len) { return this->read(buf, len); }$/;"	f	class:apache::thrift::transport::TPipedTransport
read_virt	thrift/include/thrift/transport/TVirtualTransport.h	/^  virtual uint32_t read_virt(uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TVirtualTransport
reader_	thrift/include/thrift/protocol/TJSONProtocol.h	/^  LookaheadReader reader_;$/;"	m	class:apache::thrift::protocol::TJSONProtocol
readingSize_	thrift/include/thrift/transport/TFileTransport.h	/^  bool readingSize_;$/;"	m	struct:apache::thrift::transport::readState
recursion_limit_	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t recursion_limit_;$/;"	m	class:apache::thrift::protocol::TProtocol
recvBuf_	thrift/include/thrift/async/TEvhttpClientChannel.h	/^  apache::thrift::transport::TMemoryBuffer* recvBuf_;$/;"	m	class:apache::thrift::async::TEvhttpClientChannel
recvPending_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  bool recvPending_;$/;"	m	class:apache::thrift::async::TConcurrentClientSyncInfo
recvTimeout_	thrift/include/thrift/transport/TServerSocket.h	/^  int recvTimeout_;$/;"	m	class:apache::thrift::transport::TServerSocket
recvTimeout_	thrift/include/thrift/transport/TSocket.h	/^  int recvTimeout_;$/;"	m	class:apache::thrift::transport::TSocket
recv_add	gen-cpp/Calculator.cpp	/^int32_t CalculatorClient::recv_add()$/;"	f	class:tutorial::CalculatorClient
recv_add	gen-cpp/Calculator.cpp	/^int32_t CalculatorConcurrentClient::recv_add(const int32_t seqid)$/;"	f	class:tutorial::CalculatorConcurrentClient
recv_calculate	gen-cpp/Calculator.cpp	/^int32_t CalculatorClient::recv_calculate()$/;"	f	class:tutorial::CalculatorClient
recv_calculate	gen-cpp/Calculator.cpp	/^int32_t CalculatorConcurrentClient::recv_calculate(const int32_t seqid)$/;"	f	class:tutorial::CalculatorConcurrentClient
recv_getStruct	gen-cpp/SharedService.cpp	/^void SharedServiceClient::recv_getStruct(SharedStruct& _return)$/;"	f	class:shared::SharedServiceClient
recv_getStruct	gen-cpp/SharedService.cpp	/^void SharedServiceConcurrentClient::recv_getStruct(SharedStruct& _return, const int32_t seqid)$/;"	f	class:shared::SharedServiceConcurrentClient
recv_ping	gen-cpp/Calculator.cpp	/^void CalculatorClient::recv_ping()$/;"	f	class:tutorial::CalculatorClient
recv_ping	gen-cpp/Calculator.cpp	/^void CalculatorConcurrentClient::recv_ping(const int32_t seqid)$/;"	f	class:tutorial::CalculatorConcurrentClient
registerProcessor	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^  void registerProcessor(const std::string& serviceName, shared_ptr<TProcessor> processor) {$/;"	f	class:apache::thrift::TMultiplexedProcessor
releaseHandler	CppServer.cpp	/^  virtual void releaseHandler( ::shared::SharedServiceIf* handler) {$/;"	f	class:CalculatorCloneFactory
releaseHandler	gen-cpp/Calculator.h	/^  virtual void releaseHandler( ::shared::SharedServiceIf* \/* handler *\/) {}$/;"	f	class:tutorial::CalculatorIfSingletonFactory
releaseHandler	gen-cpp/SharedService.h	/^  virtual void releaseHandler(SharedServiceIf* \/* handler *\/) {}$/;"	f	class:shared::SharedServiceIfSingletonFactory
repFunc_	thrift/include/thrift/concurrency/FunctionRunner.h	/^  BoolFunc repFunc_;$/;"	m	class:apache::thrift::concurrency::FunctionRunner
resetAllValues	thrift/include/thrift/transport/TFileTransport.h	/^  void resetAllValues() {$/;"	f	struct:apache::thrift::transport::readState
resetBuffer	thrift/include/thrift/transport/TBufferTransports.h	/^  void resetBuffer() {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
resetBuffer	thrift/include/thrift/transport/TBufferTransports.h	/^  void resetBuffer(uint32_t sz) {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
resetBuffer	thrift/include/thrift/transport/TBufferTransports.h	/^  void resetBuffer(uint8_t* buf, uint32_t sz, MemoryPolicy policy = OBSERVE) {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
resetState	thrift/include/thrift/transport/TFileTransport.h	/^  void resetState(uint32_t lastDispatchPtr) {$/;"	f	struct:apache::thrift::transport::readState
resizeBufferEveryN_	thrift/include/thrift/server/TNonblockingServer.h	/^  int32_t resizeBufferEveryN_;$/;"	m	class:apache::thrift::server::TNonblockingServer
retryDelay_	thrift/include/thrift/transport/TServerSocket.h	/^  int retryDelay_;$/;"	m	class:apache::thrift::transport::TServerSocket
retryInterval_	thrift/include/thrift/transport/TSocketPool.h	/^  time_t retryInterval_;$/;"	m	class:apache::thrift::transport::TSocketPool
retryLimit_	thrift/include/thrift/transport/TServerSocket.h	/^  int retryLimit_;$/;"	m	class:apache::thrift::transport::TServerSocket
rstream_	thrift/include/thrift/transport/TZlibTransport.h	/^  struct z_stream_s* rstream_;$/;"	m	class:apache::thrift::transport::TZlibTransport	typeref:struct:apache::thrift::transport::TZlibTransport::z_stream_s
run	thrift/include/thrift/concurrency/FunctionRunner.h	/^  void run() {$/;"	f	class:apache::thrift::concurrency::FunctionRunner
run	thrift/include/thrift/server/TServer.h	/^  virtual void run() { serve(); }$/;"	f	class:apache::thrift::server::TServer
runnable	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  boost::shared_ptr<Runnable> runnable() const { return Thread::runnable(); }$/;"	f	class:apache::thrift::concurrency::StdThread
runnable	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  void runnable(boost::shared_ptr<Runnable> value) { Thread::runnable(value); }$/;"	f	class:apache::thrift::concurrency::StdThread
runnable	thrift/include/thrift/concurrency/Thread.h	/^  virtual boost::shared_ptr<Runnable> runnable() const { return _runnable; }$/;"	f	class:apache::thrift::concurrency::Thread
runnable	thrift/include/thrift/concurrency/Thread.h	/^  virtual void runnable(boost::shared_ptr<Runnable> value) { _runnable = value; }$/;"	f	class:apache::thrift::concurrency::Thread
rw_mutex_	thrift/include/thrift/concurrency/Mutex.h	/^  const ReadWriteMutex& rw_mutex_;$/;"	m	class:apache::thrift::concurrency::RWGuard
sendTimeout_	thrift/include/thrift/transport/TServerSocket.h	/^  int sendTimeout_;$/;"	m	class:apache::thrift::transport::TServerSocket
sendTimeout_	thrift/include/thrift/transport/TSocket.h	/^  int sendTimeout_;$/;"	m	class:apache::thrift::transport::TSocket
send_add	gen-cpp/Calculator.cpp	/^int32_t CalculatorConcurrentClient::send_add(const int32_t num1, const int32_t num2)$/;"	f	class:tutorial::CalculatorConcurrentClient
send_add	gen-cpp/Calculator.cpp	/^void CalculatorClient::send_add(const int32_t num1, const int32_t num2)$/;"	f	class:tutorial::CalculatorClient
send_calculate	gen-cpp/Calculator.cpp	/^int32_t CalculatorConcurrentClient::send_calculate(const int32_t logid, const Work& w)$/;"	f	class:tutorial::CalculatorConcurrentClient
send_calculate	gen-cpp/Calculator.cpp	/^void CalculatorClient::send_calculate(const int32_t logid, const Work& w)$/;"	f	class:tutorial::CalculatorClient
send_getStruct	gen-cpp/SharedService.cpp	/^int32_t SharedServiceConcurrentClient::send_getStruct(const int32_t key)$/;"	f	class:shared::SharedServiceConcurrentClient
send_getStruct	gen-cpp/SharedService.cpp	/^void SharedServiceClient::send_getStruct(const int32_t key)$/;"	f	class:shared::SharedServiceClient
send_ping	gen-cpp/Calculator.cpp	/^int32_t CalculatorConcurrentClient::send_ping()$/;"	f	class:tutorial::CalculatorConcurrentClient
send_ping	gen-cpp/Calculator.cpp	/^void CalculatorClient::send_ping()$/;"	f	class:tutorial::CalculatorClient
send_zip	gen-cpp/Calculator.cpp	/^void CalculatorClient::send_zip()$/;"	f	class:tutorial::CalculatorClient
send_zip	gen-cpp/Calculator.cpp	/^void CalculatorConcurrentClient::send_zip()$/;"	f	class:tutorial::CalculatorConcurrentClient
separator	thrift/include/thrift/protocol/TMultiplexedProtocol.h	/^  const std::string separator;$/;"	m	class:apache::thrift::protocol::TMultiplexedProtocol
seqid	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^  int32_t seqid;$/;"	m	class:apache::thrift::protocol::StoredMessageProtocol
seqidMutex_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  ::apache::thrift::concurrency::Mutex seqidMutex_;$/;"	m	class:apache::thrift::async::TConcurrentClientSyncInfo
seqidPending_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  int32_t seqidPending_;$/;"	m	class:apache::thrift::async::TConcurrentClientSyncInfo
seqidToMonitorMap_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  MonitorMap seqidToMonitorMap_;$/;"	m	class:apache::thrift::async::TConcurrentClientSyncInfo
seqid_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  int32_t seqid_;$/;"	m	class:apache::thrift::async::TConcurrentRecvSentry
server	thrift/include/thrift/server/TConnectedClient.h	/^namespace server {$/;"	n	namespace:apache::thrift
server	thrift/include/thrift/server/TNonblockingServer.h	/^namespace server {$/;"	n	namespace:apache::thrift
server	thrift/include/thrift/server/TServer.h	/^namespace server {$/;"	n	namespace:apache::thrift
server	thrift/include/thrift/server/TServerFramework.h	/^namespace server {$/;"	n	namespace:apache::thrift
server	thrift/include/thrift/server/TSimpleServer.h	/^namespace server {$/;"	n	namespace:apache::thrift
server	thrift/include/thrift/server/TThreadPoolServer.h	/^namespace server {$/;"	n	namespace:apache::thrift
server	thrift/include/thrift/server/TThreadedServer.h	/^namespace server {$/;"	n	namespace:apache::thrift
server	thrift/include/thrift/transport/TSSLSocket.h	/^  bool server() const { return server_; }$/;"	f	class:apache::thrift::transport::TSSLSocket
server	thrift/include/thrift/transport/TSSLSocket.h	/^  virtual bool server() const { return server_; }$/;"	f	class:apache::thrift::transport::TSSLSocketFactory
server	thrift/include/thrift/transport/TSSLSocket.h	/^  virtual void server(bool flag) { server_ = flag; }$/;"	f	class:apache::thrift::transport::TSSLSocketFactory
server	thrift/include/thrift/transport/TSSLSocket.h	/^  void server(bool flag) { server_ = flag; }$/;"	f	class:apache::thrift::transport::TSSLSocket
serverEvent_	thrift/include/thrift/server/TNonblockingServer.h	/^  struct event serverEvent_;$/;"	m	class:apache::thrift::server::TNonblockingIOThread	typeref:struct:apache::thrift::server::TNonblockingIOThread::event
serverSocket_	thrift/include/thrift/server/TNonblockingServer.h	/^  THRIFT_SOCKET serverSocket_;$/;"	m	class:apache::thrift::server::TNonblockingServer
serverSocket_	thrift/include/thrift/transport/TServerSocket.h	/^  THRIFT_SOCKET serverSocket_;$/;"	m	class:apache::thrift::transport::TServerSocket
serverTransport_	thrift/include/thrift/server/TServer.h	/^  boost::shared_ptr<TServerTransport> serverTransport_;$/;"	m	class:apache::thrift::server::TServer
server_	thrift/include/thrift/qt/TQTcpServer.h	/^  boost::shared_ptr<QTcpServer> server_;$/;"	m	class:apache::thrift::async::TQTcpServer
server_	thrift/include/thrift/server/TNonblockingServer.h	/^  TNonblockingServer* server_;$/;"	m	class:apache::thrift::server::TNonblockingIOThread
server_	thrift/include/thrift/transport/TSSLSocket.h	/^  bool server_;$/;"	m	class:apache::thrift::transport::TSSLSocket
server_	thrift/include/thrift/transport/TSSLSocket.h	/^  bool server_;$/;"	m	class:apache::thrift::transport::TSSLSocketFactory
servers_	thrift/include/thrift/transport/TSocketPool.h	/^  std::vector<boost::shared_ptr<TSocketPoolServer> > servers_;$/;"	m	class:apache::thrift::transport::TSocketPool
serviceName	thrift/include/thrift/protocol/TMultiplexedProtocol.h	/^  const std::string serviceName;$/;"	m	class:apache::thrift::protocol::TMultiplexedProtocol
services	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^  services_t services;$/;"	m	class:apache::thrift::TMultiplexedProcessor
services_t	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^  typedef std::map<std::string, shared_ptr<TProcessor> > services_t;$/;"	t	class:apache::thrift::TMultiplexedProcessor
setAcceptCallback	thrift/include/thrift/transport/TServerSocket.h	/^  void setAcceptCallback(const socket_func_t& acceptCallback) { acceptCallback_ = acceptCallback; }$/;"	f	class:apache::thrift::transport::TServerSocket
setAsyncServer	thrift/include/thrift/async/TAsyncProcessor.h	/^  void setAsyncServer(const TEventServer* server) { asyncServer_ = server; }$/;"	f	class:apache::thrift::async::TAsyncProcessor
setChunkSize	thrift/include/thrift/transport/TFileTransport.h	/^  void setChunkSize(uint32_t chunkSize) {$/;"	f	class:apache::thrift::transport::TFileTransport
setConnectionStackLimit	thrift/include/thrift/server/TNonblockingServer.h	/^  void setConnectionStackLimit(size_t sz) { connectionStackLimit_ = sz; }$/;"	f	class:apache::thrift::server::TNonblockingServer
setContainerSizeLimit	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  void setContainerSizeLimit(int32_t container_limit) { container_limit_ = container_limit; }$/;"	f	class:apache::thrift::protocol::TBinaryProtocolFactoryT
setContainerSizeLimit	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  void setContainerSizeLimit(int32_t container_limit) { container_limit_ = container_limit; }$/;"	f	class:apache::thrift::protocol::TBinaryProtocolT
setContainerSizeLimit	thrift/include/thrift/protocol/TCompactProtocol.h	/^  void setContainerSizeLimit(int32_t container_limit) { container_limit_ = container_limit; }$/;"	f	class:apache::thrift::protocol::TCompactProtocolFactoryT
setDetached	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  void setDetached(bool value) { detached_ = value; }$/;"	f	class:apache::thrift::concurrency::StdThreadFactory::Impl
setDetached	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^void StdThreadFactory::setDetached(bool value) {$/;"	f	class:apache::thrift::concurrency::StdThreadFactory
setEofSleepTimeUs	thrift/include/thrift/transport/TFileTransport.h	/^  void setEofSleepTimeUs(uint32_t eofSleepTime) {$/;"	f	class:apache::thrift::transport::TFileTransport
setEventBufferSize	thrift/include/thrift/transport/TFileTransport.h	/^  void setEventBufferSize(uint32_t bufferSize) {$/;"	f	class:apache::thrift::transport::TFileTransport
setEventHandler	thrift/include/thrift/TProcessor.h	/^  void setEventHandler(boost::shared_ptr<TProcessorEventHandler> eventHandler) {$/;"	f	class:apache::thrift::TProcessor
setEventHandler	thrift/include/thrift/async/TAsyncProcessor.h	/^  void setEventHandler(boost::shared_ptr<TProcessorEventHandler> eventHandler) {$/;"	f	class:apache::thrift::async::TAsyncProcessor
setFD	thrift/include/thrift/transport/TFDTransport.h	/^  void setFD(int fd) { fd_ = fd; }$/;"	f	class:apache::thrift::transport::TFDTransport
setFlushMaxBytes	thrift/include/thrift/transport/TFileTransport.h	/^  void setFlushMaxBytes(uint32_t flushMaxBytes) {$/;"	f	class:apache::thrift::transport::TFileTransport
setFlushMaxUs	thrift/include/thrift/transport/TFileTransport.h	/^  void setFlushMaxUs(uint32_t flushMaxUs) {$/;"	f	class:apache::thrift::transport::TFileTransport
setIdleBufferMemLimit	thrift/include/thrift/server/TNonblockingServer.h	/^  void setIdleBufferMemLimit(size_t limit) { idleReadBufferLimit_ = limit; }$/;"	f	class:apache::thrift::server::TNonblockingServer
setIdleReadBufferLimit	thrift/include/thrift/server/TNonblockingServer.h	/^  void setIdleReadBufferLimit(size_t limit) { idleReadBufferLimit_ = limit; }$/;"	f	class:apache::thrift::server::TNonblockingServer
setIdleWriteBufferLimit	thrift/include/thrift/server/TNonblockingServer.h	/^  void setIdleWriteBufferLimit(size_t limit) { idleWriteBufferLimit_ = limit; }$/;"	f	class:apache::thrift::server::TNonblockingServer
setInputProtocolFactory	thrift/include/thrift/server/TServer.h	/^  void setInputProtocolFactory(boost::shared_ptr<TProtocolFactory> inputProtocolFactory) {$/;"	f	class:apache::thrift::server::TServer
setInputTransportFactory	thrift/include/thrift/server/TServer.h	/^  void setInputTransportFactory(boost::shared_ptr<TTransportFactory> inputTransportFactory) {$/;"	f	class:apache::thrift::server::TServer
setKeepAlive	thrift/include/thrift/transport/TServerSocket.h	/^  void setKeepAlive(bool keepAlive) { keepAlive_ = keepAlive; }$/;"	f	class:apache::thrift::transport::TServerSocket
setListenCallback	thrift/include/thrift/transport/TServerSocket.h	/^  void setListenCallback(const socket_func_t& listenCallback) { listenCallback_ = listenCallback; }$/;"	f	class:apache::thrift::transport::TServerSocket
setManualOpenSSLInitialization	thrift/include/thrift/transport/TSSLSocket.h	/^  static void setManualOpenSSLInitialization(bool manualOpenSSLInitialization) {$/;"	f	class:apache::thrift::transport::TSSLSocketFactory
setMaxActiveProcessors	thrift/include/thrift/server/TNonblockingServer.h	/^  void setMaxActiveProcessors(size_t maxActiveProcessors) {$/;"	f	class:apache::thrift::server::TNonblockingServer
setMaxConnections	thrift/include/thrift/server/TNonblockingServer.h	/^  void setMaxConnections(size_t maxConnections) { maxConnections_ = maxConnections; }$/;"	f	class:apache::thrift::server::TNonblockingServer
setMaxCorruptedEvents	thrift/include/thrift/transport/TFileTransport.h	/^  void setMaxCorruptedEvents(uint32_t maxCorruptedEvents) {$/;"	f	class:apache::thrift::transport::TFileTransport
setMaxEventSize	thrift/include/thrift/transport/TFileTransport.h	/^  void setMaxEventSize(uint32_t maxEventSize) { maxEventSize_ = maxEventSize; }$/;"	f	class:apache::thrift::transport::TFileTransport
setMaxFrameSize	thrift/include/thrift/server/TNonblockingServer.h	/^  void setMaxFrameSize(size_t maxFrameSize) { maxFrameSize_ = maxFrameSize; }$/;"	f	class:apache::thrift::server::TNonblockingServer
setMaxFrameSize	thrift/include/thrift/transport/TBufferTransports.h	/^  void setMaxFrameSize(uint32_t maxFrameSize) { maxFrameSize_ = maxFrameSize; }$/;"	f	class:apache::thrift::transport::TFramedTransport
setNumIOThreads	thrift/include/thrift/server/TNonblockingServer.h	/^  void setNumIOThreads(size_t numThreads) {$/;"	f	class:apache::thrift::server::TNonblockingServer
setOutputFunction	thrift/include/thrift/TOutput.h	/^  inline void setOutputFunction(void (*function)(const char*)) { f_ = function; }$/;"	f	class:apache::thrift::TOutput
setOutputProtocolFactory	thrift/include/thrift/server/TServer.h	/^  void setOutputProtocolFactory(boost::shared_ptr<TProtocolFactory> outputProtocolFactory) {$/;"	f	class:apache::thrift::server::TServer
setOutputTransportFactory	thrift/include/thrift/server/TServer.h	/^  void setOutputTransportFactory(boost::shared_ptr<TTransportFactory> outputTransportFactory) {$/;"	f	class:apache::thrift::server::TServer
setOverloadAction	thrift/include/thrift/server/TNonblockingServer.h	/^  void setOverloadAction(TOverloadAction overloadAction) { overloadAction_ = overloadAction; }$/;"	f	class:apache::thrift::server::TNonblockingServer
setOverloadHysteresis	thrift/include/thrift/server/TNonblockingServer.h	/^  void setOverloadHysteresis(double hysteresisFraction) {$/;"	f	class:apache::thrift::server::TNonblockingServer
setPipeOnRead	thrift/include/thrift/transport/TTransportUtils.h	/^  void setPipeOnRead(bool pipeVal) { pipeOnRead_ = pipeVal; }$/;"	f	class:apache::thrift::transport::TPipedTransport
setPipeOnWrite	thrift/include/thrift/transport/TTransportUtils.h	/^  void setPipeOnWrite(bool pipeVal) { pipeOnWrite_ = pipeVal; }$/;"	f	class:apache::thrift::transport::TPipedTransport
setProtocol	gen-cpp/SharedService.h	/^  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {$/;"	f	class:shared::SharedServiceClient
setProtocol	gen-cpp/SharedService.h	/^  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {$/;"	f	class:shared::SharedServiceConcurrentClient
setProtocol	gen-cpp/SharedService.h	/^  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {$/;"	f	class:shared::SharedServiceClient
setProtocol	gen-cpp/SharedService.h	/^  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {$/;"	f	class:shared::SharedServiceConcurrentClient
setReadBuffSize	thrift/include/thrift/transport/TFileTransport.h	/^  void setReadBuffSize(uint32_t readBuffSize) {$/;"	f	class:apache::thrift::transport::TFileTransport
setReadBuffer	thrift/include/thrift/transport/TBufferTransports.h	/^  void setReadBuffer(uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TBufferBase
setReadTimeout	thrift/include/thrift/transport/TFileTransport.h	/^  void setReadTimeout(int32_t readTimeout) { readTimeout_ = readTimeout; }$/;"	f	class:apache::thrift::transport::TFileTransport
setRecurisionLimit	thrift/include/thrift/protocol/TProtocol.h	/^  void setRecurisionLimit(uint32_t depth) {recursion_limit_ = depth;}$/;"	f	class:apache::thrift::protocol::TProtocol
setResizeBufferEveryN	thrift/include/thrift/server/TNonblockingServer.h	/^  void setResizeBufferEveryN(int32_t count) { resizeBufferEveryN_ = count; }$/;"	f	class:apache::thrift::server::TNonblockingServer
setServerEventHandler	thrift/include/thrift/server/TServer.h	/^  void setServerEventHandler(boost::shared_ptr<TServerEventHandler> eventHandler) {$/;"	f	class:apache::thrift::server::TServer
setStrict	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  void setStrict(bool strict_read, bool strict_write) {$/;"	f	class:apache::thrift::protocol::TBinaryProtocolFactoryT
setStrict	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  void setStrict(bool strict_read, bool strict_write) {$/;"	f	class:apache::thrift::protocol::TBinaryProtocolT
setStringPrefixSize	thrift/include/thrift/protocol/TDebugProtocol.h	/^  void setStringPrefixSize(int32_t string_prefix_size) { string_prefix_size_ = string_prefix_size; }$/;"	f	class:apache::thrift::protocol::TDebugProtocol
setStringSizeLimit	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  void setStringSizeLimit(int32_t string_limit) { string_limit_ = string_limit; }$/;"	f	class:apache::thrift::protocol::TBinaryProtocolFactoryT
setStringSizeLimit	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  void setStringSizeLimit(int32_t string_limit) { string_limit_ = string_limit; }$/;"	f	class:apache::thrift::protocol::TBinaryProtocolT
setStringSizeLimit	thrift/include/thrift/protocol/TCompactProtocol.h	/^  void setStringSizeLimit(int32_t string_limit) { string_limit_ = string_limit; }$/;"	f	class:apache::thrift::protocol::TCompactProtocolFactoryT
setStringSizeLimit	thrift/include/thrift/protocol/TDebugProtocol.h	/^  void setStringSizeLimit(int32_t string_limit) { string_limit_ = string_limit; }$/;"	f	class:apache::thrift::protocol::TDebugProtocol
setTaskExpireTime	thrift/include/thrift/server/TNonblockingServer.h	/^  void setTaskExpireTime(int64_t taskExpireTime) { taskExpireTime_ = taskExpireTime; }$/;"	f	class:apache::thrift::server::TNonblockingServer
setThread	thrift/include/thrift/server/TNonblockingServer.h	/^  void setThread(const boost::shared_ptr<Thread>& t) { thread_ = t; }$/;"	f	class:apache::thrift::server::TNonblockingIOThread
setUseHighPriorityIOThreads	thrift/include/thrift/server/TNonblockingServer.h	/^  void setUseHighPriorityIOThreads(bool val) { useHighPriorityIOThreads_ = val; }$/;"	f	class:apache::thrift::server::TNonblockingServer
setWriteBuffer	thrift/include/thrift/transport/TBufferTransports.h	/^  void setWriteBuffer(uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TBufferBase
setWriteBufferDefaultSize	thrift/include/thrift/server/TNonblockingServer.h	/^  void setWriteBufferDefaultSize(size_t size) { writeBufferDefaultSize_ = size; }$/;"	f	class:apache::thrift::server::TNonblockingServer
shared	gen-cpp/SharedService.cpp	/^namespace shared {$/;"	n	file:
shared	gen-cpp/SharedService.h	/^namespace shared {$/;"	n
shared	gen-cpp/shared_constants.cpp	/^namespace shared {$/;"	n	file:
shared	gen-cpp/shared_constants.h	/^namespace shared {$/;"	n
shared	gen-cpp/shared_types.cpp	/^namespace shared {$/;"	n	file:
shared	gen-cpp/shared_types.h	/^namespace shared {$/;"	n
sharedConstants	gen-cpp/shared_constants.cpp	/^sharedConstants::sharedConstants() {$/;"	f	class:shared::sharedConstants
sharedConstants	gen-cpp/shared_constants.h	/^class sharedConstants {$/;"	c	namespace:shared
shared_CONSTANTS_H	gen-cpp/shared_constants.h	8;"	d
shared_TYPES_H	gen-cpp/shared_types.h	8;"	d
sink_	thrift/include/thrift/protocol/TProtocolTap.h	/^  boost::shared_ptr<TProtocol> sink_;$/;"	m	class:apache::thrift::protocol::TProtocolTap
size_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t size_;$/;"	m	class:apache::thrift::transport::TFileTransportBuffer
skip	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t skip(TType type) {$/;"	f	class:apache::thrift::protocol::TProtocol
skip	thrift/include/thrift/protocol/TProtocol.h	/^uint32_t skip(Protocol_& prot, TType type) {$/;"	f	namespace:apache::thrift::protocol
skip	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t skip(TType type) { return ::apache::thrift::protocol::skip(*this, type); }$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
skip	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t skip(TType type) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
skip_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t skip_virt(TType type) { return static_cast<Protocol_*>(this)->skip(type); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
socket_	thrift/include/thrift/transport/TSocket.h	/^  THRIFT_SOCKET socket_;$/;"	m	class:apache::thrift::transport::TSocket
socket_	thrift/include/thrift/transport/TSocketPool.h	/^  THRIFT_SOCKET socket_;$/;"	m	class:apache::thrift::transport::TSocketPoolServer
socket_func_t	thrift/include/thrift/transport/TServerSocket.h	/^  typedef apache::thrift::stdcxx::function<void(THRIFT_SOCKET fd)> socket_func_t;$/;"	t	class:apache::thrift::transport::TServerSocket
source_	thrift/include/thrift/protocol/TProtocolTap.h	/^  boost::shared_ptr<TProtocol> source_;$/;"	m	class:apache::thrift::protocol::TProtocolTap
srcTrans_	thrift/include/thrift/transport/TTransportUtils.h	/^  boost::shared_ptr<TFileReaderTransport> srcTrans_;$/;"	m	class:apache::thrift::transport::TPipedFileReaderTransport
srcTrans_	thrift/include/thrift/transport/TTransportUtils.h	/^  boost::shared_ptr<TTransport> srcTrans_;$/;"	m	class:apache::thrift::transport::TPipedTransport
ssl_	thrift/include/thrift/transport/TSSLSocket.h	/^  SSL* ssl_;$/;"	m	class:apache::thrift::transport::TSSLSocket
start	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  void start() {$/;"	f	class:apache::thrift::concurrency::StdThread
startWriterThread	thrift/include/thrift/transport/TFileTransport.h	/^  static void* startWriterThread(void* ptr) {$/;"	f	class:apache::thrift::transport::TFileTransport
started	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  enum STATE { uninitialized, starting, started, stopping, stopped };$/;"	e	enum:apache::thrift::concurrency::StdThread::STATE	file:
starting	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  enum STATE { uninitialized, starting, started, stopping, stopped };$/;"	e	enum:apache::thrift::concurrency::StdThread::STATE	file:
state_	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  STATE state_;$/;"	m	class:apache::thrift::concurrency::StdThread	file:
state_	thrift/include/thrift/concurrency/TimerManager.h	/^  STATE state_;$/;"	m	class:apache::thrift::concurrency::TimerManager
stdcxx	thrift/include/thrift/cxxfunctional.h	/^  namespace apache { namespace thrift { namespace stdcxx {$/;"	n	namespace:apache::thrift
stop	thrift/include/thrift/server/TServer.h	/^  virtual void stop() {}$/;"	f	class:apache::thrift::server::TServer
stop_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  volatile bool stop_;$/;"	m	class:apache::thrift::async::TConcurrentClientSyncInfo
stop_	thrift/include/thrift/server/TThreadPoolServer.h	/^  volatile bool stop_;$/;"	m	class:apache::thrift::server::TThreadPoolServer
stopped	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  enum STATE { uninitialized, starting, started, stopping, stopped };$/;"	e	enum:apache::thrift::concurrency::StdThread::STATE	file:
stopping	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  enum STATE { uninitialized, starting, started, stopping, stopped };$/;"	e	enum:apache::thrift::concurrency::StdThread::STATE	file:
strict_read_	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  bool strict_read_;$/;"	m	class:apache::thrift::protocol::TBinaryProtocolFactoryT
strict_read_	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  bool strict_read_;$/;"	m	class:apache::thrift::protocol::TBinaryProtocolT
strict_write_	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  bool strict_write_;$/;"	m	class:apache::thrift::protocol::TBinaryProtocolFactoryT
strict_write_	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  bool strict_write_;$/;"	m	class:apache::thrift::protocol::TBinaryProtocolT
string_buf_	thrift/include/thrift/protocol/TCompactProtocol.h	/^  uint8_t* string_buf_;$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
string_buf_size_	thrift/include/thrift/protocol/TCompactProtocol.h	/^  int32_t string_buf_size_;$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
string_limit_	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  int32_t string_limit_;$/;"	m	class:apache::thrift::protocol::TBinaryProtocolFactoryT
string_limit_	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  int32_t string_limit_;$/;"	m	class:apache::thrift::protocol::TBinaryProtocolT
string_limit_	thrift/include/thrift/protocol/TCompactProtocol.h	/^  int32_t string_limit_;$/;"	m	class:apache::thrift::protocol::TCompactProtocolFactoryT
string_limit_	thrift/include/thrift/protocol/TCompactProtocol.h	/^  int32_t string_limit_;$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
string_limit_	thrift/include/thrift/protocol/TDebugProtocol.h	/^  int32_t string_limit_;$/;"	m	class:apache::thrift::protocol::TDebugProtocol
string_prefix_size_	thrift/include/thrift/protocol/TDebugProtocol.h	/^  int32_t string_prefix_size_;$/;"	m	class:apache::thrift::protocol::TDebugProtocol
success	gen-cpp/Calculator.h	/^  bool success :1;$/;"	m	struct:tutorial::_Calculator_add_presult__isset
success	gen-cpp/Calculator.h	/^  bool success :1;$/;"	m	struct:tutorial::_Calculator_add_result__isset
success	gen-cpp/Calculator.h	/^  bool success :1;$/;"	m	struct:tutorial::_Calculator_calculate_presult__isset
success	gen-cpp/Calculator.h	/^  bool success :1;$/;"	m	struct:tutorial::_Calculator_calculate_result__isset
success	gen-cpp/Calculator.h	/^  int32_t success;$/;"	m	class:tutorial::Calculator_add_result
success	gen-cpp/Calculator.h	/^  int32_t success;$/;"	m	class:tutorial::Calculator_calculate_result
success	gen-cpp/Calculator.h	/^  int32_t* success;$/;"	m	class:tutorial::Calculator_add_presult
success	gen-cpp/Calculator.h	/^  int32_t* success;$/;"	m	class:tutorial::Calculator_calculate_presult
success	gen-cpp/SharedService.h	/^  SharedStruct success;$/;"	m	class:shared::SharedService_getStruct_result
success	gen-cpp/SharedService.h	/^  SharedStruct* success;$/;"	m	class:shared::SharedService_getStruct_presult
success	gen-cpp/SharedService.h	/^  bool success :1;$/;"	m	struct:shared::_SharedService_getStruct_presult__isset
success	gen-cpp/SharedService.h	/^  bool success :1;$/;"	m	struct:shared::_SharedService_getStruct_result__isset
swap	gen-cpp/shared_types.cpp	/^void swap(SharedStruct &a, SharedStruct &b) {$/;"	f	namespace:shared
swap	gen-cpp/tutorial_types.cpp	/^void swap(InvalidOperation &a, InvalidOperation &b) {$/;"	f	namespace:tutorial
swap	gen-cpp/tutorial_types.cpp	/^void swap(Work &a, Work &b) {$/;"	f	namespace:tutorial
swap	thrift/include/thrift/transport/TBufferTransports.h	/^  void swap(TMemoryBuffer& that) {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
sync_	gen-cpp/SharedService.h	/^  ::apache::thrift::async::TConcurrentClientSyncInfo sync_;$/;"	m	class:shared::SharedServiceConcurrentClient
sync_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  TConcurrentClientSyncInfo &sync_;$/;"	m	class:apache::thrift::async::TConcurrentRecvSentry
sync_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  TConcurrentClientSyncInfo &sync_;$/;"	m	class:apache::thrift::async::TConcurrentSendSentry
targetTransport_	thrift/include/thrift/processor/PeekProcessor.h	/^  boost::shared_ptr<apache::thrift::transport::TTransport> targetTransport_;$/;"	m	class:apache::thrift::processor::PeekProcessor
taskCount_	thrift/include/thrift/concurrency/TimerManager.h	/^  size_t taskCount_;$/;"	m	class:apache::thrift::concurrency::TimerManager
taskExpiration_	thrift/include/thrift/server/TThreadPoolServer.h	/^  volatile int64_t taskExpiration_;$/;"	m	class:apache::thrift::server::TThreadPoolServer
taskExpireTime_	thrift/include/thrift/server/TNonblockingServer.h	/^  int64_t taskExpireTime_;$/;"	m	class:apache::thrift::server::TNonblockingServer
taskMap_	thrift/include/thrift/concurrency/TimerManager.h	/^  std::multimap<int64_t, boost::shared_ptr<Task> > taskMap_;$/;"	m	class:apache::thrift::concurrency::TimerManager
task_iterator	thrift/include/thrift/concurrency/TimerManager.h	/^  typedef std::multimap<int64_t, boost::shared_ptr<TimerManager::Task> >::iterator task_iterator;$/;"	t	class:apache::thrift::concurrency::TimerManager
task_range	thrift/include/thrift/concurrency/TimerManager.h	/^  typedef std::pair<task_iterator, task_iterator> task_range;$/;"	t	class:apache::thrift::concurrency::TimerManager
tcpRecvBuffer_	thrift/include/thrift/transport/TServerSocket.h	/^  int tcpRecvBuffer_;$/;"	m	class:apache::thrift::transport::TServerSocket
tcpSendBuffer_	thrift/include/thrift/transport/TServerSocket.h	/^  int tcpSendBuffer_;$/;"	m	class:apache::thrift::transport::TServerSocket
test	thrift/include/thrift/transport/TShortReadTransport.h	/^namespace test {$/;"	n	namespace:apache::thrift::transport
thread	thrift/include/thrift/concurrency/Thread.h	/^  virtual boost::shared_ptr<Thread> thread() { return thread_.lock(); }$/;"	f	class:apache::thrift::concurrency::Runnable
thread	thrift/include/thrift/concurrency/Thread.h	/^  virtual void thread(boost::shared_ptr<Thread> value) { thread_ = value; }$/;"	f	class:apache::thrift::concurrency::Runnable
threadFactory_	thrift/include/thrift/concurrency/TimerManager.h	/^  boost::shared_ptr<const ThreadFactory> threadFactory_;$/;"	m	class:apache::thrift::concurrency::TimerManager
threadFactory_	thrift/include/thrift/server/TThreadedServer.h	/^  boost::shared_ptr<apache::thrift::concurrency::ThreadFactory> threadFactory_;$/;"	m	class:apache::thrift::server::TThreadedServer
threadFactory_	thrift/include/thrift/transport/TFileTransport.h	/^  apache::thrift::concurrency::PlatformThreadFactory threadFactory_;$/;"	m	class:apache::thrift::transport::TFileTransport
threadId_	thrift/include/thrift/server/TNonblockingServer.h	/^  Thread::id_t threadId_;$/;"	m	class:apache::thrift::server::TNonblockingIOThread
threadMain	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^void StdThread::threadMain(boost::shared_ptr<StdThread> thread) {$/;"	f	class:apache::thrift::concurrency::StdThread
threadManager_	thrift/include/thrift/server/TNonblockingServer.h	/^  boost::shared_ptr<ThreadManager> threadManager_;$/;"	m	class:apache::thrift::server::TNonblockingServer
threadManager_	thrift/include/thrift/server/TThreadPoolServer.h	/^  boost::shared_ptr<apache::thrift::concurrency::ThreadManager> threadManager_;$/;"	m	class:apache::thrift::server::TThreadPoolServer
threadPoolProcessing_	thrift/include/thrift/server/TNonblockingServer.h	/^  bool threadPoolProcessing_;$/;"	m	class:apache::thrift::server::TNonblockingServer
thread_	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  std::unique_ptr<std::thread> thread_;$/;"	m	class:apache::thrift::concurrency::StdThread	file:
thread_	thrift/include/thrift/concurrency/Thread.h	/^  boost::weak_ptr<Thread> thread_;$/;"	m	class:apache::thrift::concurrency::Runnable
thread_	thrift/include/thrift/server/TNonblockingServer.h	/^  boost::shared_ptr<Thread> thread_;$/;"	m	class:apache::thrift::server::TNonblockingIOThread
thrift	thrift/include/thrift/TApplicationException.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/TBase.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/TDispatchProcessor.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/TOutput.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/TProcessor.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/TToString.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/Thrift.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/async/TAsyncBufferProcessor.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/async/TAsyncChannel.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/async/TAsyncDispatchProcessor.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/async/TAsyncProcessor.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/async/TAsyncProtocolProcessor.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^namespace apache { namespace thrift { namespace async {$/;"	n	namespace:apache
thrift	thrift/include/thrift/async/TEvhttpClientChannel.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/async/TEvhttpServer.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/concurrency/BoostThreadFactory.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/concurrency/Exception.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/concurrency/FunctionRunner.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/concurrency/Monitor.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/concurrency/Mutex.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/concurrency/PlatformThreadFactory.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/concurrency/PosixThreadFactory.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/concurrency/StdMonitor.cpp	/^namespace thrift {$/;"	n	namespace:apache	file:
thrift	thrift/include/thrift/concurrency/StdMutex.cpp	/^namespace thrift {$/;"	n	namespace:apache	file:
thrift	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^namespace thrift {$/;"	n	namespace:apache	file:
thrift	thrift/include/thrift/concurrency/StdThreadFactory.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/concurrency/Thread.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/concurrency/ThreadManager.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/concurrency/TimerManager.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/concurrency/Util.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/cxxfunctional.h	/^  namespace apache { namespace thrift { namespace stdcxx {$/;"	n	namespace:apache
thrift	thrift/include/thrift/processor/PeekProcessor.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/processor/StatsProcessor.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/protocol/TBase64Utils.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/protocol/TBinaryProtocol.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/protocol/TCompactProtocol.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/protocol/TDebugProtocol.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/protocol/TJSONProtocol.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/protocol/TMultiplexedProtocol.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/protocol/TProtocol.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/protocol/TProtocolDecorator.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/protocol/TProtocolException.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/protocol/TProtocolTap.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/protocol/TVirtualProtocol.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/qt/TQIODeviceTransport.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/qt/TQTcpServer.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/server/TConnectedClient.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/server/TNonblockingServer.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/server/TServer.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/server/TServerFramework.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/server/TSimpleServer.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/server/TThreadPoolServer.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/server/TThreadedServer.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TBufferTransports.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TFDTransport.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TFileTransport.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/THttpClient.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/THttpServer.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/THttpTransport.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TPipe.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TPipeServer.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TSSLServerSocket.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TSSLSocket.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TServerSocket.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TServerTransport.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TShortReadTransport.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TSimpleFileTransport.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TSocket.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TSocketPool.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TTransport.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TTransportException.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TTransportUtils.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TVirtualTransport.h	/^namespace thrift {$/;"	n	namespace:apache
thrift	thrift/include/thrift/transport/TZlibTransport.h	/^namespace thrift {$/;"	n	namespace:apache
thriftTExceptionMessageHolder_	gen-cpp/tutorial_types.h	/^  mutable std::string thriftTExceptionMessageHolder_;$/;"	m	class:tutorial::InvalidOperation
throw_it	thrift/include/thrift/Thrift.h	/^  virtual void throw_it() {$/;"	f	class:apache::thrift::TExceptionWrapper
timedOut	thrift/include/thrift/async/TEvhttpClientChannel.h	/^  virtual bool timedOut() const { return false; }$/;"	f	class:apache::thrift::async::TEvhttpClientChannel
timedlock	thrift/include/thrift/concurrency/StdMutex.cpp	/^bool Mutex::timedlock(int64_t ms) const {$/;"	f	class:apache::thrift::concurrency::Mutex
timeout_	thrift/include/thrift/server/TThreadPoolServer.h	/^  volatile int64_t timeout_;$/;"	m	class:apache::thrift::server::TThreadPoolServer
toMilliseconds	thrift/include/thrift/concurrency/Util.h	/^  static void toMilliseconds(int64_t& result, const struct THRIFT_TIMESPEC& value) {$/;"	f	class:apache::thrift::concurrency::Util
toMilliseconds	thrift/include/thrift/concurrency/Util.h	/^  static void toMilliseconds(int64_t& result, const struct timeval& value) {$/;"	f	class:apache::thrift::concurrency::Util
toTicks	thrift/include/thrift/concurrency/Util.h	/^  static void toTicks(int64_t& result, const struct THRIFT_TIMESPEC& value, int64_t ticksPerSec) {$/;"	f	class:apache::thrift::concurrency::Util
toTicks	thrift/include/thrift/concurrency/Util.h	/^  static void toTicks(int64_t& result, const struct timeval& value, int64_t ticksPerSec) {$/;"	f	class:apache::thrift::concurrency::Util
toTicks	thrift/include/thrift/concurrency/Util.h	/^  static void toTicks(int64_t& result,$/;"	f	class:apache::thrift::concurrency::Util
toTimespec	thrift/include/thrift/concurrency/Util.h	/^  static void toTimespec(struct THRIFT_TIMESPEC& result, int64_t value) {$/;"	f	class:apache::thrift::concurrency::Util
toTimeval	thrift/include/thrift/concurrency/Util.h	/^  static void toTimeval(struct timeval& result, int64_t value) {$/;"	f	class:apache::thrift::concurrency::Util
toUsec	thrift/include/thrift/concurrency/Util.h	/^  static void toUsec(int64_t& result, const struct THRIFT_TIMESPEC& value) {$/;"	f	class:apache::thrift::concurrency::Util
toUsec	thrift/include/thrift/concurrency/Util.h	/^  static void toUsec(int64_t& result, const struct timeval& value) {$/;"	f	class:apache::thrift::concurrency::Util
toWire16	thrift/include/thrift/protocol/TProtocol.h	/^  static uint16_t toWire16(uint16_t x)   {return THRIFT_htoles(x);}$/;"	f	struct:apache::thrift::protocol::TNetworkLittleEndian
toWire16	thrift/include/thrift/protocol/TProtocol.h	/^  static uint16_t toWire16(uint16_t x)   {return htons(x);}$/;"	f	struct:apache::thrift::protocol::TNetworkBigEndian
toWire32	thrift/include/thrift/protocol/TProtocol.h	/^  static uint32_t toWire32(uint32_t x)   {return THRIFT_htolel(x);}$/;"	f	struct:apache::thrift::protocol::TNetworkLittleEndian
toWire32	thrift/include/thrift/protocol/TProtocol.h	/^  static uint32_t toWire32(uint32_t x)   {return htonl(x);}$/;"	f	struct:apache::thrift::protocol::TNetworkBigEndian
toWire64	thrift/include/thrift/protocol/TProtocol.h	/^  static uint64_t toWire64(uint64_t x)   {return THRIFT_htolell(x);}$/;"	f	struct:apache::thrift::protocol::TNetworkLittleEndian
toWire64	thrift/include/thrift/protocol/TProtocol.h	/^  static uint64_t toWire64(uint64_t x)   {return THRIFT_htonll(x);}$/;"	f	struct:apache::thrift::protocol::TNetworkBigEndian
to_string	thrift/include/thrift/TToString.h	/^std::string to_string(const T& beg, const T& end) {$/;"	f	namespace:apache::thrift
to_string	thrift/include/thrift/TToString.h	/^std::string to_string(const T& t) {$/;"	f	namespace:apache::thrift
to_string	thrift/include/thrift/TToString.h	/^std::string to_string(const std::map<K, V>& m) {$/;"	f	namespace:apache::thrift
to_string	thrift/include/thrift/TToString.h	/^std::string to_string(const std::set<T>& s) {$/;"	f	namespace:apache::thrift
to_string	thrift/include/thrift/TToString.h	/^std::string to_string(const std::vector<T>& t) {$/;"	f	namespace:apache::thrift
to_string	thrift/include/thrift/TToString.h	/^std::string to_string(const typename std::pair<K, V>& v) {$/;"	f	namespace:apache::thrift
trans_	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  Transport_* trans_;$/;"	m	class:apache::thrift::protocol::TBinaryProtocolT
trans_	thrift/include/thrift/protocol/TCompactProtocol.h	/^  Transport_* trans_;$/;"	m	class:apache::thrift::protocol::TCompactProtocolT
trans_	thrift/include/thrift/protocol/TDebugProtocol.h	/^  TTransport* trans_;$/;"	m	class:apache::thrift::protocol::TDebugProtocol
trans_	thrift/include/thrift/protocol/TJSONProtocol.h	/^    TTransport* trans_;$/;"	m	class:apache::thrift::protocol::TJSONProtocol::LookaheadReader
trans_	thrift/include/thrift/protocol/TJSONProtocol.h	/^  TTransport* trans_;$/;"	m	class:apache::thrift::protocol::TJSONProtocol
transport	thrift/include/thrift/TProcessor.h	/^  boost::shared_ptr<transport::TTransport> transport;$/;"	m	struct:apache::thrift::TConnectionInfo
transport	thrift/include/thrift/async/TAsyncChannel.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/async/TEvhttpClientChannel.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/qt/TQIODeviceTransport.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TBufferTransports.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TFDTransport.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TFileTransport.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/THttpClient.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/THttpServer.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/THttpTransport.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TPipe.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TPipeServer.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TSSLServerSocket.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TSSLSocket.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TServerSocket.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TServerTransport.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TShortReadTransport.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TSimpleFileTransport.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TSocket.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TSocketPool.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TTransport.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TTransportException.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TTransportUtils.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TVirtualTransport.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transport	thrift/include/thrift/transport/TZlibTransport.h	/^namespace transport {$/;"	n	namespace:apache::thrift
transportFactory_	thrift/include/thrift/processor/PeekProcessor.h	/^  boost::shared_ptr<apache::thrift::transport::TPipedTransportFactory> transportFactory_;$/;"	m	class:apache::thrift::processor::PeekProcessor
transport_	thrift/include/thrift/transport/TBufferTransports.h	/^  boost::shared_ptr<TTransport> transport_;$/;"	m	class:apache::thrift::transport::TBufferedTransport
transport_	thrift/include/thrift/transport/TBufferTransports.h	/^  boost::shared_ptr<TTransport> transport_;$/;"	m	class:apache::thrift::transport::TFramedTransport
transport_	thrift/include/thrift/transport/THttpTransport.h	/^  boost::shared_ptr<TTransport> transport_;$/;"	m	class:apache::thrift::transport::THttpTransport
transport_	thrift/include/thrift/transport/TShortReadTransport.h	/^  boost::shared_ptr<TTransport> transport_;$/;"	m	class:apache::thrift::transport::test::TShortReadTransport
transport_	thrift/include/thrift/transport/TZlibTransport.h	/^  boost::shared_ptr<TTransport> transport_;$/;"	m	class:apache::thrift::transport::TZlibTransport
trylock	thrift/include/thrift/concurrency/StdMutex.cpp	/^bool Mutex::trylock() const {$/;"	f	class:apache::thrift::concurrency::Mutex
tutorial	gen-cpp/Calculator.cpp	/^namespace tutorial {$/;"	n	file:
tutorial	gen-cpp/Calculator.h	/^namespace tutorial {$/;"	n
tutorial	gen-cpp/tutorial_constants.cpp	/^namespace tutorial {$/;"	n	file:
tutorial	gen-cpp/tutorial_constants.h	/^namespace tutorial {$/;"	n
tutorial	gen-cpp/tutorial_types.cpp	/^namespace tutorial {$/;"	n	file:
tutorial	gen-cpp/tutorial_types.h	/^namespace tutorial {$/;"	n
tutorialConstants	gen-cpp/tutorial_constants.cpp	/^tutorialConstants::tutorialConstants() {$/;"	f	class:tutorial::tutorialConstants
tutorialConstants	gen-cpp/tutorial_constants.h	/^class tutorialConstants {$/;"	c	namespace:tutorial
tutorial_CONSTANTS_H	gen-cpp/tutorial_constants.h	8;"	d
tutorial_TYPES_H	gen-cpp/tutorial_types.h	8;"	d
type	gen-cpp/tutorial_types.h	/^  enum type {$/;"	g	struct:tutorial::Operation
type	thrift/include/thrift/processor/TMultiplexedProcessor.h	/^  TMessageType type;$/;"	m	class:apache::thrift::protocol::StoredMessageProtocol
type_	thrift/include/thrift/TApplicationException.h	/^  TApplicationExceptionType type_;$/;"	m	class:apache::thrift::TApplicationException
type_	thrift/include/thrift/protocol/TProtocolException.h	/^  TProtocolExceptionType type_;$/;"	m	class:apache::thrift::protocol::TProtocolException
type_	thrift/include/thrift/transport/TTransportException.h	/^  TTransportExceptionType type_;$/;"	m	class:apache::thrift::transport::TTransportException
underlying_	thrift/include/thrift/async/TAsyncProtocolProcessor.h	/^  boost::shared_ptr<TAsyncProcessor> underlying_;$/;"	m	class:apache::thrift::async::TAsyncProtocolProcessor
uninitialized	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  enum STATE { uninitialized, starting, started, stopping, stopped };$/;"	e	enum:apache::thrift::concurrency::StdThread::STATE	file:
unknown_thread_id	thrift/include/thrift/concurrency/Thread.h	/^  static const Thread::id_t unknown_thread_id;$/;"	m	class:apache::thrift::concurrency::ThreadFactory
unlock	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  void unlock() { mutex_->unlock(); }$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
unlock	thrift/include/thrift/concurrency/StdMonitor.cpp	/^void Monitor::unlock() const {$/;"	f	class:apache::thrift::concurrency::Monitor
unlock	thrift/include/thrift/concurrency/StdMutex.cpp	/^void Mutex::unlock() const {$/;"	f	class:apache::thrift::concurrency::Mutex
unregister	thrift/include/thrift/TProcessor.h	/^  void unregister() { handler_ = NULL; }$/;"	f	class:apache::thrift::TProcessorContextFreer
urbuf_	thrift/include/thrift/transport/TZlibTransport.h	/^  uint8_t* urbuf_;$/;"	m	class:apache::thrift::transport::TZlibTransport
urbuf_size_	thrift/include/thrift/transport/TZlibTransport.h	/^  uint32_t urbuf_size_;$/;"	m	class:apache::thrift::transport::TZlibTransport
urpos_	thrift/include/thrift/transport/TZlibTransport.h	/^  int urpos_;$/;"	m	class:apache::thrift::transport::TZlibTransport
useHighPriorityIOThreads	thrift/include/thrift/server/TNonblockingServer.h	/^  bool useHighPriorityIOThreads() const { return useHighPriorityIOThreads_; }$/;"	f	class:apache::thrift::server::TNonblockingServer
useHighPriorityIOThreads_	thrift/include/thrift/server/TNonblockingServer.h	/^  bool useHighPriorityIOThreads_;$/;"	m	class:apache::thrift::server::TNonblockingServer
useHighPriority_	thrift/include/thrift/server/TNonblockingServer.h	/^  bool useHighPriority_;$/;"	m	class:apache::thrift::server::TNonblockingIOThread
useLowMinRto_	thrift/include/thrift/transport/TSocket.h	/^  static bool useLowMinRto_;$/;"	m	class:apache::thrift::transport::TSocket
userEventBase_	thrift/include/thrift/server/TNonblockingServer.h	/^  event_base* userEventBase_;$/;"	m	class:apache::thrift::server::TNonblockingServer
uwbuf_	thrift/include/thrift/transport/TZlibTransport.h	/^  uint8_t* uwbuf_;$/;"	m	class:apache::thrift::transport::TZlibTransport
uwbuf_size_	thrift/include/thrift/transport/TZlibTransport.h	/^  uint32_t uwbuf_size_;$/;"	m	class:apache::thrift::transport::TZlibTransport
uwpos_	thrift/include/thrift/transport/TZlibTransport.h	/^  int uwpos_;$/;"	m	class:apache::thrift::transport::TZlibTransport
value	gen-cpp/shared_types.h	/^  bool value :1;$/;"	m	struct:shared::_SharedStruct__isset
value	gen-cpp/shared_types.h	/^  std::string value;$/;"	m	class:shared::SharedStruct
verify	thrift/include/thrift/transport/TSSLSocket.h	/^  virtual Decision verify(const sockaddr_storage& \/* sa *\/) throw() { return DENY; }$/;"	f	class:apache::thrift::transport::AccessManager
verify	thrift/include/thrift/transport/TSSLSocket.h	/^  virtual Decision verify(const sockaddr_storage& \/* sa *\/,$/;"	f	class:apache::thrift::transport::AccessManager
verify	thrift/include/thrift/transport/TSSLSocket.h	/^  virtual Decision verify(const std::string& \/* host *\/,$/;"	f	class:apache::thrift::transport::AccessManager
w	gen-cpp/Calculator.h	/^  Work w;$/;"	m	class:tutorial::Calculator_calculate_args
w	gen-cpp/Calculator.h	/^  bool w :1;$/;"	m	struct:tutorial::_Calculator_calculate_args__isset
w	gen-cpp/Calculator.h	/^  const Work* w;$/;"	m	class:tutorial::Calculator_calculate_pargs
wBase_	thrift/include/thrift/transport/TBufferTransports.h	/^  uint8_t* wBase_;$/;"	m	class:apache::thrift::transport::TBufferBase
wBound_	thrift/include/thrift/transport/TBufferTransports.h	/^  uint8_t* wBound_;$/;"	m	class:apache::thrift::transport::TBufferBase
wBufSize_	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t wBufSize_;$/;"	m	class:apache::thrift::transport::TBufferedTransport
wBufSize_	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t wBufSize_;$/;"	m	class:apache::thrift::transport::TFramedTransport
wBufSize_	thrift/include/thrift/transport/TTransportUtils.h	/^  uint32_t wBufSize_;$/;"	m	class:apache::thrift::transport::TPipedTransport
wBuf_	thrift/include/thrift/transport/TBufferTransports.h	/^  boost::scoped_array<uint8_t> wBuf_;$/;"	m	class:apache::thrift::transport::TBufferedTransport
wBuf_	thrift/include/thrift/transport/TBufferTransports.h	/^  boost::scoped_array<uint8_t> wBuf_;$/;"	m	class:apache::thrift::transport::TFramedTransport
wBuf_	thrift/include/thrift/transport/TTransportUtils.h	/^  uint8_t* wBuf_;$/;"	m	class:apache::thrift::transport::TPipedTransport
wLen_	thrift/include/thrift/transport/TTransportUtils.h	/^  uint32_t wLen_;$/;"	m	class:apache::thrift::transport::TPipedTransport
wait	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  void wait(int64_t timeout_ms) {$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
wait	thrift/include/thrift/concurrency/StdMonitor.cpp	/^void Monitor::wait(int64_t timeout) const {$/;"	f	class:apache::thrift::concurrency::Monitor
waitForTime	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  int waitForTime(const THRIFT_TIMESPEC* abstime) {$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
waitForTime	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  int waitForTime(const struct timeval* abstime) {$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
waitForTime	thrift/include/thrift/concurrency/StdMonitor.cpp	/^int Monitor::waitForTime(const THRIFT_TIMESPEC* abstime) const {$/;"	f	class:apache::thrift::concurrency::Monitor
waitForTime	thrift/include/thrift/concurrency/StdMonitor.cpp	/^int Monitor::waitForTime(const timeval* abstime) const {$/;"	f	class:apache::thrift::concurrency::Monitor
waitForTimeRelative	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  int waitForTimeRelative(int64_t timeout_ms) {$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
waitForTimeRelative	thrift/include/thrift/concurrency/StdMonitor.cpp	/^int Monitor::waitForTimeRelative(int64_t timeout_ms) const {$/;"	f	class:apache::thrift::concurrency::Monitor
waitForever	thrift/include/thrift/concurrency/StdMonitor.cpp	/^  int waitForever() {$/;"	f	class:apache::thrift::concurrency::Monitor::Impl
waitForever	thrift/include/thrift/concurrency/StdMonitor.cpp	/^int Monitor::waitForever() const {$/;"	f	class:apache::thrift::concurrency::Monitor
wakeupSomeone_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  bool wakeupSomeone_;$/;"	m	class:apache::thrift::async::TConcurrentClientSyncInfo
what	gen-cpp/tutorial_types.cpp	/^const char* InvalidOperation::what() const throw() {$/;"	f	class:tutorial::InvalidOperation
what	thrift/include/thrift/TApplicationException.h	/^  virtual const char* what() const throw() {$/;"	f	class:apache::thrift::TApplicationException
what	thrift/include/thrift/Thrift.h	/^  virtual const char* what() const throw() {$/;"	f	class:apache::thrift::TException
what	thrift/include/thrift/protocol/TProtocolException.h	/^  virtual const char* what() const throw() {$/;"	f	class:apache::thrift::protocol::TProtocolException
what	thrift/include/thrift/transport/TSSLSocket.h	/^  virtual const char* what() const throw() {$/;"	f	class:apache::thrift::transport::TSSLException
whatOp	gen-cpp/tutorial_types.h	/^  bool whatOp :1;$/;"	m	struct:tutorial::_InvalidOperation__isset
whatOp	gen-cpp/tutorial_types.h	/^  int32_t whatOp;$/;"	m	class:tutorial::InvalidOperation
why	gen-cpp/tutorial_types.h	/^  bool why :1;$/;"	m	struct:tutorial::_InvalidOperation__isset
why	gen-cpp/tutorial_types.h	/^  std::string why;$/;"	m	class:tutorial::InvalidOperation
write	gen-cpp/Calculator.cpp	/^uint32_t Calculator_add_args::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::Calculator_add_args
write	gen-cpp/Calculator.cpp	/^uint32_t Calculator_add_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::Calculator_add_pargs
write	gen-cpp/Calculator.cpp	/^uint32_t Calculator_add_result::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::Calculator_add_result
write	gen-cpp/Calculator.cpp	/^uint32_t Calculator_calculate_args::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::Calculator_calculate_args
write	gen-cpp/Calculator.cpp	/^uint32_t Calculator_calculate_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::Calculator_calculate_pargs
write	gen-cpp/Calculator.cpp	/^uint32_t Calculator_calculate_result::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::Calculator_calculate_result
write	gen-cpp/Calculator.cpp	/^uint32_t Calculator_ping_args::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::Calculator_ping_args
write	gen-cpp/Calculator.cpp	/^uint32_t Calculator_ping_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::Calculator_ping_pargs
write	gen-cpp/Calculator.cpp	/^uint32_t Calculator_ping_result::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::Calculator_ping_result
write	gen-cpp/Calculator.cpp	/^uint32_t Calculator_zip_args::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::Calculator_zip_args
write	gen-cpp/Calculator.cpp	/^uint32_t Calculator_zip_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::Calculator_zip_pargs
write	gen-cpp/SharedService.cpp	/^uint32_t SharedService_getStruct_args::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:shared::SharedService_getStruct_args
write	gen-cpp/SharedService.cpp	/^uint32_t SharedService_getStruct_pargs::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:shared::SharedService_getStruct_pargs
write	gen-cpp/SharedService.cpp	/^uint32_t SharedService_getStruct_result::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:shared::SharedService_getStruct_result
write	gen-cpp/shared_types.cpp	/^uint32_t SharedStruct::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:shared::SharedStruct
write	gen-cpp/tutorial_types.cpp	/^uint32_t InvalidOperation::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::InvalidOperation
write	gen-cpp/tutorial_types.cpp	/^uint32_t Work::write(::apache::thrift::protocol::TProtocol* oprot) const {$/;"	f	class:tutorial::Work
write	thrift/include/thrift/transport/TBufferTransports.h	/^  void write(const uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TBufferBase
write	thrift/include/thrift/transport/TShortReadTransport.h	/^  void write(const uint8_t* buf, uint32_t len) { transport_->write(buf, len); }$/;"	f	class:apache::thrift::transport::test::TShortReadTransport
write	thrift/include/thrift/transport/TTransport.h	/^  void write(const uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TTransport
write	thrift/include/thrift/transport/TTransportUtils.h	/^  void write(const uint8_t* \/* buf *\/, uint32_t \/* len *\/) { return; }$/;"	f	class:apache::thrift::transport::TNullTransport
write	thrift/include/thrift/transport/TVirtualTransport.h	/^  void write(const uint8_t* buf, uint32_t len) { this->TTransport::write_virt(buf, len); }$/;"	f	class:apache::thrift::transport::TTransportDefaults
writeBinary	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeBinary(const std::string& str) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeBinary	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeBinary(const std::string& str) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeBinary_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeBinary_virt(const std::string& str) { return protocol->writeBinary(str); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeBinary_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeBinary_virt(const std::string& str) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeBool	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeBool(const bool value) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeBool	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeBool(const bool value) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeBool_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeBool_virt(const bool value) { return protocol->writeBool(value); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeBool_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeBool_virt(const bool value) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeBufferDefaultSize_	thrift/include/thrift/server/TNonblockingServer.h	/^  size_t writeBufferDefaultSize_;$/;"	m	class:apache::thrift::server::TNonblockingServer
writeBuffer_	thrift/include/thrift/transport/THttpTransport.h	/^  TMemoryBuffer writeBuffer_;$/;"	m	class:apache::thrift::transport::THttpTransport
writeByte	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeByte(const int8_t byte) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeByte	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeByte(const int8_t byte) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeByte_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeByte_virt(const int8_t byte) { return protocol->writeByte(byte); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeByte_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeByte_virt(const int8_t byte) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeDouble	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeDouble(const double dub) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeDouble	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeDouble(const double dub) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeDouble_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeDouble_virt(const double dub) { return protocol->writeDouble(dub); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeDouble_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeDouble_virt(const double dub) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeEnd	thrift/include/thrift/transport/TBufferTransports.h	/^  uint32_t writeEnd() {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
writeEnd	thrift/include/thrift/transport/TTransport.h	/^  virtual uint32_t writeEnd() {$/;"	f	class:apache::thrift::transport::TTransport
writeEnd	thrift/include/thrift/transport/TTransportUtils.h	/^  uint32_t writeEnd() {$/;"	f	class:apache::thrift::transport::TPipedTransport
writeFieldBegin	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeFieldBegin(const char* name, const TType fieldType, const int16_t fieldId) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeFieldBegin	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeFieldBegin(const char* name, const TType fieldType, const int16_t fieldId) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeFieldBegin_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeFieldBegin_virt(const char* name,$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeFieldBegin_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeFieldBegin_virt(const char* name,$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeFieldEnd	thrift/include/thrift/protocol/TCompactProtocol.h	/^  uint32_t writeFieldEnd() { return 0; }$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
writeFieldEnd	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeFieldEnd() {$/;"	f	class:apache::thrift::protocol::TProtocol
writeFieldEnd	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeFieldEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeFieldEnd_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeFieldEnd_virt() { return protocol->writeFieldEnd(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeFieldEnd_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeFieldEnd_virt() { return static_cast<Protocol_*>(this)->writeFieldEnd(); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeFieldStop	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeFieldStop() {$/;"	f	class:apache::thrift::protocol::TProtocol
writeFieldStop	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeFieldStop() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeFieldStop_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeFieldStop_virt() { return protocol->writeFieldStop(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeFieldStop_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeFieldStop_virt() { return static_cast<Protocol_*>(this)->writeFieldStop(); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeI16	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeI16(const int16_t i16) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeI16	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeI16(const int16_t i16) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeI16_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeI16_virt(const int16_t i16) { return protocol->writeI16(i16); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeI16_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeI16_virt(const int16_t i16) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeI32	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeI32(const int32_t i32) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeI32	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeI32(const int32_t i32) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeI32_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeI32_virt(const int32_t i32) { return protocol->writeI32(i32); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeI32_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeI32_virt(const int32_t i32) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeI64	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeI64(const int64_t i64) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeI64	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeI64(const int64_t i64) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeI64_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeI64_virt(const int64_t i64) { return protocol->writeI64(i64); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeI64_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeI64_virt(const int64_t i64) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeListBegin	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeListBegin(const TType elemType, const uint32_t size) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeListBegin	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeListBegin(const TType elemType, const uint32_t size) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeListBegin_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeListBegin_virt(const TType elemType, const uint32_t size) {$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeListBegin_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeListBegin_virt(const TType elemType, const uint32_t size) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeListEnd	thrift/include/thrift/protocol/TCompactProtocol.h	/^  uint32_t writeListEnd() { return 0; }$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
writeListEnd	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeListEnd() {$/;"	f	class:apache::thrift::protocol::TProtocol
writeListEnd	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeListEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeListEnd_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeListEnd_virt() { return protocol->writeListEnd(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeListEnd_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeListEnd_virt() { return static_cast<Protocol_*>(this)->writeListEnd(); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeMapBegin	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeMapBegin(const TType keyType, const TType valType, const uint32_t size) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeMapBegin	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeMapBegin(const TType keyType, const TType valType, const uint32_t size) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeMapBegin_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeMapBegin_virt(const TType keyType,$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeMapBegin_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeMapBegin_virt(const TType keyType,$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeMapEnd	thrift/include/thrift/protocol/TCompactProtocol.h	/^  uint32_t writeMapEnd() { return 0; }$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
writeMapEnd	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeMapEnd() {$/;"	f	class:apache::thrift::protocol::TProtocol
writeMapEnd	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeMapEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeMapEnd_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeMapEnd_virt() { return protocol->writeMapEnd(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeMapEnd_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeMapEnd_virt() { return static_cast<Protocol_*>(this)->writeMapEnd(); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeMessageBegin	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeMessageBegin(const std::string& name,$/;"	f	class:apache::thrift::protocol::TProtocol
writeMessageBegin	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeMessageBegin(const std::string& name,$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeMessageBegin_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeMessageBegin_virt(const std::string& name,$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeMessageBegin_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeMessageBegin_virt(const std::string& name,$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeMessageEnd	thrift/include/thrift/protocol/TCompactProtocol.h	/^  virtual uint32_t writeMessageEnd() { return 0; }$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
writeMessageEnd	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeMessageEnd() {$/;"	f	class:apache::thrift::protocol::TProtocol
writeMessageEnd	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeMessageEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeMessageEnd_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeMessageEnd_virt() { return protocol->writeMessageEnd(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeMessageEnd_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeMessageEnd_virt() {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeMutex_	thrift/include/thrift/async/TConcurrentClientSyncInfo.h	/^  ::apache::thrift::concurrency::Mutex writeMutex_;$/;"	m	class:apache::thrift::async::TConcurrentClientSyncInfo
writePoint_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t writePoint_;$/;"	m	class:apache::thrift::transport::TFileTransportBuffer
writeSetBegin	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeSetBegin(const TType elemType, const uint32_t size) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeSetBegin	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeSetBegin(const TType elemType, const uint32_t size) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeSetBegin_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeSetBegin_virt(const TType elemType, const uint32_t size) {$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeSetBegin_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeSetBegin_virt(const TType elemType, const uint32_t size) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeSetEnd	thrift/include/thrift/protocol/TCompactProtocol.h	/^  uint32_t writeSetEnd() { return 0; }$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
writeSetEnd	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeSetEnd() {$/;"	f	class:apache::thrift::protocol::TProtocol
writeSetEnd	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeSetEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeSetEnd_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeSetEnd_virt() { return protocol->writeSetEnd(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeSetEnd_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeSetEnd_virt() { return static_cast<Protocol_*>(this)->writeSetEnd(); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeString	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeString(const std::string& str) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeString	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeString(const std::string& str) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeString_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeString_virt(const std::string& str) { return protocol->writeString(str); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeString_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeString_virt(const std::string& str) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeStructBegin	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeStructBegin(const char* name) {$/;"	f	class:apache::thrift::protocol::TProtocol
writeStructBegin	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeStructBegin(const char* name) {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeStructBegin_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeStructBegin_virt(const char* name) {$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeStructBegin_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeStructBegin_virt(const char* name) {$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
writeStructEnd	thrift/include/thrift/protocol/TProtocol.h	/^  uint32_t writeStructEnd() {$/;"	f	class:apache::thrift::protocol::TProtocol
writeStructEnd	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  uint32_t writeStructEnd() {$/;"	f	class:apache::thrift::protocol::TProtocolDefaults
writeStructEnd_virt	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual uint32_t writeStructEnd_virt() { return protocol->writeStructEnd(); }$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
writeStructEnd_virt	thrift/include/thrift/protocol/TVirtualProtocol.h	/^  virtual uint32_t writeStructEnd_virt() { return static_cast<Protocol_*>(this)->writeStructEnd(); }$/;"	f	class:apache::thrift::protocol::TVirtualProtocol
write_state_	thrift/include/thrift/protocol/TDebugProtocol.h	/^  std::vector<write_state_t> write_state_;$/;"	m	class:apache::thrift::protocol::TDebugProtocol
write_state_t	thrift/include/thrift/protocol/TDebugProtocol.h	/^  enum write_state_t { UNINIT, STRUCT, LIST, SET, MAP_KEY, MAP_VALUE };$/;"	g	class:apache::thrift::protocol::TDebugProtocol
write_virt	thrift/include/thrift/transport/TFileTransport.h	/^  virtual void write_virt(const uint8_t* buf, uint32_t len) { this->write(buf, len); }$/;"	f	class:apache::thrift::transport::TFileTransport
write_virt	thrift/include/thrift/transport/TTransport.h	/^  virtual void write_virt(const uint8_t* \/* buf *\/, uint32_t \/* len *\/) {$/;"	f	class:apache::thrift::transport::TTransport
write_virt	thrift/include/thrift/transport/TTransportUtils.h	/^  virtual void write_virt(const uint8_t* buf, uint32_t len) { this->write(buf, len); }$/;"	f	class:apache::thrift::transport::TPipedFileReaderTransport
write_virt	thrift/include/thrift/transport/TTransportUtils.h	/^  virtual void write_virt(const uint8_t* buf, uint32_t len) { this->write(buf, len); }$/;"	f	class:apache::thrift::transport::TPipedTransport
write_virt	thrift/include/thrift/transport/TVirtualTransport.h	/^  virtual void write_virt(const uint8_t* buf, uint32_t len) {$/;"	f	class:apache::thrift::transport::TVirtualTransport
writerThreadIOErrorSleepTime_	thrift/include/thrift/transport/TFileTransport.h	/^  uint32_t writerThreadIOErrorSleepTime_;$/;"	m	class:apache::thrift::transport::TFileTransport
writerThread_	thrift/include/thrift/transport/TFileTransport.h	/^  boost::shared_ptr<apache::thrift::concurrency::Thread> writerThread_;$/;"	m	class:apache::thrift::transport::TFileTransport
writerWaiting_	thrift/include/thrift/concurrency/Mutex.h	/^  mutable volatile bool writerWaiting_;$/;"	m	class:apache::thrift::concurrency::NoStarveReadWriteMutex
wstream_	thrift/include/thrift/transport/TZlibTransport.h	/^  struct z_stream_s* wstream_;$/;"	m	class:apache::thrift::transport::TZlibTransport	typeref:struct:apache::thrift::transport::TZlibTransport::z_stream_s
zip	CppServer.cpp	/^  void zip() { cout << "zip()" << endl; }$/;"	f	class:CalculatorHandler
zip	gen-cpp/Calculator.cpp	/^void CalculatorClient::zip()$/;"	f	class:tutorial::CalculatorClient
zip	gen-cpp/Calculator.cpp	/^void CalculatorConcurrentClient::zip()$/;"	f	class:tutorial::CalculatorConcurrentClient
zip	gen-cpp/Calculator.h	/^  void zip() {$/;"	f	class:tutorial::CalculatorMultiface
zip	gen-cpp/Calculator.h	/^  void zip() {$/;"	f	class:tutorial::CalculatorNull
zip	gen-cpp/Calculator_server.skeleton.cpp	/^  void zip() {$/;"	f	class:CalculatorHandler
zlib_msg_	thrift/include/thrift/transport/TZlibTransport.h	/^  std::string zlib_msg_;$/;"	m	class:apache::thrift::transport::TZlibTransportException
zlib_status_	thrift/include/thrift/transport/TZlibTransport.h	/^  int zlib_status_;$/;"	m	class:apache::thrift::transport::TZlibTransportException
~AccessManager	thrift/include/thrift/transport/TSSLSocket.h	/^  virtual ~AccessManager() {}$/;"	f	class:apache::thrift::transport::AccessManager
~CalculatorCloneFactory	CppServer.cpp	/^  virtual ~CalculatorCloneFactory() {}$/;"	f	class:CalculatorCloneFactory
~CalculatorIf	gen-cpp/Calculator.h	/^  virtual ~CalculatorIf() {}$/;"	f	class:tutorial::CalculatorIf
~CalculatorIfFactory	gen-cpp/Calculator.h	/^  virtual ~CalculatorIfFactory() {}$/;"	f	class:tutorial::CalculatorIfFactory
~CalculatorIfSingletonFactory	gen-cpp/Calculator.h	/^  virtual ~CalculatorIfSingletonFactory() {}$/;"	f	class:tutorial::CalculatorIfSingletonFactory
~CalculatorMultiface	gen-cpp/Calculator.h	/^  virtual ~CalculatorMultiface() {}$/;"	f	class:tutorial::CalculatorMultiface
~CalculatorNull	gen-cpp/Calculator.h	/^  virtual ~CalculatorNull() {}$/;"	f	class:tutorial::CalculatorNull
~CalculatorProcessor	gen-cpp/Calculator.h	/^  virtual ~CalculatorProcessor() {}$/;"	f	class:tutorial::CalculatorProcessor
~Calculator_add_args	gen-cpp/Calculator.cpp	/^Calculator_add_args::~Calculator_add_args() throw() {$/;"	f	class:tutorial::Calculator_add_args
~Calculator_add_pargs	gen-cpp/Calculator.cpp	/^Calculator_add_pargs::~Calculator_add_pargs() throw() {$/;"	f	class:tutorial::Calculator_add_pargs
~Calculator_add_presult	gen-cpp/Calculator.cpp	/^Calculator_add_presult::~Calculator_add_presult() throw() {$/;"	f	class:tutorial::Calculator_add_presult
~Calculator_add_result	gen-cpp/Calculator.cpp	/^Calculator_add_result::~Calculator_add_result() throw() {$/;"	f	class:tutorial::Calculator_add_result
~Calculator_calculate_args	gen-cpp/Calculator.cpp	/^Calculator_calculate_args::~Calculator_calculate_args() throw() {$/;"	f	class:tutorial::Calculator_calculate_args
~Calculator_calculate_pargs	gen-cpp/Calculator.cpp	/^Calculator_calculate_pargs::~Calculator_calculate_pargs() throw() {$/;"	f	class:tutorial::Calculator_calculate_pargs
~Calculator_calculate_presult	gen-cpp/Calculator.cpp	/^Calculator_calculate_presult::~Calculator_calculate_presult() throw() {$/;"	f	class:tutorial::Calculator_calculate_presult
~Calculator_calculate_result	gen-cpp/Calculator.cpp	/^Calculator_calculate_result::~Calculator_calculate_result() throw() {$/;"	f	class:tutorial::Calculator_calculate_result
~Calculator_ping_args	gen-cpp/Calculator.cpp	/^Calculator_ping_args::~Calculator_ping_args() throw() {$/;"	f	class:tutorial::Calculator_ping_args
~Calculator_ping_pargs	gen-cpp/Calculator.cpp	/^Calculator_ping_pargs::~Calculator_ping_pargs() throw() {$/;"	f	class:tutorial::Calculator_ping_pargs
~Calculator_ping_presult	gen-cpp/Calculator.cpp	/^Calculator_ping_presult::~Calculator_ping_presult() throw() {$/;"	f	class:tutorial::Calculator_ping_presult
~Calculator_ping_result	gen-cpp/Calculator.cpp	/^Calculator_ping_result::~Calculator_ping_result() throw() {$/;"	f	class:tutorial::Calculator_ping_result
~Calculator_zip_args	gen-cpp/Calculator.cpp	/^Calculator_zip_args::~Calculator_zip_args() throw() {$/;"	f	class:tutorial::Calculator_zip_args
~Calculator_zip_pargs	gen-cpp/Calculator.cpp	/^Calculator_zip_pargs::~Calculator_zip_pargs() throw() {$/;"	f	class:tutorial::Calculator_zip_pargs
~Guard	thrift/include/thrift/concurrency/Mutex.h	/^  ~Guard() {$/;"	f	class:apache::thrift::concurrency::Guard
~InvalidOperation	gen-cpp/tutorial_types.cpp	/^InvalidOperation::~InvalidOperation() throw() {$/;"	f	class:tutorial::InvalidOperation
~Monitor	thrift/include/thrift/concurrency/StdMonitor.cpp	/^Monitor::~Monitor() {$/;"	f	class:apache::thrift::concurrency::Monitor
~Mutex	thrift/include/thrift/concurrency/Mutex.h	/^  virtual ~Mutex() {}$/;"	f	class:apache::thrift::concurrency::Mutex
~RWGuard	thrift/include/thrift/concurrency/Mutex.h	/^  ~RWGuard() { rw_mutex_.release(); }$/;"	f	class:apache::thrift::concurrency::RWGuard
~ReadWriteMutex	thrift/include/thrift/concurrency/Mutex.h	/^  virtual ~ReadWriteMutex() {}$/;"	f	class:apache::thrift::concurrency::ReadWriteMutex
~Runnable	thrift/include/thrift/concurrency/Thread.h	/^  virtual ~Runnable(){};$/;"	f	class:apache::thrift::concurrency::Runnable
~SharedServiceIf	gen-cpp/SharedService.h	/^  virtual ~SharedServiceIf() {}$/;"	f	class:shared::SharedServiceIf
~SharedServiceIfFactory	gen-cpp/SharedService.h	/^  virtual ~SharedServiceIfFactory() {}$/;"	f	class:shared::SharedServiceIfFactory
~SharedServiceIfSingletonFactory	gen-cpp/SharedService.h	/^  virtual ~SharedServiceIfSingletonFactory() {}$/;"	f	class:shared::SharedServiceIfSingletonFactory
~SharedServiceMultiface	gen-cpp/SharedService.h	/^  virtual ~SharedServiceMultiface() {}$/;"	f	class:shared::SharedServiceMultiface
~SharedServiceNull	gen-cpp/SharedService.h	/^  virtual ~SharedServiceNull() {}$/;"	f	class:shared::SharedServiceNull
~SharedServiceProcessor	gen-cpp/SharedService.h	/^  virtual ~SharedServiceProcessor() {}$/;"	f	class:shared::SharedServiceProcessor
~SharedService_getStruct_args	gen-cpp/SharedService.cpp	/^SharedService_getStruct_args::~SharedService_getStruct_args() throw() {$/;"	f	class:shared::SharedService_getStruct_args
~SharedService_getStruct_pargs	gen-cpp/SharedService.cpp	/^SharedService_getStruct_pargs::~SharedService_getStruct_pargs() throw() {$/;"	f	class:shared::SharedService_getStruct_pargs
~SharedService_getStruct_presult	gen-cpp/SharedService.cpp	/^SharedService_getStruct_presult::~SharedService_getStruct_presult() throw() {$/;"	f	class:shared::SharedService_getStruct_presult
~SharedService_getStruct_result	gen-cpp/SharedService.cpp	/^SharedService_getStruct_result::~SharedService_getStruct_result() throw() {$/;"	f	class:shared::SharedService_getStruct_result
~SharedStruct	gen-cpp/shared_types.cpp	/^SharedStruct::~SharedStruct() throw() {$/;"	f	class:shared::SharedStruct
~StatsProcessor	thrift/include/thrift/processor/StatsProcessor.h	/^  virtual ~StatsProcessor(){};$/;"	f	class:apache::thrift::processor::StatsProcessor
~StdThread	thrift/include/thrift/concurrency/StdThreadFactory.cpp	/^  ~StdThread() {$/;"	f	class:apache::thrift::concurrency::StdThread
~TApplicationException	thrift/include/thrift/TApplicationException.h	/^  virtual ~TApplicationException() throw() {}$/;"	f	class:apache::thrift::TApplicationException
~TAsyncBufferProcessor	thrift/include/thrift/async/TAsyncBufferProcessor.h	/^  virtual ~TAsyncBufferProcessor() {}$/;"	f	class:apache::thrift::async::TAsyncBufferProcessor
~TAsyncChannel	thrift/include/thrift/async/TAsyncChannel.h	/^  virtual ~TAsyncChannel() {}$/;"	f	class:apache::thrift::async::TAsyncChannel
~TAsyncProcessor	thrift/include/thrift/async/TAsyncProcessor.h	/^  virtual ~TAsyncProcessor() {}$/;"	f	class:apache::thrift::async::TAsyncProcessor
~TAsyncProcessorFactory	thrift/include/thrift/async/TAsyncProcessor.h	/^  virtual ~TAsyncProcessorFactory() {}$/;"	f	class:apache::thrift::async::TAsyncProcessorFactory
~TAsyncProtocolProcessor	thrift/include/thrift/async/TAsyncProtocolProcessor.h	/^  virtual ~TAsyncProtocolProcessor() {}$/;"	f	class:apache::thrift::async::TAsyncProtocolProcessor
~TBase	thrift/include/thrift/TBase.h	/^  virtual ~TBase(){};$/;"	f	class:apache::thrift::TBase
~TBinaryProtocolFactoryT	thrift/include/thrift/protocol/TBinaryProtocol.h	/^  virtual ~TBinaryProtocolFactoryT() {}$/;"	f	class:apache::thrift::protocol::TBinaryProtocolFactoryT
~TBufferBase	thrift/include/thrift/transport/TBufferTransports.h	/^  virtual ~TBufferBase() {}$/;"	f	class:apache::thrift::transport::TBufferBase
~TBufferedTransportFactory	thrift/include/thrift/transport/TBufferTransports.h	/^  virtual ~TBufferedTransportFactory() {}$/;"	f	class:apache::thrift::transport::TBufferedTransportFactory
~TCompactProtocolFactoryT	thrift/include/thrift/protocol/TCompactProtocol.h	/^  virtual ~TCompactProtocolFactoryT() {}$/;"	f	class:apache::thrift::protocol::TCompactProtocolFactoryT
~TCompactProtocolT	thrift/include/thrift/protocol/TCompactProtocol.h	/^  ~TCompactProtocolT() { free(string_buf_); }$/;"	f	class:apache::thrift::protocol::TCompactProtocolT
~TDebugProtocolFactory	thrift/include/thrift/protocol/TDebugProtocol.h	/^  virtual ~TDebugProtocolFactory() {}$/;"	f	class:apache::thrift::protocol::TDebugProtocolFactory
~TDelayedException	thrift/include/thrift/Thrift.h	/^  virtual ~TDelayedException(){};$/;"	f	class:apache::thrift::TDelayedException
~TException	thrift/include/thrift/Thrift.h	/^  virtual ~TException() throw() {}$/;"	f	class:apache::thrift::TException
~TFDTransport	thrift/include/thrift/transport/TFDTransport.h	/^  ~TFDTransport() {$/;"	f	class:apache::thrift::transport::TFDTransport
~TFramedTransportFactory	thrift/include/thrift/transport/TBufferTransports.h	/^  virtual ~TFramedTransportFactory() {}$/;"	f	class:apache::thrift::transport::TFramedTransportFactory
~THttpServerTransportFactory	thrift/include/thrift/transport/THttpServer.h	/^  virtual ~THttpServerTransportFactory() {}$/;"	f	class:apache::thrift::transport::THttpServerTransportFactory
~TInputRecursionTracker	thrift/include/thrift/protocol/TProtocol.h	/^  ~TInputRecursionTracker() {$/;"	f	struct:apache::thrift::protocol::TInputRecursionTracker
~TJSONProtocolFactory	thrift/include/thrift/protocol/TJSONProtocol.h	/^  virtual ~TJSONProtocolFactory() {}$/;"	f	class:apache::thrift::protocol::TJSONProtocolFactory
~TMemoryBuffer	thrift/include/thrift/transport/TBufferTransports.h	/^  ~TMemoryBuffer() {$/;"	f	class:apache::thrift::transport::TMemoryBuffer
~TMultiplexedProtocol	thrift/include/thrift/protocol/TMultiplexedProtocol.h	/^  virtual ~TMultiplexedProtocol() {}$/;"	f	class:apache::thrift::protocol::TMultiplexedProtocol
~TNullTransport	thrift/include/thrift/transport/TTransportUtils.h	/^  ~TNullTransport() {}$/;"	f	class:apache::thrift::transport::TNullTransport
~TOutputRecursionTracker	thrift/include/thrift/protocol/TProtocol.h	/^  ~TOutputRecursionTracker() {$/;"	f	struct:apache::thrift::protocol::TOutputRecursionTracker
~TPipedFileReaderTransportFactory	thrift/include/thrift/transport/TTransportUtils.h	/^  virtual ~TPipedFileReaderTransportFactory() {}$/;"	f	class:apache::thrift::transport::TPipedFileReaderTransportFactory
~TPipedTransport	thrift/include/thrift/transport/TTransportUtils.h	/^  ~TPipedTransport() {$/;"	f	class:apache::thrift::transport::TPipedTransport
~TPipedTransportFactory	thrift/include/thrift/transport/TTransportUtils.h	/^  virtual ~TPipedTransportFactory() {}$/;"	f	class:apache::thrift::transport::TPipedTransportFactory
~TProcessor	thrift/include/thrift/TProcessor.h	/^  virtual ~TProcessor() {}$/;"	f	class:apache::thrift::TProcessor
~TProcessorContextFreer	thrift/include/thrift/TProcessor.h	/^  ~TProcessorContextFreer() {$/;"	f	class:apache::thrift::TProcessorContextFreer
~TProcessorEventHandler	thrift/include/thrift/TProcessor.h	/^  virtual ~TProcessorEventHandler() {}$/;"	f	class:apache::thrift::TProcessorEventHandler
~TProcessorFactory	thrift/include/thrift/TProcessor.h	/^  virtual ~TProcessorFactory() {}$/;"	f	class:apache::thrift::TProcessorFactory
~TProtocolDecorator	thrift/include/thrift/protocol/TProtocolDecorator.h	/^  virtual ~TProtocolDecorator() {}$/;"	f	class:apache::thrift::protocol::TProtocolDecorator
~TProtocolException	thrift/include/thrift/protocol/TProtocolException.h	/^  virtual ~TProtocolException() throw() {}$/;"	f	class:apache::thrift::protocol::TProtocolException
~TServer	thrift/include/thrift/server/TServer.h	/^  virtual ~TServer() {}$/;"	f	class:apache::thrift::server::TServer
~TServerEventHandler	thrift/include/thrift/server/TServer.h	/^  virtual ~TServerEventHandler() {}$/;"	f	class:apache::thrift::server::TServerEventHandler
~TServerTransport	thrift/include/thrift/transport/TServerTransport.h	/^  virtual ~TServerTransport() {}$/;"	f	class:apache::thrift::transport::TServerTransport
~TTransport	thrift/include/thrift/transport/TTransport.h	/^  virtual ~TTransport() {}$/;"	f	class:apache::thrift::transport::TTransport
~TTransportException	thrift/include/thrift/transport/TTransportException.h	/^  virtual ~TTransportException() throw() {}$/;"	f	class:apache::thrift::transport::TTransportException
~TTransportFactory	thrift/include/thrift/transport/TTransport.h	/^  virtual ~TTransportFactory() {}$/;"	f	class:apache::thrift::transport::TTransportFactory
~TZlibTransportException	thrift/include/thrift/transport/TZlibTransport.h	/^  virtual ~TZlibTransportException() throw() {}$/;"	f	class:apache::thrift::transport::TZlibTransportException
~TZlibTransportFactory	thrift/include/thrift/transport/TZlibTransport.h	/^  virtual ~TZlibTransportFactory() {}$/;"	f	class:apache::thrift::transport::TZlibTransportFactory
~Thread	thrift/include/thrift/concurrency/Thread.h	/^  virtual ~Thread(){};$/;"	f	class:apache::thrift::concurrency::Thread
~ThreadFactory	thrift/include/thrift/concurrency/Thread.h	/^  virtual ~ThreadFactory() {}$/;"	f	class:apache::thrift::concurrency::ThreadFactory
~ThreadManager	thrift/include/thrift/concurrency/ThreadManager.h	/^  virtual ~ThreadManager() {}$/;"	f	class:apache::thrift::concurrency::ThreadManager
~Work	gen-cpp/tutorial_types.cpp	/^Work::~Work() throw() {$/;"	f	class:tutorial::Work
~eventInfo	thrift/include/thrift/transport/TFileTransport.h	/^  ~eventInfo() {$/;"	f	struct:apache::thrift::transport::eventInfo
~readState	thrift/include/thrift/transport/TFileTransport.h	/^  ~readState() {$/;"	f	struct:apache::thrift::transport::readState
